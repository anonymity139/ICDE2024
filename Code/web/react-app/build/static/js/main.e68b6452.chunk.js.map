{"version":3,"sources":["imgs/favorite.png","imgs/SelectCatAttr.png","actions/index.js","reducers/index.js","utils.js","components/Welcome.js","components/AlgSelection.js","components/Introduction.js","components/PhaseOne.js","components/Question.js","components/Histogram.js","components/three.js","components/ConvexHull.js","components/Legend.js","components/PreferenceSpace.js","components/Visuals.js","components/Stats.js","components/PhaseTwo.js","components/Result.js","components/SPTree.js","components/HistogramForR.js","components/GEGraph.js","components/End.js","components/ResultGraph.js","components/App.js","index.js","imgs/MainTitle.png","imgs/TitleTree.png","imgs/TitleGraph.png"],"names":["module","exports","__webpack_require__","p","setActiveComponent","component","type","setCandidates","candidates","toggleMask","attr","val","mask","_defineProperty","prunePoints","indices","step","setLeftPoints","changeMode","mode","updateConvexHull","vertices","combineReducers","activeComponent","state","arguments","length","undefined","action","points","labels","attributes","forEach","_ref","_ref2","_slicedToArray","_objectSpread","prunedPoints","map","idx","concat","_toConsumableArray","leftPoints","filter","indexOf","numLeftPoints","prev","scores","userName","name","userEmail","email","interactionResults","radius","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","loadCarDataset","_asyncToGenerator","_callee","pointsURL","response","text","cars","_context","fetch","trim","split","line","parts","strings","numbers","part","_x","apply","selectCandidates","ranges","maxPoints","low","high","point","j","isValid","selectCatonlyCandidates","seen","Set","tuple","tupleStr","JSON","stringify","has","add","array2Vector2D","array","vector","window","Module","VecVecDouble","arr","vec","VectorDouble","x","push_back","delete","vector2Array","size","get","dominates","p1","p2","smallerBetter","isSelected","at","getSkyline","dominated","m","index","console","log","sl","Array","pt","skyline","Welcome","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","_key","selectedAlgorithm","props","handleStart","_this$props$attribute","_this$props$attribute2","config","range","str","inputs","current","alert","parseFloat","test","parseInt","includes","_ref3","_ref4","startAlgorithmGEGraph","startAlgorithmSPTree","handleChange","event","target","setState","_ref5","_ref6","_ref7","_ref8","isCatAble","abled","isNumAble","_createClass","_this2","_ref9","_ref10","React","createRef","categoricalValues","catAttrs","createElement","className","style","textDecoration","join","checked","onChange","cursor","numAttrs","_ref11","_ref12","placeholder","ref","disabled","numTuple","colSpan","width","algorithmChoose","id","htmlFor","maxWidth","alt","src","MainTitle","background","borderRadius","textAlign","padding","boxShadow","onClick","Component","connect","_ref13","dispatch","changeK","K","setDataset","handleSPTree","SPTree","handleGEGraph","GEGraph","Introduction","start","handleModeChange","fontSize","PhaseTwo","SIMPLEX","RANDOM","Question","choose","option","trs","pair","tds","toString","interRR","runner","stopInteraction","nextPair","Indicess","getRanking","Scores","getScore","setScore","showResult","VectorInt","candidatesVec","AlgorithmRunner","ths","data-toggle","title","getNumQuestion","interResults","Histogram","toggleShowMore","prevState","showMore","_onMouseLeave","hintValue","_onNearestX","data","height","FlexibleXYPlot","onMouseLeave","margin","left","right","top","bottom","XAxis","tickValues","tickFormat","ticks","fill","stroke","fontWeight","YAxis","ChartLabel","includeMargin","xPercent","yPercent","transform","textAnchor","VerticalBarSeries","color","onNearestX","animation","Hint","y","mappedData","num","THREE","require","SCALE","FACTOR","ConvexHull","drawGeometry","verPoints","vertex","scaled_vertex","_construct","Vector3","geometry","ConvexGeometry","material","MeshBasicMaterial","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","opacity","transparent","mesh","Mesh","geo","EdgesGeometry","mat","LineBasicMaterial","linewidth","wireframe","LineSegments","scene","addAxes","axes","AxesHelper","typeface","font","Font","Math","PI","sqrt","_mesh$position","_mesh$rotation","position","rotation","shape","generateShapes","ShapeBufferGeometry","side","DoubleSide","set","lines","_line$position","_line$rotation","Geometry","Line","frameId","requestAnimationFrame","animate","cancelAnimationFrame","controls","update","renderer","render","camera","mount","clientWidth","clientHeight","Scene","PerspectiveCamera","up","OrbitControls","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","prevProps","remove","dispose","removeChild","alignItems","display","backgroundColor","SlideItem","justifyContent","Legend","settings","dots","infinite","speed","slidesToShow","slidesToScroll","vertical","verticalSwiping","arrows","swipeToSlide","afterChange","changeStartingIndex","verticalAlign","slider","slickPrev","FontAwesomeIcon","icon","faAngleUp","Slider","assign","slickNext","faAngleDown","PreferenceSpace","updateContextHullVertices","convexHullVertices","vertext","vert","Visuals","Stats","toggleShowMorePrune","showMorePrune","toggleShowMoreLeft","showMoreLeft","prunedTrs","leftTrs","_this$state","classNames","table-fixed","minWidth","restart","th","attrData","carLength","numOfQuestion","prevLeftPoints","targetLevel","TreeNode","node","nodes","_ref$level","level","childNodes","child","parentId","href","dfs","tree","path","currentLevel","children","_step2","_iterator2","_createForOfIteratorHelper","s","n","e","f","findQuestion","pair1","nodeIndex","pair2","addCarToTree","car","find","generateCarTree","_step3","_iterator3","treeToNodesData","nodesData","queue","currentId","_queue$shift","shift","_step4","_iterator4","removeChildWithName","nameToRemove","referenceName","namesFound","newChildren","choice","updatedTree","updateNodesData","updatePair","TLeftTuples","getAllPaths","currentPath","_step","paths","_iterator","allLeftTuples","indexes","_loop","_allLeftTuples","_i","foundIndex","findIndex","candidate","pruneIndexes","startAgain","restartedAgain","container","document","querySelector","scrollLeft","scrollWidth","rootNode","rootAttr","TitleTree","class","HistogramForR","dcat","dnum","toggleShowMoreGraph","showMoreGraph","toggleShowMoreRange","showMoreRange","socket","disconnect","emit","integer","generateRandomNumbers","random","sort","a","b","setUtilityVec","Vec","coff","resultU","sum","coord","numUtilityVec","regenerateUtilityVec","extVec","drawGraph","setRadius","nodeVec","upper","lower","relationVec","io","on","node_vectors","node_upperBound","node_lowerBound","relation_vectors","ext_vectors","raArry","findMaxDistance","toFixed","leftpoints","initialize","point1","point2","pow","maxDistance","distance","calculateDistance","max","normCandidate","matrix","maxValues","minValues","col","maxInCol","minInCol","row","findMaxMinOfColumns","normalized","int1","int2","int3","_this3","svg","d3","selectAll","center","upperForRec","lowerForRec","bound","bb","d","append","rectangleHeight","largeRectNodes","from","_","upshow","lwshow","angle","r","cos","sin","getCirclePosition","firstHalf","secondHalf","largeNodeWidth","largeNodeHeight","label1","label2","lw","getLineEndpoints","node1","node2","x1","y1","x2","y2","relation","showLabel","show","textElement","relationVecTP","largeRects","largeRect","rel","flat","select","getBBox","_this4","vecForTable","vvvvv","ele","TitleGraph","overflow","fontFamily","border","End","AlgSelction","ResultGEGraph","Result","onRuntimeInitialized","_onRuntimeInitialized","store","createStore","rootReducer","Provider","App","getElementById","script","body"],"mappings":"mHAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uMC0C3BC,EAAqB,SAAAC,GAAS,MAAK,CAC9CC,KA3CkC,uBA4ClCD,cAGWE,EAAgB,SAAAC,GAAU,MAAK,CAC1CF,KA/C4B,iBAgD5BE,eAUWC,EAAa,SAACC,EAAMC,GAAG,MAAM,CACxCL,KAzDyB,cA0DzBM,KAAIC,YAAA,GAAKH,EAAOC,KAGLG,EAAc,SAACC,EAASC,GAAI,MAAM,CAC7CV,KA7D0B,eA8D1BS,UACAC,SAGWC,EAAgB,SAAAF,GAAO,MAAK,CACvCT,KAlE6B,kBAmE7BS,YAQWG,EAAa,SAAAC,GAAI,MAAK,CACjCb,KA3EsB,WA4EtBa,SAYWC,EAAmB,SAAAC,GAAQ,MAAK,CAC3Cf,KAvFgC,qBAwFhCe,aCoGaC,cAAgB,CAC7BC,gBAvKsB,WAA+B,IAA9BC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UAAWG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQC,EAAOtB,MACb,IDhCgC,uBCiC9B,OAAOsB,EAAOvB,UAChB,QACE,OAAOmB,IAmKXK,OA9Ja,WAA0B,IAAzBL,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClC,OAAQC,EAAOtB,MACb,IDxCuB,cCyCrB,OAAOsB,EAAOC,OAChB,QACE,OAAOL,IA0JXM,OA1Ia,WAA0B,IAAzBN,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClC,OAAQC,EAAOtB,MACb,ID7DuB,cC8DrB,OAAOsB,EAAOE,OAChB,QACE,OAAON,IAsIXO,WAjIiB,WAA0B,IAAzBP,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtC,OAAQC,EAAOtB,MACb,IDvEuB,cCwErB,OAAOsB,EAAOG,WAChB,QACE,OAAOP,IA6HXhB,WAxHiB,WAA0B,IAAzBgB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtC,OAAQC,EAAOtB,MACb,IDlF0B,iBCmFxB,OAAOsB,EAAOpB,WAChB,QACE,OAAOgB,IAoHXZ,KA/GW,WAA0B,IAAzBY,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChC,OAAQC,EAAOtB,MACb,ID3FuB,cC4FrB,IAAMM,EAAO,GAIb,OAHAgB,EAAOG,WAAWC,QAAQ,SAAAC,GAAoB,IAAAC,EAAAC,YAAAF,EAAA,GAAlBvB,EAAIwB,EAAA,GAAQA,EAAA,GACtCtB,EAAKF,GAAQ,IAERE,EACT,IDhGuB,cCiGrB,OAAAwB,YAAA,GAAYZ,EAAUI,EAAOhB,MAC/B,QACE,OAAOY,IAqGXa,aA/FmB,WAAwB,IAAvBb,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtC,OAAQC,EAAOtB,MACb,IDvGmB,UCwGjB,MAAO,GACT,ID5GwB,eC6GtB,IAAMuB,EAASD,EAAOb,QAAQuB,IAAI,SAAAC,GAAG,MAAI,CAACA,EAAKX,EAAOZ,QACtD,SAAAwB,OAAAC,YAAWZ,GAAMY,YAAKjB,IACxB,QACE,OAAOA,IAwFXkB,WAlFiB,WAAwB,IAAvBlB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAQC,EAAOtB,MACb,IDrHmB,UCsHjB,MAAO,GACT,IDzH2B,kBC0HzB,OAAOsB,EAAOb,QAChB,ID5HwB,eC6HtB,OAAOS,EAAMmB,OAAO,SAAAJ,GAAG,OAAqC,IAAjCX,EAAOb,QAAQ6B,QAAQL,KACpD,QACE,OAAOf,IA0EXqB,cArEoB,WAAwB,IAAvBrB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvC,OAAQC,EAAOtB,MACb,IDrI2B,kBCsIzB,MAAO,CAACsB,EAAOb,QAAQW,QACzB,IDxIwB,eCyItB,IAAMoB,EAAOtB,EAAMA,EAAME,OAAS,GAClC,SAAAc,OAAAC,YAAWjB,GAAK,CAAEsB,EAAOlB,EAAOb,QAAQW,SAC1C,QACE,OAAOF,IA8DXL,KAzDW,WAA8B,IAA7BK,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,SAAUG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAQC,EAAOtB,MACb,IDjJoB,WCkJlB,OAAOsB,EAAOT,KAChB,QACE,OAAOK,IAqDXH,SAhDe,WAAwB,IAAvBG,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClC,OAAQC,EAAOtB,MACb,IDzJ8B,qBC0J5B,OAAOsB,EAAOP,SAChB,QACE,OAAOG,IA4CXuB,OA9Ja,WAA0B,IAAzBvB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClC,OAAQC,EAAOtB,MACb,ID3CqB,YC4CnB,OAAOsB,EAAOmB,OAChB,QACE,OAAOvB,IA0JXwB,SAzCe,WAA0B,IAAzBxB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAQC,EAAOtB,MACb,IDhKoB,WCiKlB,OAAOsB,EAAOqB,KAChB,QACE,OAAOzB,IAqCX0B,UAjCgB,WAA0B,IAAzB1B,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQC,EAAOtB,MACb,IDxKqB,YCyKnB,OAAOsB,EAAOuB,MAChB,QACE,OAAO3B,IA6BX4B,mBAzByB,WAA0B,IAAzB5B,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQC,EAAOtB,MACb,IDhLkC,yBCiLhC,OAAOsB,EAAOwB,mBAChB,QACE,OAAO5B,IAqBX6B,OAjMa,WAAwB,IAAvB7B,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChC,OAAQC,EAAOtB,MACb,IDdmB,UCejB,MAAO,GACT,IDRsB,aCSlB,OAAOsB,EAAOyB,OAClB,QACE,OAAO7B,qFCzBb8B,EAAA,kBAAArD,GAAA,IAAAA,EAAA,GAAAsD,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAtF,KAAA,SAAAsF,IAAAD,EAAAE,KAAAhC,EAAA+B,IAAA,MAAAf,GAAA,OAAAvE,KAAA,QAAAsF,IAAAf,IAAA5E,EAAA6E,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,EAAA,kBAAA+B,OAAA,IAAAC,EAAA3C,OAAA4C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA9C,GAAAG,EAAAmC,KAAAQ,EAAAlC,KAAA8B,EAAAI,GAAA,IAAAE,EAAAP,EAAAvC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAW,GAAA,SAAAO,EAAA/C,GAAA,0BAAAzB,QAAA,SAAAyE,GAAAhC,EAAAhB,EAAAgD,EAAA,SAAAb,GAAA,OAAAM,KAAAQ,QAAAD,EAAAb,OAAA,SAAAe,EAAAtB,EAAAuB,GAAA,IAAAC,EAAAjD,EAAAsC,KAAA,WAAAlC,MAAA,SAAAyC,EAAAb,GAAA,SAAAkB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAb,EAAAmB,EAAAC,GAAA,IAAAE,EAAAxB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAA,aAAAsB,EAAA5G,KAAA,KAAA6G,EAAAD,EAAAtB,IAAA5B,EAAAmD,EAAAnD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAmC,KAAA7B,EAAA,WAAA4C,EAAAG,QAAA/C,EAAAoD,SAAAC,KAAA,SAAArD,GAAAiD,EAAA,OAAAjD,EAAA+C,EAAAC,IAAA,SAAAnC,GAAAoC,EAAA,QAAApC,EAAAkC,EAAAC,KAAAJ,EAAAG,QAAA/C,GAAAqD,KAAA,SAAAC,GAAAH,EAAAnD,MAAAsD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAtB,KAAAqB,CAAAR,EAAAb,EAAAmB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAArB,EAAAV,EAAAE,EAAAM,GAAA,IAAA/D,EAAA,iCAAAiF,EAAAb,GAAA,iBAAApE,EAAA,UAAAgG,MAAA,iDAAAhG,EAAA,cAAAiF,EAAA,MAAAb,EAAA,OAAA6B,IAAA,IAAAlC,EAAAkB,SAAAlB,EAAAK,QAAA,KAAA8B,EAAAnC,EAAAmC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAnC,GAAA,GAAAoC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,GAAA,YAAApC,EAAAkB,OAAAlB,EAAAsC,KAAAtC,EAAAuC,MAAAvC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAAjF,EAAA,MAAAA,EAAA,YAAA+D,EAAAK,IAAAL,EAAAwC,kBAAAxC,EAAAK,SAAA,WAAAL,EAAAkB,QAAAlB,EAAAyC,OAAA,SAAAzC,EAAAK,KAAApE,EAAA,gBAAA0F,EAAAxB,EAAAX,EAAAE,EAAAM,GAAA,cAAA2B,EAAA5G,KAAA,IAAAkB,EAAA+D,EAAA0C,KAAA,6BAAAf,EAAAtB,MAAAE,EAAA,gBAAA9B,MAAAkD,EAAAtB,IAAAqC,KAAA1C,EAAA0C,MAAA,UAAAf,EAAA5G,OAAAkB,EAAA,YAAA+D,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAsB,EAAAtB,OAAA,SAAAgC,EAAAF,EAAAnC,GAAA,IAAA2C,EAAA3C,EAAAkB,SAAAiB,EAAAtD,SAAA8D,GAAA,QAAAvG,IAAA8E,EAAA,OAAAlB,EAAAmC,SAAA,eAAAQ,GAAAR,EAAAtD,SAAA+D,SAAA5C,EAAAkB,OAAA,SAAAlB,EAAAK,SAAAjE,EAAAiG,EAAAF,EAAAnC,GAAA,UAAAA,EAAAkB,SAAA,WAAAyB,IAAA3C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAAF,EAAA,aAAApC,EAAA,IAAAoB,EAAAxB,EAAAe,EAAAiB,EAAAtD,SAAAmB,EAAAK,KAAA,aAAAsB,EAAA5G,KAAA,OAAAiF,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAsB,EAAAtB,IAAAL,EAAAmC,SAAA,KAAA5B,EAAA,IAAAuC,EAAAnB,EAAAtB,IAAA,OAAAyC,IAAAJ,MAAA1C,EAAAmC,EAAAY,YAAAD,EAAArE,MAAAuB,EAAAgD,KAAAb,EAAAc,QAAA,WAAAjD,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAjE,GAAA4D,EAAAmC,SAAA,KAAA5B,GAAAuC,GAAA9C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAmC,SAAA,KAAA5B,GAAA,SAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAxC,KAAA8C,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAzB,EAAAyB,EAAAQ,YAAA,GAAAjC,EAAA5G,KAAA,gBAAA4G,EAAAtB,IAAA+C,EAAAQ,WAAAjC,EAAA,SAAA1B,EAAAN,GAAAgB,KAAA8C,WAAA,EAAAJ,OAAA,SAAA1D,EAAAlD,QAAAyG,EAAAvC,WAAAkD,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAlF,GAAA,GAAAmF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAA3H,QAAA,KAAA8H,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAA3H,QAAA,GAAAgC,EAAAmC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAAvE,MAAAqF,EAAAG,GAAAjB,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAvE,WAAArC,EAAA4G,EAAAN,MAAA,EAAAM,GAAA,OAAAA,UAAA,OAAAA,KAAAd,GAAA,SAAAA,IAAA,OAAAzD,WAAArC,EAAAsG,MAAA,UAAAlC,EAAAtC,UAAAuC,EAAApC,EAAA2C,EAAA,eAAAvC,MAAAgC,EAAArB,cAAA,IAAAf,EAAAoC,EAAA,eAAAhC,MAAA+B,EAAApB,cAAA,IAAAoB,EAAA0D,YAAAhF,EAAAuB,EAAAzB,EAAA,qBAAAtE,EAAAyJ,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAA3G,QAAAhD,EAAA6J,KAAA,SAAAH,GAAA,OAAAnG,OAAAuG,eAAAvG,OAAAuG,eAAAJ,EAAA3D,IAAA2D,EAAAK,UAAAhE,EAAAvB,EAAAkF,EAAApF,EAAA,sBAAAoF,EAAAlG,UAAAD,OAAA8B,OAAAiB,GAAAoD,GAAA1J,EAAAgK,MAAA,SAAArE,GAAA,OAAAwB,QAAAxB,IAAAY,EAAAG,EAAAlD,WAAAgB,EAAAkC,EAAAlD,UAAAY,EAAA,kBAAA6B,OAAAjG,EAAA0G,gBAAA1G,EAAAiK,MAAA,SAAAnF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,MAAAuD,SAAA,IAAAC,EAAA,IAAAzD,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAA3G,EAAAyJ,oBAAA1E,GAAAoF,IAAA7B,OAAAlB,KAAA,SAAAF,GAAA,OAAAA,EAAAc,KAAAd,EAAAnD,MAAAoG,EAAA7B,UAAA/B,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,EAAA,kBAAA+B,OAAAzB,EAAA8B,EAAA,mDAAAtG,EAAAoK,KAAA,SAAA1J,GAAA,IAAA2J,EAAA9G,OAAA7C,GAAA0J,EAAA,WAAAvG,KAAAwG,EAAAD,EAAApB,KAAAnF,GAAA,OAAAuG,EAAAE,UAAA,SAAAhC,IAAA,KAAA8B,EAAA3I,QAAA,KAAAoC,EAAAuG,EAAAG,MAAA,GAAA1G,KAAAwG,EAAA,OAAA/B,EAAAvE,MAAAF,EAAAyE,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAN,MAAA,EAAAM,IAAAtI,EAAAqG,SAAAd,EAAA/B,UAAA,CAAAoG,YAAArE,EAAA4D,MAAA,SAAAqB,GAAA,GAAAvE,KAAApD,KAAA,EAAAoD,KAAAqC,KAAA,EAAArC,KAAA2B,KAAA3B,KAAA4B,WAAAnG,EAAAuE,KAAA+B,MAAA,EAAA/B,KAAAwB,SAAA,KAAAxB,KAAAO,OAAA,OAAAP,KAAAN,SAAAjE,EAAAuE,KAAA8C,WAAAhH,QAAAkH,IAAAuB,EAAA,QAAAxH,KAAAiD,KAAA,MAAAjD,EAAAyH,OAAA,IAAAhH,EAAAmC,KAAAK,KAAAjD,KAAAsG,OAAAtG,EAAA0H,MAAA,MAAAzE,KAAAjD,QAAAtB,IAAAiJ,KAAA,WAAA1E,KAAA+B,MAAA,MAAA4C,EAAA3E,KAAA8C,WAAA,GAAAG,WAAA,aAAA0B,EAAAvK,KAAA,MAAAuK,EAAAjF,IAAA,OAAAM,KAAA4E,MAAA/C,kBAAA,SAAAgD,GAAA,GAAA7E,KAAA+B,KAAA,MAAA8C,EAAA,IAAAxF,EAAAW,KAAA,SAAA8E,EAAAC,EAAAC,GAAA,OAAAhE,EAAA5G,KAAA,QAAA4G,EAAAtB,IAAAmF,EAAAxF,EAAAgD,KAAA0C,EAAAC,IAAA3F,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAjE,KAAAuJ,EAAA,QAAA1B,EAAAtD,KAAA8C,WAAAtH,OAAA,EAAA8H,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAAtC,EAAAyB,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAoC,EAAA,UAAArC,EAAAC,QAAA1C,KAAApD,KAAA,KAAAqI,EAAAzH,EAAAmC,KAAA8C,EAAA,YAAAyC,EAAA1H,EAAAmC,KAAA8C,EAAA,iBAAAwC,GAAAC,EAAA,IAAAlF,KAAApD,KAAA6F,EAAAE,SAAA,OAAAmC,EAAArC,EAAAE,UAAA,MAAA3C,KAAApD,KAAA6F,EAAAG,WAAA,OAAAkC,EAAArC,EAAAG,iBAAA,GAAAqC,GAAA,GAAAjF,KAAApD,KAAA6F,EAAAE,SAAA,OAAAmC,EAAArC,EAAAE,UAAA,YAAAuC,EAAA,UAAA5D,MAAA,6CAAAtB,KAAApD,KAAA6F,EAAAG,WAAA,OAAAkC,EAAArC,EAAAG,gBAAAd,OAAA,SAAA1H,EAAAsF,GAAA,QAAA4D,EAAAtD,KAAA8C,WAAAtH,OAAA,EAAA8H,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,QAAA1C,KAAApD,MAAAY,EAAAmC,KAAA8C,EAAA,eAAAzC,KAAApD,KAAA6F,EAAAG,WAAA,KAAAuC,EAAA1C,EAAA,OAAA0C,IAAA,UAAA/K,GAAA,aAAAA,IAAA+K,EAAAzC,QAAAhD,MAAAyF,EAAAvC,aAAAuC,EAAA,UAAAnE,EAAAmE,IAAAlC,WAAA,UAAAjC,EAAA5G,OAAA4G,EAAAtB,MAAAyF,GAAAnF,KAAAO,OAAA,OAAAP,KAAAqC,KAAA8C,EAAAvC,WAAAhD,GAAAI,KAAAoF,SAAApE,IAAAoE,SAAA,SAAApE,EAAA6B,GAAA,aAAA7B,EAAA5G,KAAA,MAAA4G,EAAAtB,IAAA,gBAAAsB,EAAA5G,MAAA,aAAA4G,EAAA5G,KAAA4F,KAAAqC,KAAArB,EAAAtB,IAAA,WAAAsB,EAAA5G,MAAA4F,KAAA4E,KAAA5E,KAAAN,IAAAsB,EAAAtB,IAAAM,KAAAO,OAAA,SAAAP,KAAAqC,KAAA,kBAAArB,EAAA5G,MAAAyI,IAAA7C,KAAAqC,KAAAQ,GAAAjD,GAAAyF,OAAA,SAAAzC,GAAA,QAAAU,EAAAtD,KAAA8C,WAAAtH,OAAA,EAAA8H,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA5C,KAAAoF,SAAA3C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,IAAA0F,MAAA,SAAA5C,GAAA,QAAAY,EAAAtD,KAAA8C,WAAAtH,OAAA,EAAA8H,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAA1B,EAAAyB,EAAAQ,WAAA,aAAAjC,EAAA5G,KAAA,KAAAmL,EAAAvE,EAAAtB,IAAAsD,EAAAP,GAAA,OAAA8C,GAAA,UAAAjE,MAAA,0BAAAkE,cAAA,SAAArC,EAAAf,EAAAE,GAAA,OAAAtC,KAAAwB,SAAA,CAAAtD,SAAAkC,EAAA+C,GAAAf,aAAAE,WAAA,SAAAtC,KAAAO,SAAAP,KAAAN,SAAAjE,GAAAmE,IAAA7F,EA0BO,IAYM0L,EAAc,eAAA1J,EAAA2J,YAAAtI,IAAAwG,KAAG,SAAA+B,EAAOC,GAAS,IAAAC,EAAAC,EAAAC,EAAA,OAAA3I,IAAAwB,KAAA,SAAAoH,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAA3D,MAAA,cAAA2D,EAAA3D,KAAA,EACvB4D,MAAML,GAAU,OAAzB,OAARC,EAAQG,EAAArE,KAAAqE,EAAA3D,KAAA,EACKwD,EAASC,OAAM,OAS1B,OATFA,EAAIE,EAAArE,KACFoE,EAAOD,EACRI,OACAC,MAAM,MACN/J,IAAI,SAAAgK,GACH,IAAMC,EAAQD,EAAKF,OAAOC,MAAM,OAC1BG,EAAUD,EAAM5B,MAAM,EAAG,GACzB8B,EAAUF,EAAM5B,MAAM,GAAGrI,IAAI,SAAAoK,GAAI,OAAKA,IAC5C,SAAAlK,OAAAC,YAAW+J,GAAO/J,YAAKgK,MACvBP,EAAAlE,OAAA,SACCiE,GAAI,wBAAAC,EAAAtB,SAAAiB,MACZ,gBAb0Bc,GAAA,OAAA1K,EAAA2K,MAAA1G,KAAAzE,YAAA,GA6BdoL,EAAmB,SAAChL,EAAQiL,EAAQlM,EAAMmM,GAErD,IADA,IA/CiBpM,EAAKqM,EAAKC,EA+CrBzM,EAAa,GACVgJ,EAAI,EAAGA,EAAI3H,EAAOH,UAErBlB,EAAWkB,QAAUqL,KAFUvD,EACrC,CAIE,IAFA,IAAM0D,EAAQ,GAELC,EAAI,EAAGA,EAAI,IAAKA,EAEnBvM,EAAKuM,IACPD,EAAMjE,KAAKpH,EAAO2H,GAAG2D,IAIzB,IADA,IAAIC,GAAU,EACLD,EAAI,EAAGA,EAAItL,EAAO,GAAGH,SAAUyL,EACxC,CACE,GAAIvM,EAAKuM,KA9DIxM,EA8DakB,EAAO2H,GAAG2D,GA9DlBH,EA8DsBF,EAAOK,EAAI,GAAG,GA9D/BF,EA8DmCH,EAAOK,EAAI,GAAG,KA7DrEH,GAAOrM,GAAOA,GAAOsM,IA6DqD,CAC3EG,GAAU,EACV,MAEMxM,EAAKuM,IACXD,EAAMjE,KAAKpH,EAAO2H,GAAG2D,IAGrBC,GACF5M,EAAWyI,KAAKiE,GAGpB,OAAO1M,GA+BF,IAyBM6M,EAA0B,SAACxL,EAAQjB,GAI9C,IAHA,IAAMJ,EAAa,GACb8M,EAAO,IAAIC,IAER/D,EAAI,EAAGA,EAAI3H,EAAOH,SAAU8H,EACrC,CAEE,IADA,IAAMgE,EAAQ,GACLL,EAAI,EAAGA,EAAI,IAAKA,EACnBvM,EAAKuM,IAAIK,EAAMvE,KAAKpH,EAAO2H,GAAG2D,IAEpC,IAAMM,EAAWC,KAAKC,UAAUH,GAC3BF,EAAKM,IAAIH,KACZjN,EAAWyI,KAAKuE,GAChBF,EAAKO,IAAIJ,IAGb,OAAOjN,GAKIsN,EAAiB,SAAAC,GAC5B,IAAMC,EAAS,IAAIC,OAAOC,OAAOC,aAOjC,OANAJ,EAAM/L,QAAQ,SAAAoM,GACZ,IAAMC,EAAM,IAAIJ,OAAOC,OAAOI,aAC9BF,EAAIpM,QAAQ,SAAAuM,GAAC,OAAIF,EAAIG,UAAUD,KAC/BP,EAAOQ,UAAUH,GACjBA,EAAII,WAECT,GAgBIU,EAAe,SAAAV,GAE1B,IADA,IAAMD,EAAQ,GACLvE,EAAI,EAAGA,EAAIwE,EAAOW,SAAUnF,EACnCuE,EAAM9E,KAAK+E,EAAOY,IAAIpF,IAExB,OAAOuE,GAoBHc,EAAY,SAACC,EAAIC,EAAIC,EAAeC,GAExC,IAAK,IAAIzF,EAAI,EAAGA,EAAI,EAAGA,IAEnB,GAAGsF,EAAGtF,KAAOuF,EAAGvF,GACd,OAAO,EAIb,IAAK,IAAIA,EAAI,EAAGA,EAAIsF,EAAGpN,OAAQ8H,IAE7B,GAAyB,IAArByF,EAAWC,GAAG1F,GAEhB,GAAyB,IAArBwF,EAAcxF,IAChB,GAAIsF,EAAGtF,GAAKuF,EAAGvF,GAAI,OAAO,OAE1B,GAAIsF,EAAGtF,GAAKuF,EAAGvF,GAAI,OAAO,EAIhC,OAAO,GAII2F,EAAa,SAACtN,EAAQmN,EAAeC,GAChD,IAAIzF,EAAG2D,EAAGiC,EAAsBC,EAAXC,EAAQ,EAC7BC,QAAQC,IAAIR,EAAeC,GAC3B,IAAIQ,EAAK,IAAIC,MAAM7N,EAAOH,QAC1B,IAAK8H,EAAI,EAAGA,EAAI3H,EAAOH,OAAQ8H,IAC/B,CAEE4F,EAAY,EACZ,IAAMO,EAAK9N,EAAOqN,GAAG1F,GAAGmB,QAExB,IAAKwC,EAAI,EAAGA,EAAImC,IAAUF,IAAajC,EACjC0B,EAAUhN,EAAO4N,EAAGtC,IAAKwC,EAAIX,EAAeC,KAC9CG,EAAY,GAGhB,IAAKA,EACL,CAGE,IAFAC,EAAIC,EACJA,EAAQ,EACHnC,EAAI,EAAGA,EAAIkC,EAAGlC,IACZ0B,EAAUc,EAAI9N,EAAO4N,EAAGtC,IAAK6B,EAAeC,KAC/CQ,EAAGH,KAAWG,EAAGtC,IAGrBsC,EAAGH,KAAW9F,GAIlB+F,QAAQC,IAAIC,GAGZ,IADA,IAAIG,EAAU,GACNpG,EAAI,EAAGA,EAAI8F,IAAS9F,EAC1BoG,EAAQ3G,KAAKpH,EAAO4N,EAAGjG,KAEzB,OAAOoG,sfCvQT,IACMC,EAAO,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,EAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAAjK,KAAA2J,GAAA,QAAAO,EAAA3O,UAAAC,OAAA2O,EAAA,IAAAX,MAAAU,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAA7O,UAAA6O,GAyKV,OAzKUJ,EAAAF,EAAAnK,KAAA+G,MAAAoD,EAAA,CAAA9J,MAAA1D,OAAA6N,KACX7O,MAAQ,CACN+O,kBAAmBL,EAAKM,MAAMrP,MAC/B+O,EAEDO,YAAc,WAcZ,IADA,IAA4B1D,EAAxBD,EAAS,GAAIlM,EAAO,GACf4I,EAAI,EAAGA,EAAI0G,EAAKM,MAAMzO,WAAWL,SAAU8H,EACpD,KAAAkH,EAAAvO,YAC2B+N,EAAKM,MAAMzO,WAAWyH,GAAE,GAAxC9I,EAAIgQ,EAAA,GAAQA,EAAA,GACnB9P,EAAKqI,KAAKiH,EAAKM,MAAM5P,KAAKF,IAE9B,IAAK,IAAI8I,EAAI,EAAGA,EAAI0G,EAAKM,MAAMzO,WAAW4I,MAAM,GAAGjJ,SAAU8H,EAC7D,KAAAmH,EAAAxO,YACyB+N,EAAKM,MAAMzO,WAAW4I,MAAM,GAAGnB,GAAE,GAAjD9I,EAAIiQ,EAAA,GAAEC,EAAMD,EAAA,GACbE,EAAQ,CAACD,EAAO5D,IAAK4D,EAAO3D,MAClC,GAAIiD,EAAKM,MAAM5P,KAAKF,GAElB,IAAK,IAAIyM,EAAI,EAAGA,EAAI,IAAKA,EACzB,CACE,IAAM2D,EAAMZ,EAAKa,OAAOrQ,GAAMyM,GAAG6D,QAAQhN,MAAMoI,OAC/C,GAAY,KAAR0E,EAAJ,CACK,GAAIvH,MAAMuH,GAGb,YADAG,MAAK,GAAAzO,OAAIsO,EAAG,iBAAAtO,OAAgB9B,EAAI,uBAIhCmQ,EAAM1D,GAAK+D,WAAWJ,IAI5BhE,EAAO7D,KAAK4H,GAEd,IAAMC,EAAMZ,EAAKa,OAAOhE,UAAUiE,QAAQhN,MAAMoI,OAEhD,GADAmD,QAAQC,IAAI,eAAgBsB,GAChB,KAARA,EAAY/D,EAAY,QACvB,KAAI,MAAMoE,KAAKL,GAGlB,YADAG,MAAK,GAAAzO,OAAIsO,EAAG,yCAFY/D,EAAYqE,SAASN,GAK/C,GAAI/D,EAAY,KAASA,EAAY,IACnC,OAAOkE,MAAM,6EAMf,GAJA1B,QAAQC,IAAI,SAAU1C,GACtByC,QAAQC,IAAI,OAAQ5O,GACpB2O,QAAQC,IAAI,YAAazC,GAEtB,CAAC,WAAWsE,SAASnB,EAAKM,MAAMrP,MACnC,CACE,IAAMX,EAAaqM,EACfqD,EAAKM,MAAM3O,OACXiL,EACAlM,EACAmM,GAEJ,GAA0B,IAAtBvM,EAAWkB,OAEb,YADAuP,MAAM,yCAIR1B,QAAQC,IAAI,OAAQU,EAAKM,MAAMzO,YAC/B,IAAIkN,EAAaiB,EAAKM,MAAMzO,WAAWO,IAAI,SAAAL,GAAoB,IAAAC,EAAAC,YAAAF,EAAA,GAAlBvB,EAAIwB,EAAA,GAAQA,EAAA,GACvD,OAAOgO,EAAKM,MAAM5P,KAAKF,KAErBsO,EAAgBkB,EAAKM,MAAMzO,WAAW4I,MAAM,GAAGrI,IAAI,SAAAgP,GAAoB,IAAAC,EAAApP,YAAAmP,EAAA,GAAdC,EAAA,GAC3D,OADmEA,EAAA,GACrDvC,cAAgB,EAAI,IAEpCO,QAAQC,IAAI,iBAAkBhP,EAAYyO,EAAYD,GAItD,IAAIY,EAAUT,EAAW3O,EAAYwO,EAAeC,GACpD,GAAIW,EAAQlO,OAAS,GAGnB,OADA6N,QAAQC,IAAI,UAAWI,GAChBqB,MAAM,0GASf1B,QAAQC,IAAI,UAAWI,GACvBM,EAAKM,MAAMgB,sBAAsB5B,OAInC,CACE,GAAIpM,OAAO8C,OAAO4J,EAAKM,MAAM5P,MAAM+J,MAAM,EAAG,GAAGhI,OAAO,SAAC6G,GAAC,OAAW,IAANA,IAAS9H,OAAS,EAC7E,OAAOuP,MAAM,0DAEf,IAAMzQ,EAAa6M,EAAyB6C,EAAKM,MAAM3O,OAAQjB,GAC/DsP,EAAKM,MAAMiB,qBAAqBjR,KAEnC0P,EAEDwB,aAAe,SAAAC,GACb,GAAI,CAAC,WAAWN,SAASM,EAAMC,OAAO5N,OACtC,CACE,GAAIR,OAAO8C,OAAO4J,EAAKM,MAAM5P,MAAM+J,MAAM,EAAG,GAAGhI,OAAO,SAAC6G,GAAC,OAAW,IAANA,IAAS9H,OAAS,EAI7E,OAFAuP,MAAMU,EAAMC,OAAO5N,MAAQ,mDAC3BkM,EAAK2B,SAAS,CAAEtB,kBAAmB,WAGrCL,EAAKM,MAAMzO,WAAW4I,MAAM,GAAGrI,IAAI,SAAAwP,GAAoB,IAAAC,EAAA5P,YAAA2P,EAAA,GAAlBpR,EAAIqR,EAAA,GAAQA,EAAA,GAC/C7B,EAAKM,MAAM/P,WAAWC,EAAM,SAGvB,CAAC,UAAU2Q,SAASM,EAAMC,OAAO5N,QAExCkM,EAAKM,MAAMzO,WAAW4I,MAAM,GAAGrI,IAAI,SAAA0P,GAAoB,IAAAC,EAAA9P,YAAA6P,EAAA,GAAlBtR,EAAIuR,EAAA,GAAQA,EAAA,GAC/C/B,EAAKM,MAAM/P,WAAWC,EAAM,KAIhCwP,EAAK2B,SAAS,CAAEtB,kBAAmBoB,EAAMC,OAAO5N,QAChDkM,EAAKM,MAAMtP,WAAWyQ,EAAMC,OAAO5N,QAEpCkM,EAEDgC,UAAY,SAACC,EAAOzR,GAElB,GAAa,IAAVyR,EAAa,CACd,GAAI3O,OAAO8C,OAAO4J,EAAKM,MAAM5P,MAAM+J,MAAM,EAAG,GAAGhI,OAAO,SAAC6G,GAAC,OAAW,IAANA,IAAS9H,QAAU,EAE9E,OAAOuP,MAAM,0DAGbf,EAAKM,MAAM/P,WAAWC,EAAM,EAAIwP,EAAKM,MAAM5P,KAAKF,QAE/C,CACF,GAAwB,YAApBwP,EAAKM,MAAMrP,MAAsBqC,OAAO8C,OAAO4J,EAAKM,MAAM5P,MAAM+J,MAAM,EAAG,GAAGhI,OAAO,SAAC6G,GAAC,OAAW,IAANA,IAAS9H,QAAU,EAEhH,OAAOuP,MAAM,2DAGZf,EAAKM,MAAM/P,WAAWC,EAAM,EAAIwP,EAAKM,MAAM5P,KAAKF,MAEtDwP,EAEDkC,UAAY,SAACD,EAAOzR,GAElB,GAAa,IAAVyR,EAAa,CACd,GAAI3O,OAAO8C,OAAO4J,EAAKM,MAAM5P,MAAM+J,MAAM,GAAGhI,OAAO,SAAC6G,GAAC,OAAW,IAANA,IAAS9H,QAAU,EAE3E,OAAOuP,MAAM,2DAGbf,EAAKM,MAAM/P,WAAWC,EAAM,EAAIwP,EAAKM,MAAM5P,KAAKF,SAGlDwP,EAAKM,MAAM/P,WAAWC,EAAM,EAAIwP,EAAKM,MAAM5P,KAAKF,KACnDwP,EAqOA,OArOAmC,YAAAxC,EAAA,EAAA/L,IAAA,SAAAE,MAED,WAAS,IAAAsO,EAAApM,KAEPA,KAAK6K,OAAS,GACd7K,KAAKsK,MAAMzO,WAAW4I,MAAM,GAAG3I,QAAQ,SAAAuQ,GAAoB,IAAAC,EAAArQ,YAAAoQ,EAAA,GAAlB7R,EAAI8R,EAAA,GAAQA,EAAA,GACnDF,EAAKvB,OAAOrQ,GAAQ,CAAC+R,IAAMC,YAAaD,IAAMC,eAEhDxM,KAAK6K,OAAOhE,UAAY0F,IAAMC,YAG9B,IAAMC,EAAmB,CAAC,CAAC,aAAc,YAAa,SACpD,CAAC,MAAO,SAAU,MAAO,UAAW,CAAC,OAAQ,WAEzCC,EAAW1M,KAAKsK,MAAMzO,WAAW4I,MAAM,EAAG,GAAGrI,IAAI,SAAC5B,EAAM4O,GAC5D,IAAM6C,EAAQG,EAAK9B,MAAM5P,KAAKF,GAC9B,OACI+R,IAAAI,cAAA,MAAI/O,IAAKpD,GACP+R,IAAAI,cAAA,MAAIC,UAAU,gBACZL,IAAAI,cAAA,QAAMC,UAAS,GAAAtQ,OAAK8P,EAAK9B,MAAM5P,KAAKF,GAAQ,mBAAqB,MAC3DqS,MAAO,CAACC,eAAkBV,EAAK9B,MAAM5P,KAAKF,GAAQ,GAAK,iBAC3DA,IAEJ+R,IAAAI,cAAA,UACEJ,IAAAI,cAAA,QAAME,MAAO,CAACC,eAAkBV,EAAK9B,MAAM5P,KAAKF,GAAQ,GAAK,iBAC3DiS,EAAkBrD,GAAO2D,KAAK,QAElCR,IAAAI,cAAA,MAAIC,UAAU,gBACZL,IAAAI,cAAA,SACIvS,KAAK,WACLwS,UAAU,iBACVI,QAASf,EACTgB,SAAU,kBAAMb,EAAKJ,UAAUC,EAAOzR,IACtCqS,MAAO,CAAEK,OAAU,iBAQ3BC,EAAWnN,KAAKsK,MAAMzO,WAAW4I,MAAM,GAAGrI,IAAI,SAAAgR,EAAiBhE,GAAU,IAAAiE,EAAApR,YAAAmR,EAAA,GAAzB5S,EAAI6S,EAAA,GAAE3C,EAAM2C,EAAA,GAC1DpB,EAAQG,EAAK9B,MAAM5P,KAAKF,GACtBsM,EAAc4D,EAAd5D,IAAKC,EAAS2D,EAAT3D,KACb,OACIwF,IAAAI,cAAA,MAAI/O,IAAKpD,GACP+R,IAAAI,cAAA,MAAIC,UAAU,gBACZL,IAAAI,cAAA,QAAMC,UAAS,GAAAtQ,OAAK8P,EAAK9B,MAAM5P,KAAKF,GAAQ,mBAAqB,MAC/DqS,MAAO,CAACC,eAAkBV,EAAK9B,MAAM5P,KAAKF,GAAQ,GAAK,iBACvDA,IAEJ+R,IAAAI,cAAA,UACEJ,IAAAI,cAAA,SACIvS,KAAK,OACLwS,UAAU,eACVU,YAAaxG,EACbyG,IAAKnB,EAAKvB,OAAOrQ,GAAM,GACvBgT,SAAU,EAAIvB,KAGpBM,IAAAI,cAAA,UACEJ,IAAAI,cAAA,SACIvS,KAAK,OACLwS,UAAU,eACVU,YAAavG,EACbwG,IAAKnB,EAAKvB,OAAOrQ,GAAM,GACvBgT,SAAU,EAAIvB,KAGpBM,IAAAI,cAAA,MAAIC,UAAU,gBACZL,IAAAI,cAAA,SACIvS,KAAK,WACLwS,UAAU,iBACVI,QAASf,EACTuB,SAAU,CAAC,UAAUrC,SAASiB,EAAK9B,MAAMrP,MACzCgS,SAAU,kBAAMb,EAAKF,UAAUD,EAAOzR,IACtCqS,MAAO,CAAEK,OAAU,iBAQ3BO,EAAW,GACjBA,EAAS1K,KACLwJ,IAAAI,cAAA,MAAI/O,IAAI,SACN2O,IAAAI,cAAA,MAAIC,UAAU,iCAAgC,uBAC9CL,IAAAI,cAAA,MAAIe,QAAQ,MACVnB,IAAAI,cAAA,SACIvS,KAAK,OACLwS,UAAU,eACVU,YAAY,OACZC,IAAKvN,KAAK6K,OAAOhE,UACjBgG,MAAO,CAAEc,MAAO,YAM5B,IAAMC,EAAkB,GAqCxB,OApCAA,EAAgB7K,KACdwJ,IAAAI,cAAA,UACAJ,IAAAI,cAAA,MAAIC,UAAU,eAAec,QAAQ,KACnCnB,IAAAI,cAAA,OAAKC,UAAU,qDACbL,IAAAI,cAAA,SACIC,UAAU,mBACVxS,KAAK,QACL2C,KAAK,YACLe,MAAM,SACNmP,SAAUjN,KAAKwL,aACfqC,GAAG,cACHb,QAA0C,WAAjChN,KAAK1E,MAAM+O,oBAExBkC,IAAAI,cAAA,SAAOC,UAAU,mBAAmBkB,QAAQ,eAAc,YAI5DvB,IAAAI,cAAA,OAAKC,UAAU,gCACbL,IAAAI,cAAA,SACIC,UAAU,mBACVxS,KAAK,QACL2C,KAAK,YACLe,MAAM,UACNmP,SAAUjN,KAAKwL,aACfqC,GAAG,eACHb,QAA0C,YAAjChN,KAAK1E,MAAM+O,oBAExBkC,IAAAI,cAAA,SAAOC,UAAU,mBAAmBkB,QAAQ,gBAAe,gBAU7DvB,IAAAI,cAAA,OAAKC,UAAU,qBAAqBC,MAAO,CAAEkB,SAAU,SACrDxB,IAAAI,cAAA,OAAKqB,IAAI,GAAGC,IAAKC,IAAWrB,MAAO,CAAEc,MAAS,UAC9CpB,IAAAI,cAAA,WACAJ,IAAAI,cAAA,WAGAJ,IAAAI,cAAA,MAAIE,MAAO,CACTsB,WAAc,8CACdC,aAAgB,MAChBC,UAAa,OACbC,QAAW,MACXC,UAAa,mCAEbhC,IAAAI,cAAA,cAAQJ,IAAAI,cAAA,UAAI,YAAqB,6CAEnCJ,IAAAI,cAAA,SAAOC,UAAU,SACfL,IAAAI,cAAA,aAAQiB,IAIVrB,IAAAI,cAAA,MAAIE,MAAO,CACTsB,WAAc,8CACdC,aAAgB,MAChBC,UAAa,OACbC,QAAW,MACXC,UAAa,mCAEbhC,IAAAI,cAAA,cAAQJ,IAAAI,cAAA,UAAI,YAAqB,kDAEnCJ,IAAAI,cAAA,SAAOC,UAAU,SACfL,IAAAI,cAAA,aACAJ,IAAAI,cAAA,UACEJ,IAAAI,cAAA,MAAIC,UAAU,gBAAe,0BAC7BL,IAAAI,cAAA,UAAI,UACJJ,IAAAI,cAAA,UAAI,eAGNJ,IAAAI,cAAA,aAAQD,IAIVH,IAAAI,cAAA,MAAIE,MAAO,CACTsB,WAAc,8CACdC,aAAgB,MAChBC,UAAa,OACbC,QAAW,MACXC,UAAa,mCAEbhC,IAAAI,cAAA,cAAQJ,IAAAI,cAAA,UAAI,YAAqB,gDAEnCJ,IAAAI,cAAA,SAAOC,UAAU,SACfL,IAAAI,cAAA,aACAJ,IAAAI,cAAA,UACEJ,IAAAI,cAAA,MAAIC,UAAU,gBAAe,wBAC7BL,IAAAI,cAAA,UAAI,eACJJ,IAAAI,cAAA,UAAI,eACJJ,IAAAI,cAAA,UAAI,eAGNJ,IAAAI,cAAA,aAAQQ,IAIVZ,IAAAI,cAAA,MAAIE,MAAO,CACTsB,WAAc,8CACdC,aAAgB,MAChBC,UAAa,OACbC,QAAW,MACXC,UAAa,mCAEbhC,IAAAI,cAAA,cAAQJ,IAAAI,cAAA,UAAI,YAAqB,6CAEnCJ,IAAAI,cAAA,SAAOC,UAAU,SACfL,IAAAI,cAAA,aAAQc,IAKVlB,IAAAI,cAAA,WACEJ,IAAAI,cAAA,UACIvS,KAAK,SACLwS,UAAU,aACVC,MAAO,CAAEc,MAAO,QAChBa,QAASxO,KAAKuK,aACjB,SAIHgC,IAAAI,cAAA,gBAGPhD,EA9YU,CAAS4C,IAAMkC,WAuabC,cAtBS,SAAHC,GAAoC,MAAQ,CAC/D9S,WADmC8S,EAAV9S,WAEzBnB,KAFyCiU,EAAJjU,KAGrCiB,OAHiDgT,EAANhT,OAI3CV,KAJuD0T,EAAJ1T,OAO1B,SAAA2T,GAAQ,MAAK,CACtCrD,qBAAsB,SAAAjR,GACpBsU,EAASvU,EAAcC,IACvBsU,EAAS1U,EAAmB,YAE9BoR,sBAAuB,SAAAhR,GACrBsU,EAASvU,EAAcC,IACvBsU,EAAS1U,EAAmB,aAE9BK,WAAY,SAACC,EAAME,GAAI,OAAKkU,EAASrU,EAAWC,EAAME,KACtDM,WAAY,SAAAC,GAAI,OAAI2T,EAAS5T,EAAWC,KACxC4T,QAAS,SAAAC,GAAC,OAAIF,EHhWO,SAAAE,GAAC,MAAK,CAC3B1U,KAxEmB,QAyEnB0U,KG8VuBD,CAAQC,KAC/BC,WAAY,SAACpT,EAAQC,EAAQC,GAAU,OAAK+S,EHlYpB,SAACjT,EAAQC,EAAQC,GAAU,MAAM,CACzDzB,KAnDyB,cAoDzBuB,SACAC,SACAC,cG8XqDkT,CAAWpT,EAAQC,EAAQC,OAGnE6S,CAGb/E,wcC9aF,IACMA,EAAO,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,EAAAJ,GACX,SAAAA,EAAYW,GAAO,IAAAN,EAUlB,OAVkBC,YAAAjK,KAAA2J,IACjBK,EAAAF,EAAAnK,KAAAK,KAAMsK,IAGR0E,aAAe,WACXhF,EAAKM,MAAM2E,UACdjF,EAEDkF,cAAgB,WACdlF,EAAKM,MAAM6E,WACZnF,EAmCA,OA3CAmC,YAAAxC,EAAA,EAAA/L,IAAA,SAAAE,MAUD,WACE,OACEyO,IAAAI,cAAA,OAAKC,UAAU,qBAAqBC,MAAO,CAAEkB,SAAU,UACrDxB,IAAAI,cAAA,UAAI,wHAEJJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,KAAGC,UAAU,mBAAkB,4DAE/BL,IAAAI,cAAA,WACAJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,WACEJ,IAAAI,cAAA,UACEvS,KAAK,SACLwS,UAAU,kBACVC,MAAO,CAAEc,MAAO,SAChBa,QAASxO,KAAKgP,cACf,sBAIHzC,IAAAI,cAAA,WACAJ,IAAAI,cAAA,WACEJ,IAAAI,cAAA,UACEvS,KAAK,SACLwS,UAAU,kBACVC,MAAO,CAAEc,MAAO,SAChBa,QAASxO,KAAKkP,eACf,4BAMRvF,EA9CU,CAAS4C,IAAMkC,WA6DbC,cAZS,SAAH3S,GAAoC,MAAQ,CAC/DF,WADmCE,EAAVF,WAEzBnB,KAFyCqB,EAAJrB,KAGrCiB,OAHiDI,EAANJ,OAI3CV,KAJuDc,EAAJd,OAO1B,SAAA2T,GAAQ,MAAK,CACtCK,OAAQ,kBAAML,EAAS1U,EAAmB,YAC1CiV,QAAS,kBAAMP,EAAS1U,EAAmB,eAG9BwU,CAGb/E,wcCnEF,IACMyF,EAAY,SAAAxF,GAAAC,YAAAuF,EAAAxF,GAAA,IAAAE,EAAAC,EAAAqF,GAChB,SAAAA,EAAY9E,GAAO,IAAAN,EAUlB,OAVkBC,YAAAjK,KAAAoP,IACjBpF,EAAAF,EAAAnK,KAAAK,KAAMsK,IAGRC,YAAc,WACZP,EAAKM,MAAM+E,SACZrF,EAEDsF,iBAAmB,SAAA7D,GACjBzB,EAAKM,MAAMtP,WAAWyQ,EAAMC,OAAO5N,QACpCkM,EAgCA,OAxCAmC,YAAAiD,EAAA,EAAAxR,IAAA,SAAAE,MAUD,WACE,OACEyO,IAAAI,cAAA,OAAKC,UAAU,qBAAqBC,MAAO,CAAEkB,SAAU,UACrDxB,IAAAI,cAAA,UAAI,gBACJJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,KAAGC,UAAU,iBAAiBC,MAAO,CAAC0C,SAAU,SAAS,qDACLhD,IAAAI,cAAA,YAEpDJ,IAAAI,cAAA,KAAGC,UAAU,kBAAiB,wKAE4CL,IAAAI,cAAA,WAAMJ,IAAAI,cAAA,WAAM,+HAEjDJ,IAAAI,cAAA,WAAMJ,IAAAI,cAAA,YAE3CJ,IAAAI,cAAA,KAAGC,UAAU,mBAAkB,2DAC2BL,IAAAI,cAAA,YAE1DJ,IAAAI,cAAA,WACEJ,IAAAI,cAAA,UACEvS,KAAK,SACLwS,UAAU,kBACVC,MAAO,CAAEc,MAAO,QAChBa,QAASxO,KAAKuK,aACf,eAMR6E,EA3Ce,CAAS7C,IAAMkC,WA6DlBC,cAfS,SAAH3S,GAAoC,MAAQ,CAC/DF,WADmCE,EAAVF,WAEzBnB,KAFyCqB,EAAJrB,KAGrCiB,OAHiDI,EAANJ,OAI3CV,KAJuDc,EAAJd,OAO1B,SAAA2T,GAAQ,MAAK,CACpCS,MAAO,WACHT,EAAS1U,EAAmB,cAEhCK,WAAY,SAACC,EAAME,GAAI,OAAKkU,EAASrU,EAAWC,EAAME,KACtDM,WAAY,SAAAC,GAAI,OAAI2T,EAAS5T,EAAWC,OAG7ByT,CAGbU,wcCjEF,IACMI,EAAQ,SAAA5F,GAAAC,YAAA2F,EAAA5F,GAAA,IAAAE,EAAAC,EAAAyF,GACV,SAAAA,EAAYlF,GAAO,IAAAN,EAIuB,OAJvBC,YAAAjK,KAAAwP,IACfxF,EAAAF,EAAAnK,KAAAK,KAAMsK,IAMVC,YAAc,WACVP,EAAKM,MAAM+E,SACdrF,EAEDsF,iBAAmB,SAAA7D,GACfzB,EAAKM,MAAMtP,WAAWyQ,EAAMC,OAAO5N,QAVnCkM,EAAKa,OAAS,GACdb,EAAKa,OAAO9N,KAAOwP,IAAMC,YACzBxC,EAAKa,OAAO5N,MAAQsP,IAAMC,YAAYxC,EAqCzC,OApCAmC,YAAAqD,EAAA,EAAA5R,IAAA,SAAAE,MAUD,WACI,OACIyO,IAAAI,cAAA,OAAKC,UAAU,qBAAqBC,MAAO,CAAEkB,SAAU,UACnDxB,IAAAI,cAAA,UAAI,yBACJJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,UAAK,qJAEmCJ,IAAAI,cAAA,YAExCJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,KAAGC,UAAU,mBAAkB,4CACcL,IAAAI,cAAA,YAE7CJ,IAAAI,cAAA,WACIJ,IAAAI,cAAA,UACIvS,KAAK,SACLwS,UAAU,kBACVC,MAAO,CAAEc,MAAO,QAChBa,QAASxO,KAAKuK,aACjB,kBAMhBiF,EA1CS,CAASjD,IAAMkC,WA4DdC,YAfS,SAAH3S,GAAoC,MAAQ,CAC7DF,WADiCE,EAAVF,WAEvBnB,KAFuCqB,EAAJrB,KAGnCiB,OAH+CI,EAANJ,OAIzCV,KAJqDc,EAAJd,OAO1B,SAAA2T,GAAQ,MAAK,CACpCS,MAAO,WACHT,EAAS1U,EAAmB,YAEhCK,WAAY,SAACC,EAAME,GAAI,OAAKkU,EAASrU,EAAWC,EAAME,KACtDM,WAAY,SAAAC,GAAI,OAAI2T,EAAS5T,EAAWC,OAG7ByT,CAGbc,wcC3DF,IAAMC,EAAU,EACVC,EAAS,EAGTC,EAAQ,SAAA/F,GAAAC,YAAA8F,EAAA/F,GAAA,IAAAE,EAAAC,EAAA4F,GACZ,SAAAA,EAAYrF,GAAO,IAAAN,EAAAC,YAAAjK,KAAA2P,IACjB3F,EAAAF,EAAAnK,KAAAK,KAAMsK,IAuBRsF,OAAS,SAAAvT,GACP,IAAMwT,EAASxT,EAAM,EAEfyT,EAAM9F,EAAK1O,MAAMyU,KAAK3T,IAAI,SAACC,EAAKiH,GACpC,IAAI0M,EAAM,KAKV,OAJAhG,EAAKM,MAAMhQ,WAAW+B,GAAKP,QAAQ,SAACuM,EAAGpB,GACrC+I,GAAO3H,EAAE4H,WACTD,GAAO,OAEFA,IAST,GAPAF,EAAI/M,KAAK,MACT+M,EAAI/M,KAAK8M,GACTC,EAAI/M,KAAK,MACTsG,QAAQC,IAAIwG,GACZ9F,EAAK1O,MAAM4U,QAAQnN,KAAK+M,GAEN9F,EAAKmG,OAAOP,OAAOC,GACrB,OAEd7F,EAAKoG,sBAEF,CACH,IAAMvV,EAAUmP,EAAKmG,OAAOE,WAC5BrG,EAAK2B,SAAS,CACZoE,KAAMvH,EAAa3N,OAGxBmP,EAEDoG,gBAAkB,WAEhB,IAAME,EAAWtG,EAAKmG,OAAOI,aAC7BvG,EAAKM,MAAMvP,cAAcyN,EAAa8H,IACtC,IAAME,EAASxG,EAAKmG,OAAOM,WAC3BzG,EAAKM,MAAMoG,SAASlI,EAAagI,IACjCxG,EAAKmG,OAAO5H,SACZyB,EAAKM,MAAMqG,WAAW3G,EAAK1O,MAAM4U,UA3DjC,IAAMpH,EAAgB,IAAIf,OAAOC,OAAO4I,UACxC5G,EAAKnO,WAAa,GAClBmO,EAAKM,MAAMzO,WAAWC,QAAQ,SAAAC,GAAoB,IAAAC,EAAAC,YAAAF,EAAA,GAAlBvB,EAAIwB,EAAA,GAAE0O,EAAM1O,EAAA,GACtCgO,EAAKM,MAAM5P,KAAKF,KAClBsO,EAAcR,UAAUoC,EAAO5B,cAAgB,EAAI,GACnDkB,EAAKnO,WAAWkH,KAAKvI,MAGzB,IAAMqW,EAAgBjJ,EAAeoC,EAAKM,MAAMhQ,YAChD0P,EAAKmG,OAAS,IAAIpI,OAAOC,OAAO8I,gBAC9BD,EACA/H,EACoB,WAApBkB,EAAKM,MAAMrP,KAAoByU,EAASD,GAE1CoB,EAActI,SACd,IAAM1N,EAAUmP,EAAKmG,OAAOE,WAI1B,OAHFrG,EAAK1O,MAAQ,CACTyU,KAAMvH,EAAa3N,GACnBqV,QAAS,IACXlG,EA6FL,OA5FEmC,YAAAwD,EAAA,EAAA/R,IAAA,SAAAE,MA0CH,WAAS,IAAAsO,EAAApM,KACH+Q,EAAM,CAACxE,IAAAI,cAAA,MAAI/O,IAAI,cAAa,WAClCoC,KAAKnE,WAAWC,QAAQ,SAAAtB,GACtBuW,EAAIhO,KAAKwJ,IAAAI,cAAA,MAAI/O,IAAKpD,GAAOA,MAE3BuW,EAAIhO,KAAKwJ,IAAAI,cAAA,MAAI/O,IAAI,kBAEjB,IAAMkS,EAAM9P,KAAK1E,MAAMyU,KAAK3T,IAAI,SAACC,EAAKiH,GACpC,IAAM0M,EAAM,CAACzD,IAAAI,cAAA,MAAI/O,IAAI,cAAc0F,EAAI,IAevC,OAdA8I,EAAK9B,MAAMhQ,WAAW+B,GAAKP,QAAQ,SAACuM,EAAGpB,GACrC+I,EAAIjN,KAAKwJ,IAAAI,cAAA,MAAI/O,IAAKqJ,GAAIoB,MAExB2H,EAAIjN,KACFwJ,IAAAI,cAAA,MAAI/O,IAAI,gBACN2O,IAAAI,cAAA,UACEvS,KAAK,SACLwS,UAAU,iCACV4B,QAAS,kBAAMpC,EAAKwD,OAAOtM,KAC5B,YAMHiJ,IAAAI,cAAA,MAAI/O,IAAK0F,EAAG0N,cAAY,UAAUC,MAAO7E,EAAK9B,MAAM1O,OAAOS,IACxD2T,KAKP,OACEzD,IAAAI,cAAA,WACEJ,IAAAI,cAAA,UAAI,4BACJJ,IAAAI,cAAA,WAAKJ,IAAAI,cAAA,WACLJ,IAAAI,cAAA,UAAI,IACA3M,KAAKmQ,OAAOe,iBAAiB,iEAGjC3E,IAAAI,cAAA,OAAKC,UAAU,iDACbL,IAAAI,cAAA,OAAKC,UAAU,YACbL,IAAAI,cAAA,SAAOC,UAAU,iCACfL,IAAAI,cAAA,aACEJ,IAAAI,cAAA,UAAKoE,IAEPxE,IAAAI,cAAA,aAAQmD,WAMjBH,EAnHa,CAASpD,IAAMkC,cA2IdC,YArBS,SAAHtD,GAAuE,MAAQ,CAChGxP,OAD6BwP,EAANxP,OAEvBtB,WAFyC8Q,EAAV9Q,WAG/BI,KAH+C0Q,EAAJ1Q,KAI3CmB,WAJ2DuP,EAAVvP,WAKjDc,cAL0EyO,EAAbzO,cAM7D1B,KANgFmQ,EAAJnQ,KAO5E4B,OAPwFuO,EAANvO,SAU3D,SAAA+R,GAAQ,MAAK,CACtC+B,WAAY,SAACQ,GACXvC,EP5HuD,CACzDxU,KAhBoC,yBAiBpC8C,mBO0HgCiU,IAC9BvC,EAAS1U,EAAmB,cAE9Ba,cAAe,SAAAF,GAAa+T,EAAS7T,EAAcF,KACnD6V,SAAU,SAAA7T,GAAY+R,EPhFA,SAAA/R,GAAM,MAAK,CACjCzC,KAnEuB,YAoEvByC,UO8E+B6T,CAAS7T,KACxCjC,YAAa,SAACC,EAASC,GAAW8T,EAAShU,EAAYC,EAASC,KAChEI,iBAAkB,SAAAC,GAAayT,EAAS1T,EAAiBC,OAG5CuT,CAGbiB,qdCtJF,IACMyB,EAAS,SAAAxH,GAAAC,YAAAuH,EAAAxH,GAAA,IAAAE,EAAAC,EAAAqH,GACb,SAAAA,EAAY9G,GAAO,IAAAN,EAKf,OALeC,YAAAjK,KAAAoR,IACjBpH,EAAAF,EAAAnK,KAAAK,KAAMsK,IAOR+G,eAAiB,WACfrH,EAAK2B,SAAS,SAAA2F,GAAS,MAAK,CAC1BC,UAAWD,EAAUC,aAExBvH,EAEDwH,cAAgB,WACdxH,EAAK2B,SAAS,CACZ8F,UAAW,QAEdzH,EAED0H,YAAc,SAAC5T,EAAK/B,GAAgB,IAAZqN,EAAKrN,EAALqN,MACtBY,EAAK2B,SAAS,CACZ8F,UAAWzH,EAAKM,MAAMqH,KAAKvI,MApB7BY,EAAK1O,MAAQ,CACXmW,UAAW,KACXF,UAAU,GACVvH,EAmGH,OAlGAmC,YAAAiF,EAAA,EAAAxT,IAAA,SAAAE,MAoBD,WAAS,IACCyT,EAAavR,KAAK1E,MAAlBiW,SAKR,OACEhF,IAAAI,cAAA,WACEJ,IAAAI,cAAA,OAAKE,MAAO,CAAEc,MAAO,QAASiE,OAAQ,UACpCrF,IAAAI,cAACkF,IAAc,CAACC,aAAc9R,KAAKwR,cACnB3E,MAAO,CAAEsB,WAAY,QACrB4D,OAAQ,CAAEC,KAAM,GAAIC,MAAO,GAAIC,IAAK,GAAIC,OAAQ,KAC9D5F,IAAAI,cAACyF,IAAK,CACJC,WAAYrS,KAAKsK,MAAMqH,KAAKvV,IAAI,SAAC3B,EAAK4B,GAAG,OAAKA,IAC9CiW,WAAY,SAAAxU,GAAK,OAAIA,EAAMmS,YAC3BpD,MAAO,CACL0F,MAAO,CAAEC,KAAM,SACf1M,KAAM,CAAE2M,OAAQ,OAAQD,KAAM,QAASE,WAAY,IAAKnD,SAAU,WAGtEhD,IAAAI,cAACgG,IAAK,CACJ9F,MAAO,CACL0F,MAAO,CAAEC,KAAM,SACf1M,KAAM,CAAE2M,OAAQ,OAAQD,KAAM,QAASE,WAAY,IAAKnD,SAAU,WAGtEhD,IAAAI,cAACiG,IAAU,CACT9M,KAAK,+BACL+M,eAAe,EACfC,SAAU,GACVC,SAAU,IACVlG,MAAO,CACLA,MAAO,CAAE2F,KAAM,QAASjD,SAAU,WAGtChD,IAAAI,cAACiG,IAAU,CACT9M,KAAK,2BACL+M,eAAe,EACfC,UAAW,IACXC,SAAU,GACVlG,MAAO,CACLmG,UAAW,cACXC,WAAY,MACZpG,MAAO,CAAE2F,KAAM,QAASjD,SAAU,WAGtChD,IAAAI,cAACuG,IAAiB,CAChBC,MAAM,oBACNC,WAAYpT,KAAK0R,YACjBC,KAAM3R,KAAKsK,MAAMqH,KACjB0B,WAAS,EACTxG,MAAO,CACL0B,UAAW,8BAA+BH,aAAc,iBAG3DpO,KAAK1E,MAAMmW,WACRlF,IAAAI,cAAC2G,IAAI,CAACxV,MAAOkC,KAAK1E,MAAMmW,WACtBlF,IAAAI,cAAA,OAAKE,MAAO,CAAEsB,WAAY,qBAAsBG,QAAS,MAAOF,aAAc,MAAO+E,MAAO,UAAW,IAAmB,iCACzFnT,KAAK1E,MAAMmW,UAAUpJ,EACpDkE,IAAAI,cAAA,WAAM,6BACqB3M,KAAK1E,MAAMmW,UAAU8B,MAM5DhH,IAAAI,cAAA,OAAKE,MAAO,CAAEc,MAAO,UACnBpB,IAAAI,cAAA,MAAIE,MAAO,CAACyB,QAAW,SAAS,uCAChC/B,IAAAI,cAAA,KAAGC,UAAU,gBAAe,4GAEO2E,EApExB,oQAoE8C,IACvDhF,IAAAI,cAAA,UAAQC,UAAU,eAAe4B,QAASxO,KAAKqR,gBAC5CE,EAAWhF,IAAAI,cAAA,QAAMC,UAAU,YAAW,YAAoBL,IAAAI,cAAA,QAAMC,UAAU,YAAW,qBAMjGwE,EAzGY,CAAS7E,IAAMkC,WA+HfC,eAbS,SAAH1S,GAA0B,IACzCwX,EADkCxX,EAAbW,cACMP,IAAI,SAACqX,EAAKnQ,GAAC,MAAM,CAAE+E,EAAG/E,EAAGiQ,EAAGE,KAO3D,OAL0B,IAAtBD,EAAWhY,SACbgY,EAAWzQ,KAAK,CAAEsF,EAAG,IAAMkL,EAAG,IAC9BC,EAAWzQ,KAAK,CAAEsF,GAAI,IAAMkL,EAAG,KAG1B,CACL5B,KAAM6B,IAIK9E,CAAyB0C,qBC5IxCrJ,OAAO2L,MAAQA,GACfC,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KAEOD,gdCHf,IAAME,GAAQ,IACRC,GAAS,GAoKAC,GAjKC,SAAAlK,GAAAC,YAAAiK,EAAAlK,GAAA,IAAAE,EAAAC,GAAA+J,GAAA,SAAAA,IAAA,IAAA9J,EAAAC,YAAAjK,KAAA8T,GAAA,QAAA5J,EAAA3O,UAAAC,OAAA2O,EAAA,IAAAX,MAAAU,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAA7O,UAAA6O,GAmJb,OAnJaJ,EAAAF,EAAAnK,KAAA+G,MAAAoD,EAAA,CAAA9J,MAAA1D,OAAA6N,KAwBd4J,aAAe,WACb,KAAI/J,EAAKM,MAAMnP,SAASK,OAAS,GAAjC,CACA,IAAIwY,EAAYhK,EAAKM,MAAMnP,SACvB6O,EAAKM,MAAMnP,SAASK,OAAS,IAC/BwY,EAAS,GAAA1X,OAAAC,YAAOyX,GAAS,CAAEA,EAAU,MACvC,IAAMrY,EAASqY,EAAU5X,IAAI,SAAA6X,GAC3B,IAAMC,EAAgBD,EAAO7X,IAAI,SAAAiM,GAAC,OAAIA,EAAIuL,KAC1C,OAAAO,aAAWT,GAAMU,QAAO7X,YAAI2X,MAExBG,EAAW,IAAIX,GAAMY,eAAe3Y,GACpC4Y,EAAW,IAAIb,GAAMc,kBAAkB,CAC3CrB,MAAO,QAEPsB,eAAe,EACfC,oBAAqB,EACrBC,mBAAoB,EACpBC,QAAS,GACTC,aAAa,IAEf7K,EAAK8K,KAAO,IAAIpB,GAAMqB,KAAKV,EAAUE,GACrC,IAAMS,EAAM,IAAItB,GAAMuB,cAAcZ,GAC9Ba,EAAM,IAAIxB,GAAMyB,kBAAkB,CAAEhC,MAAO,QAAUiC,UAAW,IAChEC,EAAY,IAAI3B,GAAM4B,aAAaN,EAAKE,GAC9ClL,EAAK8K,KAAKnN,IAAI0N,GACdrL,EAAKuL,MAAM5N,IAAIqC,EAAK8K,QACrB9K,EAEDwL,QAAU,WACR,IAAMC,EAAO,IAAI/B,GAAMgC,WAAW,IAAM9B,IACxC5J,EAAKuL,MAAM5N,IAAI8N,GACf,IAAME,EAAWhC,EAAQ,KACnBiC,EAAO,IAAIlC,GAAMmC,KAAKF,GAEV,CAEhB,CACE,SACA,CAAC/B,GAAQA,IAAkB,EAATC,IAAa,EAAG,GAClC,CAACiC,KAAKC,GAAK,EAAGD,KAAKC,GAAI,IAEzB,CACE,MACA,CAAC,EAAGnC,GAAQA,IAAkB,EAATC,IAAa,GAClC,CAACiC,KAAKC,GAAK,EAAGD,KAAKC,GAAK,EAAG,IAE7B,CACE,IACA,CACEnC,IAASC,GAASiC,KAAKE,KAAK,KAC3BpC,IAASC,GAASiC,KAAKE,KAAK,IAC7BpC,IAEF,CAACkC,KAAKC,GAAK,EAAc,EAAVD,KAAKC,GAAU,EAAG,KAI3Bja,QAAQ,SAAAC,GAAiC,IAAAka,EAAAC,EAAAla,EAAAC,YAAAF,EAAA,GAA/BoX,EAAKnX,EAAA,GAAEma,EAAQna,EAAA,GAAEoa,EAAQpa,EAAA,GACrCqa,EAAQT,EAAKU,eAAe,IAAK1C,GAAQC,IACzCQ,EAAW,IAAIX,GAAM6C,oBAAoBF,GACzCvB,EAAO,IAAIpB,GAAMqB,KACrBV,EACA,IAAIX,GAAMc,kBAAkB,CAC1BrB,MAAOA,EACPqD,KAAM9C,GAAM+C,eAGhBR,EAAAnB,EAAKqB,UAASO,IAAGhQ,MAAAuP,EAAA1Z,YAAI4Z,KACrBD,EAAApB,EAAKsB,UAASM,IAAGhQ,MAAAwP,EAAA3Z,YAAI6Z,IACrBpM,EAAKuL,MAAM5N,IAAImN,KAEjB/M,OAAO4O,MAAQ,GACI,CACjB,CAAC,SAAU,CAAC/C,GAAO,EAAG,GAAI,CAAC,EAAG,EAAG,IACjC,CAAC,MAAU,CAAC,EAAGA,GAAO,GAAI,CAAC,EAAG,GAAIkC,KAAKC,GAAK,IAC5C,CAAC,IAAU,CAAC,EAAG,EAAGnC,IAAQ,CAAC,EAAG,GAAIkC,KAAKC,GAAK,KAEnCja,QAAQ,SAAAsP,GAAiC,IAAAwL,EAAAC,EAAAxL,EAAApP,YAAAmP,EAAA,GAA/B+H,EAAK9H,EAAA,GAAE8K,EAAQ9K,EAAA,GAAE+K,EAAQ/K,EAAA,GACtCkJ,EAAW,IAAIb,GAAMyB,kBAAkB,CAC3ChC,UAEIkB,EAAW,IAAIX,GAAMoD,SAC3BzC,EAASlZ,SAAS4H,KAChB,IAAI2Q,GAAMU,QAAQ,EAAG,EAAG,GACxB,IAAIV,GAAMU,QAAQ,EAAGR,IAAS,EAAIC,MAEpC,IAAMzN,EAAO,IAAIsN,GAAMqD,KAAK1C,EAAUE,IACtCqC,EAAAxQ,EAAK+P,UAASO,IAAGhQ,MAAAkQ,EAAAra,YAAI4Z,KACrBU,EAAAzQ,EAAKgQ,UAASM,IAAGhQ,MAAAmQ,EAAAta,YAAI6Z,IACrBpM,EAAKuL,MAAM5N,IAAIvB,GACf2B,OAAO4O,MAAM5T,KAAKqD,MAErB4D,EAkBDqF,MAAQ,WACDrF,EAAKgN,UACRhN,EAAKgN,QAAUjP,OAAOkP,sBAAsBjN,EAAKkN,WAEpDlN,EAEDtF,KAAO,WACLqD,OAAOoP,qBAAqBnN,EAAKgN,UAClChN,EAEDkN,QAAU,WACRlN,EAAKoN,SAASC,SACdrN,EAAKsN,SAASC,OAAOvN,EAAKuL,MAAOvL,EAAKwN,QACtCxN,EAAKgN,QAAUjP,OAAOkP,sBAAsBjN,EAAKkN,UAClDlN,EAWA,OAXAmC,YAAA2H,EAAA,EAAAlW,IAAA,oBAAAE,MAlJD,WACE,IAAM6P,EAAQ3N,KAAKyX,MAAMC,YACnB9F,EAAS5R,KAAKyX,MAAME,aAE1B3X,KAAKuV,MAAQ,IAAI7B,GAAMkE,MAEvB5X,KAAKwX,OAAS,IAAI9D,GAAMmE,kBAAkB,GAAIlK,EAAQiE,EAAQ,GAAK,KAEnE5R,KAAKwX,OAAOrB,SAASO,IAAI,IAAM9C,GAAO,IAAMA,GAAO,GAAMA,IAEzD5T,KAAKwX,OAAOM,GAAGpB,IAAI,EAAG,EAAG,GACzB1W,KAAKoX,SAAW,IAAI1D,GAAMqE,cAAc/X,KAAKwX,OAAQxX,KAAKyX,OAC1DzX,KAAKoX,SAASC,SAEdrX,KAAKsX,SAAW,IAAI5D,GAAMsE,cAAc,CAAEC,WAAW,IACrDjY,KAAKsX,SAASY,cAAc,UAC5BlY,KAAKsX,SAASa,QAAQxK,EAAOiE,GAC7B5R,KAAKyX,MAAMW,YAAYpY,KAAKsX,SAASe,YACrCrY,KAAKwV,UACLxV,KAAK+T,eACL/T,KAAKqP,UACN,CAAAzR,IAAA,qBAAAE,MA+FD,SAAmBwa,GACbtY,KAAKsK,MAAMnP,WAAamd,EAAUnd,WAChC6E,KAAK8U,OACP9U,KAAKuV,MAAMgD,OAAOvY,KAAK8U,MACvB9U,KAAK8U,KAAKT,SAASmE,UACnBxY,KAAK8U,KAAKP,SAASiE,WAErBxY,KAAK+T,kBAER,CAAAnW,IAAA,uBAAAE,MAED,WACEkC,KAAK0E,OACL1E,KAAKyX,MAAMgB,YAAYzY,KAAKsX,SAASe,cACtC,CAAAza,IAAA,SAAAE,MAkBD,WAAS,IAAAsO,EAAApM,KACP,OACEuM,IAAAI,cAAA,OACEE,MAAO,CAAEc,MAAO,QAASiE,OAAQ,SACjCrE,IAAK,SAAAkK,GACHrL,EAAKqL,MAAQA,SAIpB3D,EA9Ja,CAASvH,IAAMkC,ufCA/B,SAASsI,GAAIhb,GAAY,IAAToX,EAAKpX,EAALoX,MACd,OACE5G,IAAAI,cAAA,OACEE,MAAO,CACLc,MAAO,OACPiE,OAAQ,OACR8G,WAAY,SACZC,QAAS,SAGXpM,IAAAI,cAAA,OAAKE,MAAO,CAAEc,MAAO,OAAQiE,OAAQ,MAAOgH,gBAAiBzF,MAKnE,SAAS0F,GAAS7c,GAAW,IAAR8J,EAAI9J,EAAJ8J,KACnB,OACEyG,IAAAI,cAAA,OACEE,MAAO,CACL+E,OAAQ,OACR8G,WAAY,SACZC,QAAS,OACTG,eAAgB,WAGjBhT,GAKP,IACMiT,GAAM,SAAAnP,GAAAC,YAAAkP,EAAAnP,GAAA,IAAAE,EAAAC,GAAAgP,GACR,SAAAA,EAAYzO,GAAO,IAAAN,EAAAC,YAAAjK,KAAA+Y,GAgBc,OAf7B/O,EAAAF,EAAAnK,KAAAK,KAAMsK,IAUDzO,WAAa,GATD,CACb,CAAEgS,GAAI,EAAG9Q,KAAM,QACf,CAAE8Q,GAAI,EAAG9Q,KAAM,SACf,CAAE8Q,GAAI,EAAG9Q,KAAM,gBACf,CAAE8Q,GAAI,EAAG9Q,KAAM,eACf,CAAE8Q,GAAI,EAAG9Q,KAAM,QACf,CAAE8Q,GAAI,EAAG9Q,KAAM,cACf,CAAE8Q,GAAI,EAAG9Q,KAAM,YAGV0H,MAAM,GAAG3I,QAAQ,SAACtB,GACY,IAA/BwP,EAAKM,MAAM5P,KAAKF,EAAKuC,OACrBiN,EAAKnO,WAAWkH,KAAKvI,EAAKuC,QAElCsM,QAAQC,IAAIU,EAAKnO,YAAYmO,EA6DlC,OA5DEmC,YAAA4M,EAAA,EAAAnb,IAAA,SAAAE,MACH,WAAS,IAAAsO,EAAApM,KACDgZ,EAAW,CACfC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,iBAAiB,EACjBC,QAAQ,EACRC,cAAc,EACdC,YAAa1Z,KAAKsK,MAAMqP,qBAE1B,OACEpN,IAAAI,cAAA,OACEsE,MAAM,qFACNpE,MAAO,CACLc,MAAO,UAGPpB,IAAAI,cAAA,WAAMJ,IAAAI,cAAA,WAAMJ,IAAAI,cAAA,WAAMJ,IAAAI,cAAA,WACpBJ,IAAAI,cAAA,OACEE,MAAO,CACL6L,WAAY,SACZ/K,MAAO,OACPgL,QAAS,eACTiB,cAAe,WAGjBrN,IAAAI,cAACoK,GAAI,CAAC5D,MAAM,YACZ5G,IAAAI,cAACoK,GAAI,CAAC5D,MAAM,YACZ5G,IAAAI,cAACoK,GAAI,CAAC5D,MAAM,aAEd5G,IAAAI,cAAA,OACEE,MAAO,CACLc,MAAO,OACPgL,QAAS,eACTiB,cAAe,WAGjBrN,IAAAI,cAAA,OACE6B,QAAS,kBAAMpC,EAAKyN,OAAOC,aAC3BjN,MAAO,CAAEK,OAAQ,YAEjBX,IAAAI,cAACoN,KAAe,CAACC,KAAMC,QAEvB1N,IAAAI,cAACuN,KAAM5c,OAAA6c,OAAA,GAAKnB,EAAQ,CAAEzL,IAAK,SAAAxO,GAAI,OAAKqN,EAAKyN,OAAS9a,KAC7CiB,KAAKnE,WAAWO,IAAI,SAAC5B,EAAMoD,GAAG,OAAM2O,IAAAI,cAACkM,GAAS,CAACjb,IAAKA,EAAKkI,KAAMtL,MAC/DwF,KAAKnE,WAAWO,IAAI,SAAC5B,EAAMoD,GAAG,OAAM2O,IAAAI,cAACkM,GAAS,CAACjb,IAAKA,EAAKkI,KAAMtL,OAEtE+R,IAAAI,cAAA,OACE6B,QAAS,kBAAMpC,EAAKyN,OAAOO,aAC3BvN,MAAO,CAAEK,OAAQ,YAEjBX,IAAAI,cAACoN,KAAe,CAACC,KAAMK,cAKhCtB,EA9ES,CAASxM,IAAMkC,WAsFZC,eALS,SAAHtD,GAAsB,MAAQ,CAC/C1Q,KAD2B0Q,EAAJ1Q,KAEvBmB,WAFuCuP,EAAVvP,aAKlB6S,CAAyBqK,0cCvHxC,IACMuB,GAAe,SAAA1Q,GAAAC,YAAAyQ,EAAA1Q,GAAA,IAAAE,EAAAC,GAAAuQ,GACnB,SAAAA,EAAYhQ,GAAO,IAAAN,EAKf,OALeC,YAAAjK,KAAAsa,IACjBtQ,EAAAF,EAAAnK,KAAAK,KAAMsK,IAORiQ,0BAA4B,SAAAnR,GAE1B,IAAMoR,EAAqBxQ,EAAKM,MAAMnP,SAASiB,IAAI,SAAAqe,GAEjD,IADA,IAAMC,EAAO,GACJpX,EAAI,EAAGA,EAAI,IAAKA,EACvBoX,EAAK3X,KAAK0X,GAASnX,EAAI8F,GAASqR,EAAQjf,SAE1C,OAAOkf,IAET1Q,EAAK2B,SAAS,CAAE6O,wBACjBxQ,EAQD2P,oBAAsB,SAAAvQ,GACpBY,EAAK2B,SAAS,CAAEvC,UAIhBY,EAAKuQ,0BAA0BnR,IA7B/BY,EAAK1O,MAAQ,CACX8N,MAAO,EACPoR,mBAAoBlQ,EAAMnP,SAASiB,IAAI,SAAAse,GAAI,OAAIA,EAAKjW,MAAM,EAAG,MAC7DuF,EAuCH,OAtCAmC,YAAAmO,EAAA,EAAA1c,IAAA,qBAAAE,MAcD,SAAmBwa,GACbtY,KAAKsK,MAAMnP,WAAamd,EAAUnd,UACpC6E,KAAKua,0BAA0Bva,KAAK1E,MAAM8N,SAE7C,CAAAxL,IAAA,SAAAE,MAUD,WACE,OACEyO,IAAAI,cAAA,OAAKE,MAAO,CAACc,MAAO,UAClBpB,IAAAI,cAAA,OAAKE,MAAO,CAAE8L,QAAS,OAAQG,eAAgB,SAAUJ,WAAY,aAAc/K,MAAO,UACxFpB,IAAAI,cAACmH,GAAU,CAAC3Y,SAAU6E,KAAK1E,MAAMkf,qBAAsB,mBAEvDjO,IAAAI,cAACoM,GAAM,CAACY,oBAAqB3Z,KAAK2Z,4BAIzCW,EA7CkB,CAAS/N,IAAMkC,WAkDrBC,eAFS,SAAH3S,GAAc,MAAQ,CAAEZ,SAAVY,EAARZ,WAEZuT,CAAyB4L,ICpCzBK,8dChBf,IACMC,GAAK,SAAAhR,GAAAC,YAAA+Q,EAAAhR,GAAA,IAAAE,EAAAC,GAAA6Q,GACT,SAAAA,EAAYtQ,GAAO,IAAAN,EAWf,OAXeC,YAAAjK,KAAA4a,IACjB5Q,EAAAF,EAAAnK,KAAAK,KAAMsK,IAaRuQ,oBAAsB,WACpB7Q,EAAK2B,SAAS,SAAA2F,GAAS,MAAK,CAC1BwJ,eAAgBxJ,EAAUwJ,kBAE7B9Q,EAED+Q,mBAAqB,WACnB/Q,EAAK2B,SAAS,SAAA2F,GAAS,MAAK,CAC1B0J,cAAe1J,EAAU0J,iBApB3BhR,EAAKnO,WAAa,GAClBmO,EAAKM,MAAMzO,WAAWC,QAAQ,SAAAC,GAAoB,IAAAC,EAAAC,YAAAF,EAAA,GAAlBvB,EAAIwB,EAAA,GAAQA,EAAA,GACtCgO,EAAKM,MAAM5P,KAAKF,IAClBwP,EAAKnO,WAAWkH,KAAKvI,KAGzBwP,EAAK1O,MAAQ,CACXwf,eAAe,EACfE,cAAc,GACdhR,EAkGH,OAjGAmC,YAAAyO,EAAA,EAAAhd,IAAA,SAAAE,MAcD,WAAS,IAAAsO,EAAApM,KACH+Q,EAAM,CAACxE,IAAAI,cAAA,MAAI/O,IAAI,YAAW,SAC9BoC,KAAKnE,WAAWC,QAAQ,SAAAtB,GACtBuW,EAAIhO,KAAKwJ,IAAAI,cAAA,MAAI/O,IAAKpD,GAAOA,MAE3B,IAAMygB,EAAYjb,KAAKsK,MAAMnO,aAAaC,IAAI,SAAAgP,EAAc9H,GAAC,IAAA+H,EAAApP,YAAAmP,EAAA,GAAb/O,EAAGgP,EAAA,GAAEvQ,EAAIuQ,EAAA,UACvDkB,IAAAI,cAAA,MAAI/O,IAAK0F,EAAG0N,cAAY,WACrB,CAAClW,GAAIwB,OAAAC,YAAK6P,EAAK9B,MAAMhQ,WAAW+B,KAAMD,IAAI,SAACiM,EAAGpB,GAAC,OAC9CsF,IAAAI,cAAA,MAAI/O,IAAKqJ,GAAIoB,QAKnBgB,QAAQC,IAAItJ,KAAKsK,MAAM9N,YACvB,IAAM0e,EAAUlb,KAAKsK,MAAM9N,WAAWJ,IAAI,SAACC,EAAKiH,GAAC,OAC/CiJ,IAAAI,cAAA,MAAI/O,IAAK0F,EAAG0N,cAAY,WACrB5E,EAAK9B,MAAMhQ,WAAW+B,GAAKD,IAAI,SAACiM,EAAGpB,GAAC,OACnCsF,IAAAI,cAAA,MAAI/O,IAAKqJ,GAAIoB,QAGhB8S,EAGoCnb,KAAK1E,MAApCwf,EAAaK,EAAbL,cAAeE,EAAYG,EAAZH,aAQvB,OACIzO,IAAAI,cAAA,OAAKC,UAAU,wBAAuB,mBAEpCL,IAAAI,cAAA,OAAKC,UAAU,mBACbL,IAAAI,cAAA,OAAKE,MAAO,CAAEc,MAAO,QAASiE,OAAQ,QAASgH,gBAAiB,YAC9DrM,IAAAI,cAAA,SAAOC,UAAWwO,KAAW,QAAS,cAAe,CAACC,eAAe,IACjExO,MAAO,CAACyO,SAAU,UACpB/O,IAAAI,cAAA,aACEJ,IAAAI,cAAA,UAAKoE,IAEPxE,IAAAI,cAAA,aAAQsO,KAGZ1O,IAAAI,cAAA,WACEJ,IAAAI,cAAA,MAAKE,MAAO,CAACyB,QAAW,SAAS,0BACjC/B,IAAAI,cAAA,KAAGC,UAAU,eAAeC,MAAO,CAAEc,MAAO,UAAW,sDACOmN,EAvBlD,iMAuBkF,IAC5FvO,IAAAI,cAAA,UAAQC,UAAU,eAAe4B,QAASxO,KAAK6a,qBAC5CC,EAAgBvO,IAAAI,cAAA,QAAMC,UAAU,YAAW,YAAoBL,IAAAI,cAAA,QAAMC,UAAU,YAAW,iBAI7F,WAGRL,IAAAI,cAAA,OAAKC,UAAU,mBACXL,IAAAI,cAAA,OAAKE,MAAO,CAAEc,MAAO,QAASiE,OAAQ,QAASgH,gBAAiB,YAC9DrM,IAAAI,cAAA,SACEC,UAAWwO,KAAW,QAAS,cAAe,CAC9CC,eAAe,IAEjBxO,MAAO,CACLyO,SAAU,UAEZ/O,IAAAI,cAAA,aACEJ,IAAAI,cAAA,UAAKoE,EAAItM,MAAM,KAEjB8H,IAAAI,cAAA,aAAQuO,KAGV3O,IAAAI,cAAA,WACEJ,IAAAI,cAAA,MAAKE,MAAO,CAACyB,QAAW,SAAS,6BACjC/B,IAAAI,cAAA,KAAGC,UAAU,eAAeC,MAAO,CAAEc,MAAO,UAAW,yDACUqN,EA9CtD,2FA8CoF,IAC7FzO,IAAAI,cAAA,UAAQC,UAAU,eAAe4B,QAASxO,KAAK+a,oBAC5CC,EAAezO,IAAAI,cAAA,QAAMC,UAAU,YAAW,YAAoBL,IAAAI,cAAA,QAAMC,UAAU,YAAW,sBAOzGgO,EA9GQ,CAASrO,IAAMkC,WAiIXC,eAhBc,SAAH9C,GAMpB,MACC,CACLhQ,OAPMgQ,EAANhQ,OAQAtB,WAPUsR,EAAVtR,WAQA6B,aAPYyP,EAAZzP,aAQAK,WAPUoP,EAAVpP,WAQAX,WAPU+P,EAAV/P,WAQAnB,KAPIkR,EAAJlR,OAUagU,CAA8BkM,0cC1H7C,IACMpL,GAAQ,SAAA5F,GAAAC,YAAA2F,EAAA5F,GAAA,IAAAE,EAAAC,GAAAyF,GACV,SAAAA,EAAYlF,GAAO,IAAAN,EAIuB,OAJvBC,YAAAjK,KAAAwP,IACfxF,EAAAF,EAAAnK,KAAAK,KAAMsK,IAMVC,YAAc,WACVP,EAAKM,MAAM+E,SACdrF,EAEDsF,iBAAmB,SAAA7D,GACfzB,EAAKM,MAAMtP,WAAWyQ,EAAMC,OAAO5N,QAVnCkM,EAAKa,OAAS,GACdb,EAAKa,OAAO9N,KAAOwP,IAAMC,YACzBxC,EAAKa,OAAO5N,MAAQsP,IAAMC,YAAYxC,EAqCzC,OApCAmC,YAAAqD,EAAA,EAAA5R,IAAA,SAAAE,MAUD,WACI,OACIyO,IAAAI,cAAA,OAAKC,UAAU,qBAAqBC,MAAO,CAAEkB,SAAU,UACnDxB,IAAAI,cAAA,UAAI,yBACJJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,UAAK,qJAEmCJ,IAAAI,cAAA,YAExCJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,KAAGC,UAAU,mBAAkB,4CACcL,IAAAI,cAAA,YAE7CJ,IAAAI,cAAA,WACIJ,IAAAI,cAAA,UACIvS,KAAK,SACLwS,UAAU,kBACVC,MAAO,CAAEc,MAAO,QAChBa,QAASxO,KAAKuK,aACjB,kBAMhBiF,EA1CS,CAASjD,IAAMkC,WA4DdC,eAfS,SAAH3S,GAAoC,MAAQ,CAC7DF,WADiCE,EAAVF,WAEvBnB,KAFuCqB,EAAJrB,KAGnCiB,OAH+CI,EAANJ,OAIzCV,KAJqDc,EAAJd,OAO1B,SAAA2T,GAAQ,MAAK,CACpCS,MAAO,WACHT,EAAS1U,EAAmB,YAEhCK,WAAY,SAACC,EAAME,GAAI,OAAKkU,EAASrU,EAAWC,EAAME,KACtDM,WAAY,SAAAC,GAAI,OAAI2T,EAAS5T,EAAWC,OAG7ByT,CAGbc,IClBF,IAeed,eAfS,SAAHrD,GAA4D,MAAO,CACtF/Q,WADkC+Q,EAAV/Q,WAExBkC,WAF8C6O,EAAV7O,WAGpCX,WAH0DwP,EAAVxP,WAIhDnB,KAJgE2Q,EAAJ3Q,KAK5DiC,cAL+E0O,EAAb1O,gBAQzC,SAAAiS,GAAQ,MAAK,CACtC2M,QAAS,WACP3M,EAAS1U,EAAmB,YAC5B0U,EhBqB0B,CAC5BxU,KApFqB,egBkERsU,CAlEf,SAAe3S,GACf,IADiBzB,EAAUyB,EAAVzB,WAAYkC,EAAUT,EAAVS,WAAYX,EAAUE,EAAVF,WAAYnB,EAAIqB,EAAJrB,KAAMiC,EAAaZ,EAAbY,cAAe4e,EAAOxf,EAAPwf,QAEpExK,EAAM,GACVlV,EAAWC,QAAQ,SAAAE,GAAoB,IAAAoP,EAAAnP,YAAAD,EAAA,GAAlBxB,EAAI4Q,EAAA,GACvB,GAD+BA,EAAA,GAC3B1Q,EAAKF,GAAO,CACd,IAAMghB,EAAKjP,IAAAI,cAAA,MAAI/O,IAAKpD,GAAOA,GAC3BuW,EAAIhO,KAAKyY,MAGb,IAAM1L,EAAMtT,EAAWJ,IAAI,SAACC,EAAKiH,GAAC,OAC9BiJ,IAAAI,cAAA,MAAI/O,IAAK0F,EAAG0N,cAAY,WACrB1W,EAAW+B,GAAKD,IAAI,SAACiM,EAAGpB,GAAO,OAAOsF,IAAAI,cAAA,MAAI/O,IAAKqJ,GAAIoB,QAG1D,OACIkE,IAAAI,cAAA,OAAKC,UAAU,0BACbL,IAAAI,cAAA,UAAI,wCAAsChQ,EAAcnB,OAAS,EAAE,KACnE+Q,IAAAI,cAAA,UACyB,IAAtBnQ,EAAWhB,OACN,2BAA0B,GAAAc,OACvBE,EAAWhB,OAAM,kCAE5B+Q,IAAAI,cAAA,SACIC,UAAWwO,KAAW,QAAS,cAAe,CAC5CC,cAAevL,EAAItU,OAAS,IAE9BqR,MAAO,CACLkB,SAAU,QACVgE,OAAQ,SAGZxF,IAAAI,cAAA,aACAJ,IAAAI,cAAA,UAAKoE,IAELxE,IAAAI,cAAA,aAAQmD,IAEVvD,IAAAI,cAAA,OAAKC,UAAU,sCACbL,IAAAI,cAACyE,GAAS,OAEZ7E,IAAAI,cAAA,WACIJ,IAAAI,cAAA,UAAQvS,KAAK,SACLwS,UAAU,aACVC,MAAO,CAAEc,MAAO,SAChBa,QAAS+M,GAAS,ohDCtCtC,IAAIE,GAAW,GACXC,GAAY,EACZC,GAAgB,EAChBC,GAAiB,GACjBC,GAAc,EAEZC,GAAW,SAAXA,EAAQ/f,GAAmC,IAA7BggB,EAAIhgB,EAAJggB,KAAMC,EAAKjgB,EAALigB,MAAKC,EAAAlgB,EAAEmgB,aAAK,IAAAD,EAAG,EAACA,EAChCE,EAAaH,EAAMvf,OAAO,SAAA2f,GAAK,OAAIA,EAAMC,WAAaN,EAAKlO,KAEjE,OACItB,IAAAI,cAAA,UACIJ,IAAAI,cAAA,KAAG2P,KAAK,KAAKP,EAAKhf,MACjBof,EAAW3gB,OAAS,GACjB+Q,IAAAI,cAAA,UACKwP,EAAW/f,IAAI,SAAAggB,GAAK,OACjB7P,IAAAI,cAACmP,EAAQ,CAACC,KAAMK,EAAOJ,MAAOA,EAAOE,MAAOA,EAAQ,SA0B5E,SAASK,GAAIC,GAAgD,IAA1CC,EAAIlhB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIsgB,EAAWtgB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAEihB,EAAYnhB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAItD,GAHAkhB,EAAK1Z,KAAKyZ,GAGNE,IAAiBb,GAAeW,EAAKG,UAAYH,EAAKG,SAASnhB,QAAU,EAEzE,OAAOihB,EAGX,GAAID,EAAKG,SAAU,KACgBC,EADhBC,EAAAC,GACGN,EAAKG,UAAQ,IAA/B,IAAAE,EAAAE,MAAAH,EAAAC,EAAAG,KAAAjb,MAAiC,KACvBd,EAASsb,GADLK,EAAA9e,MACcvB,YAAMkgB,GAAOZ,EAAaa,EAAe,GACjE,GAAIzb,EAAQ,OAAOA,GACtB,MAAAtC,GAAAke,EAAAI,EAAAte,GAAA,QAAAke,EAAAK,KAGL,OAAO,KAIX,SAASC,GAAaX,GAGlB,IADA,IAAIvb,EAAS,KACN4a,GAAc,KACjB5a,EAASsb,GAAIC,EAAM,GAAIX,MAEvBA,KAGJ,IAAI5a,EACJ,CACI,IAAImc,EAAQ,GACRC,EAAYb,EAEhB,IADAY,EAAMra,KAAKsa,GACLA,EAAUV,UAEZS,EAAMra,KAAKsa,EAAUV,SAAS,IAC9BU,EAAYA,EAAUV,SAAS,GAEnC,MAAO,CAACS,GAGZ,IAAIA,EAAK7gB,YAAO0E,GACZoc,EAAYpc,EAAOA,EAAOzF,OAAS,GAAGmhB,SAAS,GAEnD,IADAS,EAAMra,KAAKsa,GACLA,EAAUV,UAEZS,EAAMra,KAAKsa,EAAUV,SAAS,IAC9BU,EAAYA,EAAUV,SAAS,GAGnC,IAAIW,EAAK/gB,YAAO0E,GAGhB,IAFAoc,EAAYpc,EAAOA,EAAOzF,OAAS,GAAGmhB,SAAS,GAC/CW,EAAMva,KAAKsa,GACLA,EAAUV,UAEZW,EAAMva,KAAKsa,EAAUV,SAAS,IAC9BU,EAAYA,EAAUV,SAAS,GAEnC,MAAO,CAACS,EAAOE,GAInB,IACMrO,GAAM,SAAArF,GAAAC,YAAAoF,EAAArF,GAAA,IAAAE,EAAAC,GAAAkF,GACR,SAAAA,EAAY3E,GAAO,IAAAN,EAAAC,YAAAjK,KAAAiP,IACfjF,EAAAF,EAAAnK,KAAAK,KAAMsK,IA4EViT,aAAe,SAACf,EAAMgB,GAClB,GAAmB,IAAfA,EAAIhiB,OAOA,OALKghB,EAAKG,WAENH,EAAKG,SAAW,SAEpBH,EAAKG,SAAS5Z,KAAK,CAAEhG,KAAMygB,EAAI,KAG9BhB,EAAKG,WAENH,EAAKG,SAAW,IAEpB,IAAIZ,EAAOS,EAAKG,SAASc,KAAK,SAAArB,GAAK,OAAIA,EAAMrf,OAASygB,EAAI,KACrDzB,IAEDA,EAAO,CAAEhf,KAAMygB,EAAI,IACnBhB,EAAKG,SAAS5Z,KAAKgZ,IAEvB/R,EAAKuT,aAAaxB,EAAMyB,EAAI/Y,MAAM,KACzCuF,EACD0T,gBAAkB,SAAC3X,GACX,IACsB4X,EADhBnB,EAAO,CAAEzf,KAAM,QAAS6gB,EAAAd,GACZ/W,GAAI,IAAtB,IAAA6X,EAAAb,MAAAY,EAAAC,EAAAZ,KAAAjb,MACA,KADWyb,EAAGG,EAAA7f,MAEVkM,EAAKuT,aAAaf,EAAMgB,IAC3B,MAAA7e,GAAAif,EAAAX,EAAAte,GAAA,QAAAif,EAAAV,IACD,OAAOV,GACdxS,EACD6T,gBAAkB,SAACrB,GAKf,IAJA,IAAMsB,EAAY,GACZC,EAAQ,CAAC,CAAEhC,KAAMS,EAAMH,SAAU,OACnC2B,EAAY,EAETD,EAAMviB,OAAS,GAAG,KAAAyiB,EACMF,EAAMG,QAAzBnC,EAAIkC,EAAJlC,KAAMM,EAAQ4B,EAAR5B,SAKd,GAHAyB,EAAU/a,KAAK,CAAE8K,GAAImQ,EAAWjhB,KAAMgf,EAAKhf,KAAMsf,aAG7CN,EAAKY,SAAU,KACkBwB,EADlBC,EAAAtB,GACKf,EAAKY,UAAQ,IAAjC,IAAAyB,EAAArB,MAAAoB,EAAAC,EAAApB,KAAAjb,MAAmC,KAAxBqa,EAAK+B,EAAArgB,MAChBigB,EAAMhb,KAAK,CAAEgZ,KAAMK,EAAOC,SAAU2B,KACnC,MAAArf,GAAAyf,EAAAnB,EAAAte,GAAA,QAAAyf,EAAAlB,KAGLc,IAGJ,OAAOF,GACV9T,EAEDqU,oBAAsB,SAACtC,EAAMuC,EAAcC,GACvC,IAAKxC,EAAKY,UAAqC,IAAzBZ,EAAKY,SAASnhB,OAAc,OAAOugB,EAGzD,IADA,IAAIyC,EAAa,EACRlb,EAAI,EAAGA,EAAIyY,EAAKY,SAASnhB,OAAQ8H,IAAK,CAC3C,IAAM8Y,EAAQL,EAAKY,SAASrZ,GACxB8Y,EAAMrf,OAASuhB,GAAgBlC,EAAMrf,OAASwhB,GAC9CC,IAIR,IAAIC,EAAWliB,YAAOwf,EAAKY,UAK3B,OAJI6B,GAAc,IACdC,EAAcA,EAAYhiB,OAAO,SAAA2f,GAAK,OAAIA,EAAMrf,OAASuhB,KAG7DpiB,YAAA,GACO6f,EAAI,CACPY,SAAU8B,EAAYriB,IAAI,SAAAggB,GAAK,OAAIpS,EAAKqU,oBAAoBjC,EAAOkC,EAAcC,QAExFvU,EAED4F,OAAS,SAAC8O,GAEN,IAAIC,EADJhD,KAEc,IAAX+C,EACCC,EAAc3U,EAAKqU,oBAAoBrU,EAAK1O,MAAMkhB,KAC9CxS,EAAK1O,MAAMyU,KAAK,GAAG8L,IAAa9e,KAChCiN,EAAK1O,MAAMyU,KAAK,GAAG8L,IAAa9e,MACrB,IAAX2hB,IACJC,EAAc3U,EAAKqU,oBAAoBrU,EAAK1O,MAAMkhB,KAC9CxS,EAAK1O,MAAMyU,KAAK,GAAG8L,IAAa9e,KAChCiN,EAAK1O,MAAMyU,KAAK,GAAG8L,IAAa9e,OAMxC,IAJA,IAAM6hB,EAAkB5U,EAAK6T,gBAAgBc,GACvCE,EAAa1B,GAAawB,GAC1BG,EAxPd,SAASC,EAAYvC,GAAwB,IAAlBwC,EAAWzjB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACrC,IAAKihB,EAAM,MAAO,GAGlB,GADAwC,EAAYjc,KAAKyZ,EAAKzf,OACjByf,EAAKG,UAAqC,IAAzBH,EAAKG,SAASnhB,OAChC,MAAO,CAACwjB,GAGZ,IAC+BC,EAD3BC,EAAQ,GAAGC,EAAArC,GACGN,EAAKG,UAAQ,IAA/B,IAAAwC,EAAApC,MAAAkC,EAAAE,EAAAnC,KAAAjb,MAAiC,KAAxBqa,EAAK6C,EAAAnhB,MACVohB,EAAQA,EAAM5iB,OAAOyiB,EAAY3C,EAAK7f,YAAMyiB,MAC/C,MAAArgB,GAAAwgB,EAAAlC,EAAAte,GAAA,QAAAwgB,EAAAjC,IAED,OAAOgC,EA2OiBH,CAAYJ,GAC5BS,EAAgB,GACZ9b,EAAI,EAAGA,EAAIwb,EAAYtjB,SAAU8H,EACrC8b,EAAcrc,KAAK+b,EAAYxb,GAAGmB,MAAM,EAAGqa,EAAYxb,GAAG9H,OAAS,IAEvE6N,QAAQC,IAAI8V,GAEZ,IADA,IAAIC,EAAU,GAAGC,EAAA,WACZ,IAEG/X,EAFMgY,EAAAC,GAEWzS,KAAK,KACtB0S,EAAazV,EAAKM,MAAMhQ,WAAWolB,UAAU,SAAAC,GAAS,OAAIA,EAAU5S,KAAK,OAASxF,KAClE,IAAhBkY,GACAJ,EAAQtc,KAAK0c,IALrBD,EAAA,EAAAD,EAAkBH,EAAaI,EAAAD,EAAA/jB,OAAAgkB,IAAAF,IAQ/BjW,QAAQC,IAAIsS,IACZvS,QAAQC,IAAI+V,GACZ,IAAMO,EAAehE,GAAenf,OAAO,SAAAuK,GAAK,OAAKqY,EAAQlU,SAASnE,KACtEqC,QAAQC,IAAIsW,GAEZhE,GAAiByD,EACjBrV,EAAKM,MAAM1P,YAAYglB,EAAcjE,IAElCkD,EAAWrjB,OAAS,GACnBwO,EAAKM,MAAMqG,aAEf3G,EAAK2B,SAAS,CACV6Q,KAAMmC,EACNb,UAAWc,EACX7O,KAAM8O,GACP,WACCxV,QAAQC,IAAIU,EAAK1O,MAAMkhB,MACvBnT,QAAQC,IAAIU,EAAK1O,MAAMwiB,WACvBzU,QAAQC,IAAIU,EAAK1O,MAAMyU,SAE9B/F,EAED6V,WAAa,WAET7V,EAAKM,MAAMwV,iBACXzW,QAAQC,IAAIU,EAAKM,MAAMhQ,aAnLvBqhB,GAAgB,EAAGE,GAAc,EAAGD,GAAiB,GACrDF,GAAY1R,EAAKM,MAAMhQ,WAAW,GAAGkB,OACrCigB,GAAW,CACP,CAAE5N,GAAI,EAAG9Q,KAAM,OAAQsf,SAAU,MACjC,CAAExO,GAAI,EAAG9Q,KAAM,OAAQsf,SAAU,GACjC,CAAExO,GAAI,EAAG9Q,KAAM,QAASsf,SAAU,GAClC,CAAExO,GAAI,EAAG9Q,KAAM,eAAgBsf,SAAU,GACzC,CAAExO,GAAI,EAAG9Q,KAAM,MAAOsf,SAAU,IAIpC,IADA,IAAItW,EAAO,GACHzC,EAAI,EAAGA,EAAI0G,EAAKM,MAAMhQ,WAAWkB,SAAU8H,EACnD,CAEI,IADA,IAAMka,EAAM,GACHvW,EAAI,EAAGA,EAAI+C,EAAKM,MAAMhQ,WAAWgJ,GAAG9H,SAAUyL,EACnDuW,EAAIza,KAAKiH,EAAKM,MAAMhQ,WAAWgJ,GAAG2D,IACtCuW,EAAIza,KAAK,WAAaO,EAAE,IACxByC,EAAKhD,KAAKya,GAId,IADA,IAAI6B,EAAU,GACN/b,EAAI,EAAGA,EAAI0G,EAAKM,MAAMhQ,WAAWkB,SAAU8H,EAE/C+b,EAAQtc,KAAKO,GACbsY,GAAe7Y,KAAKO,GAExB0G,EAAKM,MAAMvP,cAAcskB,GAKzB5D,IAHAA,GAAWA,GAAShf,OAAO,SAACjC,EAAM4O,GAAK,OACzB,IAAVA,GAAeA,IAAUqS,GAASjgB,OAAS,GAAoC,IAA/BwO,EAAKM,MAAM5P,KAAKF,EAAKuC,SAErDX,IAAI,SAAC5B,EAAM4O,GAC3B,OAAAlN,YAAA,GACO1B,EAAI,CACPqT,GAAIzE,EAAQ,EACZiT,SAAoB,IAAVjT,EAAc5O,EAAK6hB,SAAWjT,MAIhD,IAAMoT,EAAOxS,EAAK0T,gBAAgB3X,GAC5B+X,EAAY9T,EAAK6T,gBAAgBrB,GACjCzM,EAAOoN,GAAaX,GAMxB,OALFxS,EAAK1O,MAAQ,CACTyK,KAAMA,EACNyW,KAAMA,EACNsB,UAAWA,EACX/N,KAAMA,GACR/F,EA+WL,OA9WAmC,YAAA8C,EAAA,EAAArR,IAAA,oBAAAE,MAuID,WACI,IAAMiiB,EAAYC,SAASC,cAAc,yBACzCF,EAAUG,YAAcH,EAAUI,YAAcJ,EAAUrI,aAAe,IAC5E,CAAA9Z,IAAA,SAAAE,MAGD,WAAS,IAAAsO,EAAApM,KAED+Q,EAAM,KAAMjB,EAAM,KACtBzG,QAAQC,IAAImS,IACTzb,KAAK1E,MAAMyU,KAAKvU,OAAS,GACxBuV,EAAM,CAACxE,IAAAI,cAAA,MAAI/O,IAAI,cAAa,WAC5B6d,GAAShX,MAAM,EAAGiX,GAAY,GAAGjX,MAAM,GAAG3I,QAAQ,SAAAtB,GAC9CuW,EAAIhO,KAAKwJ,IAAAI,cAAA,MAAI/O,IAAKpD,EAAKqT,IAAKrT,EAAKuC,SAErCgU,EAAIhO,KAAKwJ,IAAAI,cAAA,MAAI/O,IAAI,kBAEjBkS,EAAM9P,KAAK1E,MAAMyU,KAAK3T,IAAI,SAACC,EAAKiH,GAC5B,IAAM0M,EAAM,CAACzD,IAAAI,cAAA,MAAI/O,IAAI,cAAc0F,EAAE,IAgBrC,OAfAjH,EAAIoI,MAAM,EAAGiX,GAAY,GAAGjX,MAAM,GAAG3I,QAAQ,SAACuM,EAAGpB,GAC7C+I,EAAIjN,KAAKwJ,IAAAI,cAAA,MAAI/O,IAAKqJ,GAAIoB,EAAEtL,SAG5BiT,EAAIjN,KACAwJ,IAAAI,cAAA,MAAI/O,IAAI,gBACJ2O,IAAAI,cAAA,UAAQvS,KAAK,SACLwS,UAAU,aACVC,MAAO,CAAEc,MAAO,OAAQiE,OAAQ,UAChCpD,QAAS,kBAAMpC,EAAKwD,OAAOtM,KAAI,YAO3CiJ,IAAAI,cAAA,MAAI/O,IAAK0F,EAAG0N,cAAY,WACnBhB,OAMbe,EAAM,CAACxE,IAAAI,cAAA,MAAI/O,IAAI,gBACf6d,GAAShX,MAAM,EAAGiX,GAAY,GAAGjX,MAAM,GAAG3I,QAAQ,SAAAtB,GAC9CuW,EAAIhO,KAAKwJ,IAAAI,cAAA,MAAI/O,IAAKpD,EAAKqT,IAAKrT,EAAKuC,SAGrC+S,EAAM9P,KAAK1E,MAAMyU,KAAK3T,IAAI,SAACC,EAAKiH,GAC5B,IAAM0M,EAAM,CAACzD,IAAAI,cAAA,MAAI/O,IAAI,cAAcvB,EAAIqf,GAAU,GAAG3e,OAKpD,OAJAV,EAAIoI,MAAM,EAAGiX,GAAY,GAAGjX,MAAM,GAAG3I,QAAQ,SAACuM,EAAGpB,GAC7C+I,EAAIjN,KAAKwJ,IAAAI,cAAA,MAAI/O,IAAKqJ,GAAIoB,EAAEtL,SAIxBwP,IAAAI,cAAA,MAAI/O,IAAK0F,EAAG0N,cAAY,WACnBhB,MAMjB,IAAMoQ,EAAWpgB,KAAK1E,MAAMwiB,UAAUL,KAAK,SAAA1B,GAAI,OAAsB,OAAlBA,EAAKM,WAClDgE,EAAW5E,GAASgC,KAAK,SAAA1B,GAAI,OAAsB,OAAlBA,EAAKM,WAE5C,OAAGrc,KAAK1E,MAAMyU,KAAKvU,OAAS,EAGpB+Q,IAAAI,cAAA,OAAKC,UAAU,qBAAqBC,MAAO,IACvCN,IAAAI,cAAA,OAAKqB,IAAI,GAAGC,IAAKqS,KAAWzT,MAAO,CAAEc,MAAS,UAC9CpB,IAAAI,cAAA,KAAGE,MAAO,CAAEsB,WAAc,YAAaC,aAAgB,MAAOE,QAAW,OACrEiB,SAAY,OAAQlB,UAAa,SACjC9B,IAAAI,cAAA,QAAME,MAAO,CAAE0C,SAAY,SAAShD,IAAAI,cAAA,cAAQ,iBAA4B,qKAExEJ,IAAAI,cAAA,WAAM,2BAAoCJ,IAAAI,cAAA,UAAI,WAAY,8CAC1DJ,IAAAI,cAAA,WAAM,2BAAoCJ,IAAAI,cAAA,UAAI,WAAY,qDAC1DJ,IAAAI,cAAA,WAAM,2BAAoCJ,IAAAI,cAAA,UAAI,WAAY,oEAE9DJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,MAAIE,MAAO,CACPsB,WAAc,8CACdC,aAAgB,MAChBC,UAAa,OACbC,QAAW,MACXC,UAAa,mCAEbhC,IAAAI,cAAA,cAAQJ,IAAAI,cAAA,UAAI,gBAA2B,gBAE3CJ,IAAAI,cAAA,KAAGE,MAAO,CAAEsB,WAAc,YAAaC,aAAgB,MAAOE,QAAW,MACrEiB,SAAY,OAAQlB,UAAa,SACjC9B,IAAAI,cAAA,cAAQ,cAAqB,+DAEjCJ,IAAAI,cAAA,OAAKC,UAAU,iDACXL,IAAAI,cAAA,OAAKC,UAAU,YACXL,IAAAI,cAAA,SAAOC,UAAU,iCACbL,IAAAI,cAAA,aACAJ,IAAAI,cAAA,UAAKoE,IAELxE,IAAAI,cAAA,aAAQmD,MAIpBvD,IAAAI,cAAA,WACAJ,IAAAI,cAAA,MAAIE,MAAO,CACPsB,WAAc,8CACdC,aAAgB,MAChBC,UAAa,OACbC,QAAW,MACXC,UAAa,mCAEbhC,IAAAI,cAAA,cAAQJ,IAAAI,cAAA,UAAI,gBAA2B,YAE3CJ,IAAAI,cAAA,KAAGE,MAAO,CAAEsB,WAAc,YAAaC,aAAgB,MAAOE,QAAW,OACrEiB,SAAY,OAAQlB,UAAa,SACjC9B,IAAAI,cAAA,cAAQ,UAAe,mNAI3BJ,IAAAI,cAAA,OAAK4T,MAAM,mBACPhU,IAAAI,cAAA,OAAK4T,MAAM,SACPhU,IAAAI,cAAA,OAAKC,UAAU,QACXL,IAAAI,cAAA,UACIJ,IAAAI,cAACmP,GAAQ,CAACC,KAAMsE,EAAUrE,MAAOP,QAGvC,mBAENlP,IAAAI,cAAA,OAAK4T,MAAM,SACPhU,IAAAI,cAAA,OAAKC,UAAU,QACXL,IAAAI,cAAA,UACIJ,IAAAI,cAACmP,GAAQ,CAACC,KAAMqE,EAAUpE,MAAOhc,KAAK1E,MAAMwiB,gBAK5DvR,IAAAI,cAAA,OAAKC,UAAU,mBACXL,IAAAI,cAAA,OAAKC,UAAU,UACXL,IAAAI,cAAA,MAAIE,MAAO,CAACc,MAAS,UAAWW,QAAW,SAAS,eAClD,mBAEN/B,IAAAI,cAAA,OAAKC,UAAU,UACXL,IAAAI,cAAA,MAAIE,MAAO,CAACc,MAAS,OAAQW,QAAW,SAAS,gBAIzD/B,IAAAI,cAAA,WACAJ,IAAAI,cAAA,MAAIE,MAAO,CACPsB,WAAc,8CACdC,aAAgB,MAChBC,UAAa,OACbC,QAAW,MACXC,UAAa,mCAEbhC,IAAAI,cAAA,cAAQJ,IAAAI,cAAA,UAAI,gBAA2B,eAE3CJ,IAAAI,cAAA,KAAGE,MAAO,CAAEsB,WAAc,YAAaC,aAAgB,MAAOE,QAAW,OACrEiB,SAAY,OAAQlB,UAAa,SACjC9B,IAAAI,cAAA,cAAQ,UAAe,gIAI3BJ,IAAAI,cAAA,OAAKC,UAAU,wBAAuB,mBAElCL,IAAAI,cAAA,OAAKC,UAAU,8BACXL,IAAAI,cAACyE,GAAS,OACR,+CAEN7E,IAAAI,cAAA,OAAKC,UAAU,8BACXL,IAAAI,cAACiO,GAAK,QAIdrO,IAAAI,cAAA,WACAJ,IAAAI,cAAA,WACIJ,IAAAI,cAAA,UAAQvS,KAAK,SACLwS,UAAU,aACVC,MAAO,CAAEc,MAAO,SAChBa,QAASxO,KAAK6f,YAAY,mBAItCtT,IAAAI,cAAA,YAQJJ,IAAAI,cAAA,OAAKC,UAAU,qBAAqBC,MAAO,IACvCN,IAAAI,cAAA,UAAI,sBACJJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,WAEAJ,IAAAI,cAAA,UAAI,iEAGJJ,IAAAI,cAAA,OAAKC,UAAU,iDACXL,IAAAI,cAAA,OAAKC,UAAU,YACXL,IAAAI,cAAA,SAAOC,UAAU,iCACbL,IAAAI,cAAA,aACAJ,IAAAI,cAAA,UAAKoE,IAELxE,IAAAI,cAAA,aAAQmD,MAKpBvD,IAAAI,cAAA,OAAK4T,MAAM,mBACPhU,IAAAI,cAAA,OAAK4T,MAAM,SACPhU,IAAAI,cAAA,OAAKC,UAAU,QACXL,IAAAI,cAAA,UACIJ,IAAAI,cAACmP,GAAQ,CAACC,KAAMsE,EAAUrE,MAAOP,QAK7ClP,IAAAI,cAAA,OAAK4T,MAAM,SACPhU,IAAAI,cAAA,OAAKC,UAAU,QACXL,IAAAI,cAAA,UACIJ,IAAAI,cAACmP,GAAQ,CAACC,KAAMqE,EAAUpE,MAAOhc,KAAK1E,MAAMwiB,qBAY3E7O,EA1bO,CAAS1C,IAAMkC,WAwdZC,eA3BS,SAAH1S,GAAA,IAAM1B,EAAU0B,EAAV1B,WAA+D,MAAQ,CAC9FuB,WAD6CG,EAAVH,WAEnCnB,KAFmDsB,EAAJtB,KAG/CiB,OAH2DK,EAANL,OAIrDrB,aACAqC,cAL0EX,EAAbW,cAM7DH,WANsFR,EAAVQ,aASrD,SAAAoS,GAAQ,MAAK,CACpC+B,WAAY,WACR/B,EAAS1U,EAAmB,YAEhCa,cAAe,SAAAF,GACX+T,EAAS7T,EAAcF,KAE3BilB,eAAgB,WACZlR,EAAS1U,EAAmB,YAC5B0U,EjB1esB,CAC5BxU,KApFqB,YiB8jBfiP,QAAQC,IAAI,UAEhB1O,YAAa,SAACC,EAASC,GACnB8T,EAAShU,EAAYC,EAASC,OAKvB4T,CAGbO,meCnkBF,IACMuR,GAAa,SAAA5W,GAAAC,YAAA2W,EAAA5W,GAAA,IAAAE,EAAAC,GAAAyW,GACjB,SAAAA,EAAYlW,GAAO,IAAAN,EAKf,OALeC,YAAAjK,KAAAwgB,IACjBxW,EAAAF,EAAAnK,KAAAK,KAAMsK,IAOR+G,eAAiB,WACfrH,EAAK2B,SAAS,SAAA2F,GAAS,MAAK,CAC1BC,UAAWD,EAAUC,aAExBvH,EAEDwH,cAAgB,WACdxH,EAAK2B,SAAS,CACZ8F,UAAW,QAEdzH,EAED0H,YAAc,SAAC5T,EAAK/B,GAAgB,IAAZqN,EAAKrN,EAALqN,MACtBY,EAAK2B,SAAS,CACZ8F,UAAWzH,EAAKM,MAAMqH,KAAKvI,MApB7BY,EAAK1O,MAAQ,CACXmW,UAAW,KACXF,UAAU,GACVvH,EA2GH,OA1GAmC,YAAAqU,EAAA,EAAA5iB,IAAA,SAAAE,MAoBD,WAAS,IACCyT,EAAavR,KAAK1E,MAAlBiW,SAQR,OACEhF,IAAAI,cAAA,WACEJ,IAAAI,cAAA,OAAKE,MAAO,CAAEc,MAAO,QAASiE,OAAQ,UACpCrF,IAAAI,cAACkF,IAAc,CAACC,aAAc9R,KAAKwR,cACnB3E,MAAO,CAAEsB,WAAY,QACrB4D,OAAQ,CAAEC,KAAM,GAAIC,MAAO,GAAIC,IAAK,GAAIC,OAAQ,KAC9D5F,IAAAI,cAACyF,IAAK,CACJC,WAAYrS,KAAKsK,MAAMqH,KAAKvV,IAAI,SAAC3B,EAAK4B,GAAG,OAAKA,IAC9CiW,WAAY,SAAAxU,GAAK,OAAIA,EAAMmS,YAC3BpD,MAAO,CACL0F,MAAO,CAAEC,KAAM,SACf1M,KAAM,CAAE2M,OAAQ,OAAQD,KAAM,QAASE,WAAY,IAAKnD,SAAU,WAGtEhD,IAAAI,cAACgG,IAAK,CACJ9F,MAAO,CACL0F,MAAO,CAAEC,KAAM,SACf1M,KAAM,CAAE2M,OAAQ,OAAQD,KAAM,QAASE,WAAY,IAAKnD,SAAU,WAGtEhD,IAAAI,cAACiG,IAAU,CACP9M,KAAK,+BACL+M,eAAe,EACfC,SAAU,GACVC,SAAU,IACVlG,MAAO,CACLA,MAAO,CAAE2F,KAAM,QAASjD,SAAU,WAGxChD,IAAAI,cAACiG,IAAU,CACP9M,KAAK,sCACL+M,eAAe,EACfC,UAAW,IACXC,SAAU,GACVlG,MAAO,CACLmG,UAAW,cACXC,WAAY,MACZpG,MAAO,CAAE2F,KAAM,QAASjD,SAAU,WAGxChD,IAAAI,cAACuG,IAAiB,CAChBC,MAAM,oBACNC,WAAYpT,KAAK0R,YACjBC,KAAM3R,KAAKsK,MAAMqH,KACjB0B,WAAS,EACTxG,MAAO,CACL0B,UAAW,8BAA+BH,aAAc,iBAG3DpO,KAAK1E,MAAMmW,WACRlF,IAAAI,cAAC2G,IAAI,CAACxV,MAAOkC,KAAK1E,MAAMmW,WACtBlF,IAAAI,cAAA,OAAKE,MAAO,CAAEsB,WAAY,qBAAsBG,QAAS,MAAOF,aAAc,MAAO+E,MAAO,UAAW,IAAmB,iCACzFnT,KAAK1E,MAAMmW,UAAUpJ,EACpDkE,IAAAI,cAAA,WAAM,wCACgC3M,KAAK1E,MAAMmW,UAAU8B,MAMvEhH,IAAAI,cAAA,OAAKE,MAAO,CAAEc,MAAO,UACnBpB,IAAAI,cAAA,MAAIE,MAAO,CAACyB,QAAW,SAAS,iCAGhC/B,IAAAI,cAAA,WACEJ,IAAAI,cAAA,KAAGC,UAAU,gBAAe,qHAEzB2E,EA1EM,gUA0EgB,IACvBhF,IAAAI,cAAA,UAAQC,UAAU,eAAe4B,QAASxO,KAAKqR,gBAC5CE,EAAWhF,IAAAI,cAAA,QAAMC,UAAU,YAAW,YAAoBL,IAAAI,cAAA,QAAMC,UAAU,YAAW,sBAQnG4T,EAjHgB,CAASjU,IAAMkC,WAwInBC,eAdS,SAAH1S,GAAmB,IAClCwX,EAD2BxX,EAANmB,OACDf,IAAI,SAACqX,EAAKnQ,GAAC,MAAM,CAAE+E,EAAG/E,EAAGiQ,EAAGE,KAQpD,OANApK,QAAQC,IAAI,aAAekK,GACD,IAAtBA,EAAWhY,SACbgY,EAAWzQ,KAAK,CAAEsF,EAAG,IAAMkL,EAAG,IAC9BC,EAAWzQ,KAAK,CAAEsF,GAAI,IAAMkL,EAAG,KAG1B,CACL5B,KAAM6B,IAIK9E,CAAyB8R,8dC9HxC,IAAIC,GAAO,EAAGC,GAAO,EACjBjF,GAAW,GACXE,GAAgB,EAChBC,GAAiB,GAGfzM,GAAO,SAAAvF,GAAAC,YAAAsF,EAAAvF,GAAA,IAAAE,EAAAC,GAAAoF,GACT,SAAAA,EAAY7E,GAAO,IAAAN,EAAAC,YAAAjK,KAAAmP,IACfnF,EAAAF,EAAAnK,KAAAK,KAAMsK,IA2FVqW,oBAAsB,WAClB3W,EAAK2B,SAAS,SAAA2F,GAAS,MAAK,CACxBsP,eAAgBtP,EAAUsP,kBAEjC5W,EAED6W,oBAAsB,WAClB7W,EAAK2B,SAAS,SAAA2F,GAAS,MAAK,CACxBwP,eAAgBxP,EAAUwP,kBAEjC9W,EAqCD6V,WAAa,WAET7V,EAAK+W,OAAOC,aACZhX,EAAKM,MAAMwV,kBACd9V,EAoPD4F,OAAS,SAAC8O,GACN/C,KACA3R,EAAK+W,OAAOE,KAAK,eAAgB,CAC7BC,QAASxC,KAEhB1U,EAEDmX,sBAAwB,SAAC9Y,GAIrB,IAHA,IAAI9B,EAAU,CAAC,GAGNjD,EAAI,EAAGA,EAAI+E,EAAI,EAAG/E,IACvBiD,EAAQxD,KAAK+S,KAAKsL,UAGtB7a,EAAQxD,KAAK,GACbwD,EAAQ8a,KAAK,SAACC,EAAGC,GAAC,OAAKD,EAAIC,IAI3B,IAFA,IAAItgB,EAAS,GAEJqC,EAAI,EAAGA,EAAIiD,EAAQ/K,OAAQ8H,IAChCrC,EAAO8B,KAAKwD,EAAQjD,GAAKiD,EAAQjD,EAAI,IAGzC,OAAOrC,GACV+I,EACDwX,cAAgB,SAACC,GAKb,IAHA,IAAMC,EAAO1X,EAAKmX,sBAAsBM,EAAIjmB,QACxCmmB,EAAU,GACVC,EAAM,EACFte,EAAI,EAAGA,EAAIod,GAAO,IAAKpd,EAC/B,CAEI,IADA,IAAIue,EAAQ,EACJ5a,EAAI,EAAGA,EAAIwa,EAAIjmB,SAAUyL,EAC7B4a,GAASH,EAAKza,GAAKwa,EAAIxa,GAAG3D,GAC9Bse,GAAOC,EACPF,EAAQ5e,KAAK8e,GAEjBF,EAAQ5e,KAAK,EAAI6e,GACjB5X,EAAK2B,SAAS,CACVmW,cAAeH,KAEtB3X,EAED+X,qBAAuB,WAEnB/X,EAAKwX,cAAcxX,EAAK1O,MAAM0mB,QAC9BhY,EAAKiY,aAjbLjY,EAAKuD,IAAMhB,IAAMC,YAEjBiU,GAAOnjB,OAAO8C,OAAO4J,EAAKM,MAAM5P,MAAM+J,MAAM,EAAG,GAAGhI,OAAO,SAAC6G,GAAC,OAAW,IAANA,IAAS9H,OACzEklB,GAAOpjB,OAAO8C,OAAO4J,EAAKM,MAAM5P,MAAM+J,MAAM,GAAGhI,OAAO,SAAC6G,GAAC,OAAW,IAANA,IAAS9H,OACtEmgB,GAAgB,EAAGC,GAAiB,GAUpCH,IATAA,GAAW,CACP,CAAE5N,GAAI,EAAG9Q,KAAM,QACf,CAAE8Q,GAAI,EAAG9Q,KAAM,SACf,CAAE8Q,GAAI,EAAG9Q,KAAM,gBACf,CAAE8Q,GAAI,EAAG9Q,KAAM,eACf,CAAE8Q,GAAI,EAAG9Q,KAAM,QACf,CAAE8Q,GAAI,EAAG9Q,KAAM,cACf,CAAE8Q,GAAI,EAAG9Q,KAAM,aAECN,OAAO,SAACjC,EAAM4O,GAAK,OAAoC,IAA/BY,EAAKM,MAAM5P,KAAKF,EAAKuC,QAGjE,IADA,IAAIsiB,EAAU,GACN/b,EAAI,EAAGA,EAAI0G,EAAKM,MAAMhQ,WAAWkB,SAAU8H,EAE/C+b,EAAQtc,KAAKO,GACbsY,GAAe7Y,KAAKO,GAiEN,OA/DlB0G,EAAKM,MAAMvP,cAAcskB,GACzBrV,EAAKM,MAAM4X,UAAU,CAAC,WAEtBlY,EAAK1O,MAAQ,CACTyU,KAAM,GACNoS,QAAS,GACTC,MAAO,GACPC,MAAO,GACPC,YAAa,GACbN,OAAQ,GACRF,cAAe,GACflB,eAAe,EACfE,eAAe,GAInB9W,EAAK+W,OAASwB,KAAG7T,QAAQ,8BAGzB1E,EAAK+W,OAAOyB,GAAG,cAAe,SAAC7Q,GAC3B3H,EAAK2B,SAAS,CACVoE,KAAM,CAAC4B,EAAKyL,MAAOzL,EAAK2L,OACxB6E,QAASxQ,EAAK8Q,aACdL,MAAOzQ,EAAK+Q,gBACZL,MAAO1Q,EAAKgR,gBACZL,YAAa3Q,EAAKiR,iBAClBZ,OAAQrQ,EAAKkR,cAEjB7Y,EAAKM,MAAMpP,iBAAiB8O,EAAK1O,MAAM0mB,QACvChY,EAAKwX,cAAcxX,EAAK1O,MAAM0mB,QAC9BhY,EAAKiY,cAGTjY,EAAK+W,OAAOyB,GAAG,eAAgB,SAAC7Q,GAC5B3H,EAAK2B,SAAS,CACVoE,KAAM,CAAC4B,EAAKyL,MAAOzL,EAAK2L,OACxB6E,QAASxQ,EAAK8Q,aACdL,MAAOzQ,EAAK+Q,gBACZL,MAAO1Q,EAAKgR,gBACZL,YAAa3Q,EAAKiR,iBAClBZ,OAAQrQ,EAAKkR,cAEjB7Y,EAAKM,MAAMpP,iBAAiB8O,EAAK1O,MAAM0mB,QACvC3Y,QAAQC,IAAIU,EAAK1O,MAAM0mB,QACvB,IAAIc,EAAS9Y,EAAKM,MAAMnN,OACxB2lB,EAAO/f,KAAKiH,EAAK+Y,gBAAgB/Y,EAAK1O,MAAM0mB,QAAQgB,QAAQ,IAC5DhZ,EAAKM,MAAM4X,UAAUY,GACrBzZ,QAAQC,IAAIU,EAAKM,MAAMnN,QACvB6M,EAAKwX,cAAcxX,EAAK1O,MAAM0mB,QAC9B,IAAI3C,EAAU1N,EAAKsR,WACbrD,EAAehE,GAAenf,OAAO,SAAAuK,GAAK,OAAKqY,EAAQlU,SAASnE,KACtE4U,GAAiByD,EACjBrV,EAAKM,MAAM1P,YAAYglB,EAAcjE,IAClChK,EAAKyL,QAAUzL,EAAK2L,OAEnBtT,EAAK+W,OAAOC,aACZhX,EAAKM,MAAMqG,cAGX3G,EAAKiY,cAIbjY,EAAKkZ,aAAalZ,EAimBrB,OA/lBAmC,YAAAgD,EAAA,EAAAvR,IAAA,oBAAAE,MAeD,SAAkBqlB,EAAQC,GACtB,OAAOtN,KAAKE,KAAKF,KAAKuN,IAAID,EAAO,GAAKD,EAAO,GAAI,GAAKrN,KAAKuN,IAAID,EAAO,GAAKD,EAAO,GAAI,MACzF,CAAAvlB,IAAA,kBAAAE,MAED,SAAgBnC,GAGZ,IAFA,IAAI2nB,EAAc,EAEThgB,EAAI,EAAGA,EAAI3H,EAAOH,OAAQ8H,IAC/B,IAAK,IAAI2D,EAAI3D,EAAI,EAAG2D,EAAItL,EAAOH,OAAQyL,IAAK,CACxC,IAAMsc,EAAWvjB,KAAKwjB,kBAAkB7nB,EAAO2H,GAAI3H,EAAOsL,IAC1Dqc,EAAcxN,KAAK2N,IAAIH,EAAaC,GAG5C,OAAOD,IAGX,CAAA1lB,IAAA,aAAAE,MACA,WAAa,IAAAsO,EAAApM,KACL8I,EAAgB,GACpB9I,KAAKsK,MAAMzO,WAAW4I,MAAM,GAAGrI,IAAI,SAAAL,GAAoB,IAAAC,EAAAC,YAAAF,EAAA,GAAlBvB,EAAIwB,EAAA,GAAE0O,EAAM1O,EAAA,GAC1CoQ,EAAK9B,MAAM5P,KAAKF,IACfsO,EAAc/F,KAAK2H,EAAO5B,cAAgB,EAAI,KAEtDO,QAAQC,IAAIR,GACZ,IAAM4a,EjBhCY,SAAC/nB,EAAQmN,GACjC,IAAM1I,EA7BR,SAA6BujB,GAC3B,IAAIC,EAAY,GACZC,EAAY,GAEhB,GAAsB,IAAlBF,EAAOnoB,OAAc,MAAO,CAACqoB,EAAWD,GAE5C,IAAK,IAAIE,EAAM,EAAGA,EAAMH,EAAO,GAAGnoB,OAAQsoB,IAC1C,CAIE,IAHA,IAAIC,EAAWJ,EAAO,GAAGG,GACrBE,EAAWL,EAAO,GAAGG,GAEhBG,EAAM,EAAGA,EAAMN,EAAOnoB,OAAQyoB,IAE/BN,EAAOM,GAAKH,GAAOC,IACrBA,EAAWJ,EAAOM,GAAKH,IAErBH,EAAOM,GAAKH,GAAOE,IACrBA,EAAWL,EAAOM,GAAKH,IAI7BF,EAAU7gB,KAAKghB,GACfF,EAAU9gB,KAAKihB,GAGjB,MAAO,CAACH,EAAWD,GAIJM,CAAoBvoB,GACnC0N,QAAQC,IAAIlJ,GAEZ,IADA,IAAM9F,EAAa,GACVgJ,EAAI,EAAGA,EAAI3H,EAAOH,SAAU8H,EACrC,CAGE,IAFA,IAAM0D,EAAQ,GAELC,EAAI,EAAGA,EAAItL,EAAO,GAAGH,OAASsN,EAActN,SAAUyL,EAC3DD,EAAMjE,KAAKpH,EAAO2H,GAAG2D,IAEzB,IAAK,IAAIA,EAAItL,EAAO,GAAGH,OAASsN,EAActN,OAAQyL,EAAItL,EAAO,GAAGH,SAAUyL,EAEvE6B,EACD9B,EAAMjE,KAAK,GAAKpH,EAAO2H,GAAG2D,GAAK7G,EAAO,GAAG6G,KAAO7G,EAAO,GAAG6G,GAAK7G,EAAO,GAAG6G,KAEzED,EAAMjE,MAAMpH,EAAO2H,GAAG2D,GAAK7G,EAAO,GAAG6G,KAAO7G,EAAO,GAAG6G,GAAK7G,EAAO,GAAG6G,KAEzE3M,EAAWyI,KAAKiE,GAEpB,OAAO1M,EiBYsB6pB,CAAWnkB,KAAKsK,MAAMhQ,WAAYwO,GACzDO,QAAQC,IAAIoa,GACZ1jB,KAAK+gB,OAAOE,KAAK,aAAc,CAC3BpZ,MAAO6b,EACPU,KAAMpkB,KAAKsK,MAAMhQ,WAAWkB,OAC5B6oB,KAAM5D,GACN6D,KAAM5D,OAEb,CAAA9iB,IAAA,YAAAE,MASD,WAAY,IAAAymB,EAAAvkB,KACFwkB,EAAMC,KAAUzkB,KAAKuN,IAAIzC,SAE/B0Z,EAAIE,UAAU,KAAKnM,SACnBlP,QAAQC,IAAItJ,KAAK1E,MAAMgnB,aAEvB,IAAMja,EAAIrI,KAAK1E,MAAM6mB,QAAQ3mB,OAEvBmpB,EAAS,CAAEtc,EAAG,IAAKkL,EAAG,KAK5BlK,QAAQC,IAAItJ,KAAK1E,MAAM8mB,OACvB/Y,QAAQC,IAAItJ,KAAK1E,MAAM+mB,OAIvB,IADA,IAAIuC,EAAc,GAAIC,EAAc,GAC5BvhB,EAAI,EAAGA,EAAItD,KAAK1E,MAAM8mB,MAAM5mB,SAAU8H,EAC9C,CAEI,IADA,IAAIwhB,EAAQ,OACJ7d,EAAI,EAAGA,EAAIjH,KAAK1E,MAAM8mB,MAAM9e,GAAG9H,SAAUyL,EACjD,CAGI,IADA,IAAI8d,EAAK,EACDC,EAAI,EAAGA,EAAIhlB,KAAK1E,MAAMwmB,cAActmB,SAAUwpB,EAClDD,GAAM/kB,KAAK1E,MAAMwmB,cAAckD,GAAKhlB,KAAK1E,MAAM8mB,MAAM9e,GAAG2D,GAAG+d,GAC5DD,EAAKD,IACJA,EAAQC,EAAG/B,QAAQ,IAE3B4B,EAAY7hB,KAAK+hB,GAErB,IAAI,IAAIxhB,EAAI,EAAGA,EAAItD,KAAK1E,MAAM+mB,MAAM7mB,SAAU8H,EAC9C,CAEI,IADA,IAAIwhB,GAAS,OACL7d,EAAI,EAAGA,EAAIjH,KAAK1E,MAAM+mB,MAAM/e,GAAG9H,SAAUyL,EACjD,CAGI,IADA,IAAI8d,EAAK,EACDC,EAAI,EAAGA,EAAIhlB,KAAK1E,MAAMwmB,cAActmB,SAAUwpB,EAClDD,GAAM/kB,KAAK1E,MAAMwmB,cAAckD,GAAKhlB,KAAK1E,MAAM+mB,MAAM/e,GAAG2D,GAAG+d,GAC5DD,EAAKD,IACJA,EAAQC,EAAG/B,QAAQ,IAE3B6B,EAAY9hB,KAAK+hB,GAUrBN,EAAIS,OAAO,QACNzqB,KAAK,IAAK,KACVA,KAAK,IAAK,KACVA,KAAK,cAAe,OACpBqS,MAAM,YAAa,QACnB/G,KAAK,sDAKV0e,EAAIS,OAAO,QACNzqB,KAAK,IAAK,KACVA,KAAK,IAAKmqB,EAAOpR,EAAI2R,GAAoB,IACzC1qB,KAAK,QALa,KAMlBA,KAAK,SALc,KAMnBA,KAAK,OAAQ,WACbA,KAAK,SAAU,QACfA,KAAK,eAAgB,GAG1BgqB,EAAIS,OAAO,QACNzqB,KAAK,IAAK,KACVA,KAAK,IAAKmqB,EAAOpR,EAAI2R,IACrB1qB,KAAK,cAAe,UACpBqS,MAAM,YAAa,QACnB/G,KAAK,oBAEV,IAAMqf,EAAiB3b,MAAM4b,KAAK,CAAE5pB,OAAQ6M,IAAKjM,IAAI,SAACipB,EAAG/hB,GACrD,IAKIgiB,EAAQC,EALNC,EAAS,EAAI1P,KAAKC,GAAK1N,EAAK/E,EAC5B6S,EApCgB,SAACwO,EAAQa,EAAOC,GACtC,MAAO,CACHpd,EAAGsc,EAAOtc,EAAIod,EAAI3P,KAAK4P,IAAIF,GAC3BjS,EAAGoR,EAAOpR,EAAIkS,EAAI3P,KAAK6P,IAAIH,IAiCdI,CAAkBjB,EAAQa,EA5EhC,KA8ELK,EAAYtB,EAAKjpB,MAAM6mB,QAAQ7e,GAAGmB,MAAM,EAAG8f,EAAKjpB,MAAM6mB,QAAQ7e,GAAG9H,OAAO,GAAGuR,KAAK,MAChF+Y,EAAavB,EAAKjpB,MAAM6mB,QAAQ7e,GAAGmB,MAAM8f,EAAKjpB,MAAM6mB,QAAQ7e,GAAG9H,OAAO,GAAGuR,KAAK,MAMpF,OAJ8BuY,EAAR,SAAnBV,EAAYthB,GAAwB,UACzBshB,EAAYthB,GACKiiB,GAAR,SAApBV,EAAYvhB,GAAyB,UAC1BuhB,EAAYvhB,GACnB,CACH+E,EAAG8N,EAAS9N,EAAI0d,GAChBxS,EAAG4C,EAAS5C,EAAIyS,GAChBC,OAAQJ,EACRK,OAAQJ,EACRhO,GAAIwN,EACJa,GAAIZ,KAINa,EAAmB,SAACC,EAAOC,EAAO3Y,EAAOiE,GAC3C,MAAO,CACH2U,GAAIF,EAAMhe,EAAIsF,EAAQ,EACtB6Y,GAAIH,EAAM9S,EAAI3B,EAAS,EACvB6U,GAAIH,EAAMje,EAAIsF,EAAQ,EACtB+Y,GAAIJ,EAAM/S,EAAI3B,EAAS,IAI/B5R,KAAK1E,MAAMgnB,YAAYxmB,QAAQ,SAAC6qB,GAC5B,IAAMhrB,EAASyqB,EAAiBjB,EAAewB,EAAS,IAAKxB,EAAewB,EAAS,IAtGlE,GACC,IAsGpBnC,EAAIS,OAAO,QACNzqB,KAAK,KAAMmB,EAAO4qB,IAClB/rB,KAAK,KAAMmB,EAAO6qB,IAClBhsB,KAAK,KAAMmB,EAAO8qB,IAClBjsB,KAAK,KAAMmB,EAAO+qB,IAClBlsB,KAAK,SAAU,QACfA,KAAK,eAAgB,KAG9B,IAAMosB,EAAY,SAAC5B,EAAG6B,GAClB,GAAIA,EAAM,CACN,IAAMC,EAActC,EAAIS,OAAO,QAC1BzqB,KAAK,QAAS,aACdA,KAAK,IAAK,KACVA,KAAK,IAAK,KACVA,KAAK,cAAe,QACpBqS,MAAM,YAAa,QAGxBia,EAAY7B,OAAO,SACdnf,KAAK,UAAYkf,EAAEkB,OAAS,KAC5B1rB,KAAK,IAAK,KACVA,KAAK,KAAM,QAGhBssB,EAAY7B,OAAO,SACdnf,KAAK,UAAYkf,EAAEiB,OAAS,KAC5BzrB,KAAK,IAAK,KACVA,KAAK,KAAM,SAGhBssB,EAAY7B,OAAO,SACdnf,KAAK,aAAekf,EAAEkB,OAAS,KAC/B1rB,KAAK,IAAK,KACVA,KAAK,KAAM,SAGhBssB,EAAY7B,OAAO,SACdnf,KAAK,aAAekf,EAAEiB,OAAS,KAC/BzrB,KAAK,IAAK,KACVA,KAAK,KAAM,SAGhBssB,EAAY7B,OAAO,SACdnf,KAAK,2BAA6Bkf,EAAElN,IACpCtd,KAAK,IAAK,KACVA,KAAK,KAAM,SAGhBssB,EAAY7B,OAAO,SACdnf,KAAK,2BAA6Bkf,EAAEmB,IACpC3rB,KAAK,IAAK,KACVA,KAAK,KAAM,cAGhBgqB,EAAIE,UAAU,4BAA4BnM,UAI5CwO,EAAgB/mB,KAAK1E,MAAMgnB,YAE7B0E,EAAa,GACjB7B,EAAerpB,QAAQ,SAACigB,EAAM1f,GAC1B,IAAM4qB,EAAYzC,EAAIS,OAAO,QACxBzqB,KAAK,IAAKuhB,EAAK1T,GACf7N,KAAK,IAAKuhB,EAAKxI,GACf/Y,KAAK,QAzKS,IA0KdA,KAAK,SAzKU,IA0KfA,KAAK,UAAW6B,GAChB7B,KAAK,OAAQ,WACbA,KAAK,SAAU,QACfA,KAAK,eAAgB,GACrBgoB,GAAG,YAAa,WACbiC,KAAUzkB,MAAMxF,KAAK,OAAQ,WAC7BosB,EAAU7K,GAAM,GAGOgL,EAClBtqB,OAAO,SAAAyqB,GAAG,OAAIA,EAAI/b,SAAS9O,KAC3B8qB,OACA1qB,OAAO,SAAA6G,GAAC,OAAIA,IAAMjH,IAERP,QAAQ,SAAAmL,GACnB+f,EAAW/f,GAAGzM,KAAK,OAAQ,aAI/BusB,EAAcjrB,QAAQ,SAAC6qB,GACnB,GAAIA,EAASxb,SAAS9O,GAAM,CACxB,IAAMV,EAASyqB,EAAiBjB,EAAewB,EAAS,IAAKxB,EAAewB,EAAS,IAhMlF,GACC,IAgMJnC,EAAI4C,OAAM,YAAA9qB,OAAaX,EAAO4qB,GAAE,WAAAjqB,OAAUX,EAAO6qB,GAAE,WAAAlqB,OAAUX,EAAO8qB,GAAE,WAAAnqB,OAAUX,EAAO+qB,GAAE,OACpFlsB,KAAK,SAAU,WACfA,KAAK,eAAgB,UAIrCgoB,GAAG,WAAY,WACZiC,KAAUzkB,MAAMxF,KAAK,OAAQ,WAC7BosB,EAAU7K,GAAM,GAGOgL,EAClBtqB,OAAO,SAAAyqB,GAAG,OAAIA,EAAI/b,SAAS9O,KAC3B8qB,OACA1qB,OAAO,SAAA6G,GAAC,OAAIA,IAAMjH,IAERP,QAAQ,SAAAmL,GACnB+f,EAAW/f,GAAGzM,KAAK,OAAQ,aAI/BusB,EAAcjrB,QAAQ,SAAC6qB,GACnB,GAAIA,EAASxb,SAAS9O,GAAM,CACxB,IAAMV,EAASyqB,EAAiBjB,EAAewB,EAAS,IAAKxB,EAAewB,EAAS,IAxNlF,GACC,IAwNJnC,EAAI4C,OAAM,YAAA9qB,OAAaX,EAAO4qB,GAAE,WAAAjqB,OAAUX,EAAO6qB,GAAE,WAAAlqB,OAAUX,EAAO8qB,GAAE,WAAAnqB,OAAUX,EAAO+qB,GAAE,OACpFlsB,KAAK,SAAU,QACfA,KAAK,eAAgB,QAK1CwsB,EAAWjkB,KAAKkkB,KAGPzC,EAAIzI,OAAOsL,UACxB7C,EAAIhqB,KAAK,UAAW,kBAEvB,CAAAoD,IAAA,oBAAAE,MAqDD,WACI,IAAMiiB,EAAYC,SAASC,cAAc,yBACzCF,EAAUG,YAAcH,EAAUI,YAAcJ,EAAUrI,aAAe,IAC5E,CAAA9Z,IAAA,SAAAE,MAED,WAAS,IAGWgS,EAHXwX,EAAAtnB,KAGD+Q,EAAM,KACVA,EAAM,CAACxE,IAAAI,cAAA,MAAI/O,IAAI,cAAa,WAC5B6d,GAAS3f,QAAQ,SAAAtB,GACbuW,EAAIhO,KAAKwJ,IAAAI,cAAA,MAAI/O,IAAKpD,EAAKqT,IAAKrT,EAAKuC,SAErCgU,EAAIhO,KAAKwJ,IAAAI,cAAA,MAAI/O,IAAI,kBAEjBkS,EAAM9P,KAAK1E,MAAMyU,KAAK3T,IAAI,SAACC,EAAKiH,GACxB,IAAM0M,EAAM,CAACzD,IAAAI,cAAA,MAAI/O,IAAI,cAAc0F,EAAI,IAgBvC,OAfAgkB,EAAKhd,MAAMhQ,WAAW+B,GAAKP,QAAQ,SAACuM,EAAGpB,GACnC+I,EAAIjN,KAAKwJ,IAAAI,cAAA,MAAI/O,IAAKqJ,GAAIoB,MAG1B2H,EAAIjN,KACAwJ,IAAAI,cAAA,MAAI/O,IAAI,gBACJ2O,IAAAI,cAAA,UAAQvS,KAAK,SACLwS,UAAU,aACVC,MAAO,CAAEc,MAAO,OAAQiE,OAAQ,UAChCpD,QAAS,kBAAM8Y,EAAK1X,OAAOtM,KAAI,YAO3CiJ,IAAAI,cAAA,MAAI/O,IAAK0F,EAAG0N,cAAY,WACnBhB,KAMjB,IAAIuX,EAAc,GAClB,GAAGvnB,KAAK1E,MAAMwmB,cAActmB,OAAS,EAAG,CACpC,IAAMgsB,EAAQxnB,KAAK1E,MAAMwmB,cACzBzY,QAAQC,IAAIke,GACZ/L,GAAShX,MAAMgc,IAAMrkB,IAAI,SAAC5B,EAAM8I,GAC5B,IAAMmkB,EAAMD,EAAMlkB,GAAG0f,QAAQ,GAC7BuE,EAAYxkB,KACRwJ,IAAAI,cAAA,UACIJ,IAAAI,cAAA,MAAI/O,IAAKpD,EAAKqT,IAAKrT,EAAKuC,MACxBwP,IAAAI,cAAA,MAAI/O,IAAKpD,EAAKqT,IAAK4Z,OAIlC,IAAAtM,EAEwCnb,KAAK1E,MAAtCslB,EAAazF,EAAbyF,cAAeE,EAAa3F,EAAb2F,cAkBvB,OACIvU,IAAAI,cAAA,OAAKC,UAAU,qBAAqBC,MAAO,IACvCN,IAAAI,cAAA,OAAKqB,IAAI,GAAGC,IAAKyZ,KAAY7a,MAAO,CAAEc,MAAS,UAC/CpB,IAAAI,cAAA,KAAGE,MAAO,CAAEsB,WAAc,YAAaC,aAAgB,MAAOE,QAAW,OACrEiB,SAAY,OAAQlB,UAAa,SACjC9B,IAAAI,cAAA,QAAME,MAAO,CAAE0C,SAAY,SAAShD,IAAAI,cAAA,cAAQ,iBAA4B,qKAExEJ,IAAAI,cAAA,WAAM,2BAAoCJ,IAAAI,cAAA,UAAI,WAAY,8CAC1DJ,IAAAI,cAAA,WAAM,2BAAoCJ,IAAAI,cAAA,UAAI,WAAY,sDAC1DJ,IAAAI,cAAA,WAAM,2BAAoCJ,IAAAI,cAAA,UAAI,WAAY,qEAE9DJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,MAAIE,MAAO,CACPsB,WAAc,8CACdC,aAAgB,MAChBC,UAAa,OACbC,QAAW,MACXC,UAAa,mCAEbhC,IAAAI,cAAA,cAAQJ,IAAAI,cAAA,UAAI,gBAA2B,gBAE3CJ,IAAAI,cAAA,KAAGE,MAAO,CAAEsB,WAAc,YAAaC,aAAgB,MAAOE,QAAW,MACrEiB,SAAY,OAAQlB,UAAa,SACjC9B,IAAAI,cAAA,cAAQ,cAAqB,+DAEjCJ,IAAAI,cAAA,OAAKC,UAAU,iDACXL,IAAAI,cAAA,OAAKC,UAAU,YACXL,IAAAI,cAAA,SAAOC,UAAU,iCACbL,IAAAI,cAAA,aACAJ,IAAAI,cAAA,UAAKoE,IAELxE,IAAAI,cAAA,aAAQmD,MAKpBvD,IAAAI,cAAA,MAAIE,MAAO,CACPsB,WAAc,8CACdC,aAAgB,MAChBC,UAAa,OACbC,QAAW,MACXC,UAAa,mCAEbhC,IAAAI,cAAA,cAAQJ,IAAAI,cAAA,UAAI,gBAA2B,YAE3CJ,IAAAI,cAAA,KAAGE,MAAO,CAAEsB,WAAc,YAAaC,aAAgB,MAAOE,QAAW,OACrEiB,SAAY,OAAQlB,UAAa,SACjC9B,IAAAI,cAAA,cAAQ,UAAe,qQAM3BJ,IAAAI,cAAA,OAAKC,UAAU,0BACXL,IAAAI,cAAA,OAAKE,MAAO,CAACc,MAAO,OAAQiE,OAAQ,QAAS+V,SAAU,OAAQxZ,WAAY,YACvE5B,IAAAI,cAAA,OAAKY,IAAKvN,KAAKuN,OAEnBhB,IAAAI,cAAA,WACAJ,IAAAI,cAAA,MAAIE,MAAO,CAACyB,QAAW,SAAS,oBAChC/B,IAAAI,cAAA,KAAGC,UAAU,qBAAoB,wFAERgU,EA7Ef,ssBA6E+C,IACrDrU,IAAAI,cAAA,UAAQC,UAAU,eAAe4B,QAASxO,KAAK2gB,qBAC1CC,EAAgBrU,IAAAI,cAAA,QAAMC,UAAU,YAAW,YAAoBL,IAAAI,cAAA,QAAMC,UAAU,YAAW,iBAOvGL,IAAAI,cAAA,OAAKC,UAAU,yBAAwB,mBAEnCL,IAAAI,cAAA,OAAKC,UAAU,6BAA6BC,MAAO,CAACc,MAAO,UACvDpB,IAAAI,cAAC2N,GAAe,MAChB/N,IAAAI,cAAA,WACAJ,IAAAI,cAAA,MAAIE,MAAO,CAACyB,QAAW,SAAS,2BAChC/B,IAAAI,cAAA,KAAGC,UAAU,gBAAe,+FAEfkU,EAhFP,4FAgFsC,IACxCvU,IAAAI,cAAA,UAAQC,UAAU,eAAe4B,QAASxO,KAAK6gB,qBAC1CC,EAAgBvU,IAAAI,cAAA,QAAMC,UAAU,YAAW,YAAoBL,IAAAI,cAAA,QAAMC,UAAU,YAAW,iBAIjG,4FAGNL,IAAAI,cAAA,OAAKC,UAAU,8BACXL,IAAAI,cAAA,OAAKE,MAAO,CAAEc,MAAO,UACjBpB,IAAAI,cAAA,WACIJ,IAAAI,cAAA,UAAIJ,IAAAI,cAAA,cAAQ,8BAEhBJ,IAAAI,cAAA,WACIJ,IAAAI,cAAA,MAAIE,MAAO,CACP+a,WAAY,sBACZzU,MAAO,UACPyF,gBAAiB,UACjBtK,QAAS,OACTuZ,OAAQ,oBACRzZ,aAAc,MACduK,QAAS,eACTpK,UAAW,mCACZ,IAAEvO,KAAK1E,MAAMwmB,cAAc1lB,IAAI,SAAAqX,GAAG,OAAIA,EAAIuP,QAAQ,KAAIjW,KAAK,MAAM,MAGxER,IAAAI,cAAA,SAAOC,UAAU,iCACbL,IAAAI,cAAA,aAAQ4a,IAGZhb,IAAAI,cAAA,WACAJ,IAAAI,cAAA,UAAQvS,KAAK,SACbwS,UAAU,aACVC,MAAO,CAAE+E,OAAQ,OAAQjE,MAAO,SAChCa,QAASxO,KAAK+hB,sBAAsB,sBAIpCxV,IAAAI,cAAA,KAAGC,UAAU,eAAeC,MAAO,CAAEyB,QAAW,OAC5CiB,SAAY,OAAQlB,UAAa,OAAQV,MAAO,UAAU,6LAY1EpB,IAAAI,cAAA,WACAJ,IAAAI,cAAA,MAAIE,MAAO,CACPsB,WAAc,8CACdC,aAAgB,MAChBC,UAAa,OACbC,QAAW,MACXC,UAAa,mCAEbhC,IAAAI,cAAA,cAAQJ,IAAAI,cAAA,UAAI,gBAA2B,eAE3CJ,IAAAI,cAAA,KAAGE,MAAO,CAAEsB,WAAc,YAAaC,aAAgB,MAAOE,QAAW,OACrEiB,SAAY,OAAQlB,UAAa,SACjC9B,IAAAI,cAAA,cAAQ,UAAe,+KAG3BJ,IAAAI,cAAA,WACAJ,IAAAI,cAAA,WACIJ,IAAAI,cAAA,OAAKC,UAAU,8BACXL,IAAAI,cAAA,OAAKC,UAAU,eACXL,IAAAI,cAAC6T,GAAa,OAElBjU,IAAAI,cAAA,OAAKC,UAAU,eACXL,IAAAI,cAACyE,GAAS,SAItB7E,IAAAI,cAAA,WACAJ,IAAAI,cAAA,KAAGE,MAAO,CAAEsB,WAAc,YAAaC,aAAgB,MAAOE,QAAW,OACrEiB,SAAY,OAAQlB,UAAa,SAAS,QAG9C9B,IAAAI,cAAA,WACAJ,IAAAI,cAAA,OAAKC,UAAU,wBACfL,IAAAI,cAAA,WACIJ,IAAAI,cAAA,OAAKC,UAAU,8BACXL,IAAAI,cAAA,WACIJ,IAAAI,cAACiO,GAAK,UAMlBrO,IAAAI,cAAA,WACAJ,IAAAI,cAAA,WACIJ,IAAAI,cAAA,UAAQvS,KAAK,SACLwS,UAAU,aACVC,MAAO,CAAEc,MAAO,SAChBa,QAASxO,KAAK6f,YAAY,mBAItCtT,IAAAI,cAAA,gBAIXwC,EAzrBQ,CAAS5C,IAAMkC,WA2tBbC,eA/BS,SAAHtD,GAAA,IAAM9Q,EAAU8Q,EAAV9Q,WAAkD,MAAQ,CACjFuB,WAD6CuP,EAAVvP,WAEnCnB,KAFmD0Q,EAAJ1Q,KAG/CiB,OAH2DyP,EAANzP,OAIrDV,KAJiEmQ,EAAJnQ,KAK7DX,aACA6C,OANyEiO,EAANjO,SAS5C,SAAAyR,GAAQ,MAAK,CACpC+B,WAAY,WACR/B,EAAS1U,EAAmB,iBAEhCa,cAAe,SAAAF,GACX+T,EAAS7T,EAAcF,KAE3BqnB,UAAW,SAAA/kB,GACPyR,EnB1tBiB,SAAAzR,GAAM,MAAK,CAClC/C,KAHwB,aAIxB+C,UmBwtBe+kB,CAAU/kB,KAEvB2iB,eAAgB,WACZlR,EAAS1U,EAAmB,YAC5B0U,EnBrpBsB,CAC5BxU,KApFqB,amB0uBnBQ,YAAa,SAACC,EAASC,GACnB8T,EAAShU,EAAYC,EAASC,KAElCI,iBAAkB,SAAAC,GACdyT,EAAS1T,EAAiBC,OAInBuT,CAGbS,0cChvBF,IACM2Y,GAAG,SAAAle,GAAAC,YAAAie,EAAAle,GAAA,IAAAE,EAAAC,GAAA+d,GACL,SAAAA,EAAYxd,GAAO,OAAAL,YAAAjK,KAAA8nB,GAAAhe,EAAAnK,KAAAK,KACTsK,GAST,OARA6B,YAAA2b,EAAA,EAAAlqB,IAAA,SAAAE,MAED,WACI,OACIyO,IAAAI,cAAA,OAAKC,UAAU,qBAAqBC,MAAO,CAAEkB,SAAU,UACnDxB,IAAAI,cAAA,UAAI,uCAGfmb,EAXI,CAASvb,IAAMkC,WAwBTC,eAVS,SAAH3S,GAAoC,MAAQ,CAC7DF,WADiCE,EAAVF,WAEvBnB,KAFuCqB,EAAJrB,KAGnCiB,OAH+CI,EAANJ,OAIzCV,KAJqDc,EAAJd,OAO1B,SAAA2T,GAAQ,MAAK,IAGzBF,CAGboZ,IC0BF,IAeepZ,eAfS,SAAHrD,GAA4D,MAAO,CACtF/Q,WADkC+Q,EAAV/Q,WAExBkC,WAF8C6O,EAAV7O,WAGpCX,WAH0DwP,EAAVxP,WAIhDnB,KAJgE2Q,EAAJ3Q,KAK5DiC,cAL+E0O,EAAb1O,gBAQzC,SAAAiS,GAAQ,MAAK,CACtC2M,QAAS,WACP3M,EAAS1U,EAAmB,YAC5B0U,ErBa0B,CAC5BxU,KApFqB,eqB0ERsU,CAzEf,SAAoB3S,GACpB,IADsBzB,EAAUyB,EAAVzB,WAAYkC,EAAUT,EAAVS,WAAYX,EAAUE,EAAVF,WAAYnB,EAAIqB,EAAJrB,KAAMiC,EAAaZ,EAAbY,cAAe4e,EAAOxf,EAAPwf,QAEzExK,EAAM,GACVlV,EAAWC,QAAQ,SAAAE,GAAoB,IAAAoP,EAAAnP,YAAAD,EAAA,GAAlBxB,EAAI4Q,EAAA,GACvB,GAD+BA,EAAA,GAC3B1Q,EAAKF,GAAO,CACd,IAAMghB,EAAKjP,IAAAI,cAAA,MAAI/O,IAAKpD,GAAOA,GAC3BuW,EAAIhO,KAAKyY,MAGb,IAAM1L,EAAMtT,EAAWJ,IAAI,SAACC,EAAKiH,GAAC,OAC9BiJ,IAAAI,cAAA,MAAI/O,IAAK0F,EAAG0N,cAAY,WACrB1W,EAAW+B,GAAKD,IAAI,SAACiM,EAAGpB,GAAO,OAAOsF,IAAAI,cAAA,MAAI/O,IAAKqJ,GAAIoB,QAG1D,OACIkE,IAAAI,cAAA,OAAKC,UAAU,0BACbL,IAAAI,cAAA,UAAI,wCAAsChQ,EAAcnB,OAAS,EAAE,KACnE+Q,IAAAI,cAAA,UACyB,IAAtBnQ,EAAWhB,OACN,2BAA0B,GAAAc,OACvBE,EAAWhB,OAAM,kCAE5B+Q,IAAAI,cAAA,SACIC,UAAWwO,KAAW,QAAS,cAAe,CAC5CC,cAAevL,EAAItU,OAAS,IAE9BqR,MAAO,CACLkB,SAAU,QACVgE,OAAQ,SAGZxF,IAAAI,cAAA,aACAJ,IAAAI,cAAA,UAAKoE,IAELxE,IAAAI,cAAA,aAAQmD,IAERvD,IAAAI,cAAA,WACIJ,IAAAI,cAAA,OAAKC,UAAU,8BACXL,IAAAI,cAAA,OAAKC,UAAU,eACXL,IAAAI,cAAC6T,GAAa,OAElBjU,IAAAI,cAAA,OAAKC,UAAU,eACXL,IAAAI,cAACyE,GAAS,SAIxB7E,IAAAI,cAAA,WACIJ,IAAAI,cAAA,UAAQvS,KAAK,SACLwS,UAAU,aACVC,MAAO,CAAEc,MAAO,SAChBa,QAAS+M,GAAS,sBCnBtC,IAIe7M,eAJS,SAAH1S,GAAqB,MAAQ,CAChDX,gBADwCW,EAAfX,kBAIZqT,CA7Bf,SAAY3S,GACV,OAD4BA,EAAfV,iBAEX,IAAK,UACH,OAAOkR,IAAAI,cAAChD,EAAO,MACjB,IAAK,eACH,OAAO4C,IAAAI,cAACob,EAAW,MACrB,IAAK,SACH,OAAOxb,IAAAI,cAACsC,GAAM,MAChB,IAAK,UACH,OAAO1C,IAAAI,cAACwC,GAAO,MACjB,IAAK,eACH,OAAO5C,IAAAI,cAACyC,EAAY,MACtB,IAAK,cACH,OAAO7C,IAAAI,cAACqb,GAAa,MACvB,IAAK,WACH,OAAOzb,IAAAI,cAAC6C,GAAQ,MAClB,IAAK,SACH,OAAOjD,IAAAI,cAACsb,GAAM,MAChB,IAAK,MACH,OAAO1b,IAAAI,cAACmb,GAAG,MACb,QACE,OAAOvb,IAAAI,cAAA,6BClCbvP,GAAA,kBAAArD,GAAA,IAAAA,EAAA,GAAAsD,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAtF,KAAA,SAAAsF,IAAAD,EAAAE,KAAAhC,EAAA+B,IAAA,MAAAf,GAAA,OAAAvE,KAAA,QAAAsF,IAAAf,IAAA5E,EAAA6E,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,EAAA,kBAAA+B,OAAA,IAAAC,EAAA3C,OAAA4C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA9C,GAAAG,EAAAmC,KAAAQ,EAAAlC,KAAA8B,EAAAI,GAAA,IAAAE,EAAAP,EAAAvC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAW,GAAA,SAAAO,EAAA/C,GAAA,0BAAAzB,QAAA,SAAAyE,GAAAhC,EAAAhB,EAAAgD,EAAA,SAAAb,GAAA,OAAAM,KAAAQ,QAAAD,EAAAb,OAAA,SAAAe,EAAAtB,EAAAuB,GAAA,IAAAC,EAAAjD,EAAAsC,KAAA,WAAAlC,MAAA,SAAAyC,EAAAb,GAAA,SAAAkB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAb,EAAAmB,EAAAC,GAAA,IAAAE,EAAAxB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAA,aAAAsB,EAAA5G,KAAA,KAAA6G,EAAAD,EAAAtB,IAAA5B,EAAAmD,EAAAnD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAmC,KAAA7B,EAAA,WAAA4C,EAAAG,QAAA/C,EAAAoD,SAAAC,KAAA,SAAArD,GAAAiD,EAAA,OAAAjD,EAAA+C,EAAAC,IAAA,SAAAnC,GAAAoC,EAAA,QAAApC,EAAAkC,EAAAC,KAAAJ,EAAAG,QAAA/C,GAAAqD,KAAA,SAAAC,GAAAH,EAAAnD,MAAAsD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAtB,KAAAqB,CAAAR,EAAAb,EAAAmB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAArB,EAAAV,EAAAE,EAAAM,GAAA,IAAA/D,EAAA,iCAAAiF,EAAAb,GAAA,iBAAApE,EAAA,UAAAgG,MAAA,iDAAAhG,EAAA,cAAAiF,EAAA,MAAAb,EAAA,OAAA6B,IAAA,IAAAlC,EAAAkB,SAAAlB,EAAAK,QAAA,KAAA8B,EAAAnC,EAAAmC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAnC,GAAA,GAAAoC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,GAAA,YAAApC,EAAAkB,OAAAlB,EAAAsC,KAAAtC,EAAAuC,MAAAvC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAAjF,EAAA,MAAAA,EAAA,YAAA+D,EAAAK,IAAAL,EAAAwC,kBAAAxC,EAAAK,SAAA,WAAAL,EAAAkB,QAAAlB,EAAAyC,OAAA,SAAAzC,EAAAK,KAAApE,EAAA,gBAAA0F,EAAAxB,EAAAX,EAAAE,EAAAM,GAAA,cAAA2B,EAAA5G,KAAA,IAAAkB,EAAA+D,EAAA0C,KAAA,6BAAAf,EAAAtB,MAAAE,EAAA,gBAAA9B,MAAAkD,EAAAtB,IAAAqC,KAAA1C,EAAA0C,MAAA,UAAAf,EAAA5G,OAAAkB,EAAA,YAAA+D,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAsB,EAAAtB,OAAA,SAAAgC,EAAAF,EAAAnC,GAAA,IAAA2C,EAAA3C,EAAAkB,SAAAiB,EAAAtD,SAAA8D,GAAA,QAAAvG,IAAA8E,EAAA,OAAAlB,EAAAmC,SAAA,eAAAQ,GAAAR,EAAAtD,SAAA+D,SAAA5C,EAAAkB,OAAA,SAAAlB,EAAAK,SAAAjE,EAAAiG,EAAAF,EAAAnC,GAAA,UAAAA,EAAAkB,SAAA,WAAAyB,IAAA3C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAAF,EAAA,aAAApC,EAAA,IAAAoB,EAAAxB,EAAAe,EAAAiB,EAAAtD,SAAAmB,EAAAK,KAAA,aAAAsB,EAAA5G,KAAA,OAAAiF,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAsB,EAAAtB,IAAAL,EAAAmC,SAAA,KAAA5B,EAAA,IAAAuC,EAAAnB,EAAAtB,IAAA,OAAAyC,IAAAJ,MAAA1C,EAAAmC,EAAAY,YAAAD,EAAArE,MAAAuB,EAAAgD,KAAAb,EAAAc,QAAA,WAAAjD,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAjE,GAAA4D,EAAAmC,SAAA,KAAA5B,GAAAuC,GAAA9C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAmC,SAAA,KAAA5B,GAAA,SAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAxC,KAAA8C,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAzB,EAAAyB,EAAAQ,YAAA,GAAAjC,EAAA5G,KAAA,gBAAA4G,EAAAtB,IAAA+C,EAAAQ,WAAAjC,EAAA,SAAA1B,EAAAN,GAAAgB,KAAA8C,WAAA,EAAAJ,OAAA,SAAA1D,EAAAlD,QAAAyG,EAAAvC,WAAAkD,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAlF,GAAA,GAAAmF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAA3H,QAAA,KAAA8H,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAA3H,QAAA,GAAAgC,EAAAmC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAAvE,MAAAqF,EAAAG,GAAAjB,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAvE,WAAArC,EAAA4G,EAAAN,MAAA,EAAAM,GAAA,OAAAA,UAAA,OAAAA,KAAAd,GAAA,SAAAA,IAAA,OAAAzD,WAAArC,EAAAsG,MAAA,UAAAlC,EAAAtC,UAAAuC,EAAApC,EAAA2C,EAAA,eAAAvC,MAAAgC,EAAArB,cAAA,IAAAf,EAAAoC,EAAA,eAAAhC,MAAA+B,EAAApB,cAAA,IAAAoB,EAAA0D,YAAAhF,EAAAuB,EAAAzB,EAAA,qBAAAtE,EAAAyJ,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAA3G,QAAAhD,EAAA6J,KAAA,SAAAH,GAAA,OAAAnG,OAAAuG,eAAAvG,OAAAuG,eAAAJ,EAAA3D,IAAA2D,EAAAK,UAAAhE,EAAAvB,EAAAkF,EAAApF,EAAA,sBAAAoF,EAAAlG,UAAAD,OAAA8B,OAAAiB,GAAAoD,GAAA1J,EAAAgK,MAAA,SAAArE,GAAA,OAAAwB,QAAAxB,IAAAY,EAAAG,EAAAlD,WAAAgB,EAAAkC,EAAAlD,UAAAY,EAAA,kBAAA6B,OAAAjG,EAAA0G,gBAAA1G,EAAAiK,MAAA,SAAAnF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,MAAAuD,SAAA,IAAAC,EAAA,IAAAzD,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAA3G,EAAAyJ,oBAAA1E,GAAAoF,IAAA7B,OAAAlB,KAAA,SAAAF,GAAA,OAAAA,EAAAc,KAAAd,EAAAnD,MAAAoG,EAAA7B,UAAA/B,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,EAAA,kBAAA+B,OAAAzB,EAAA8B,EAAA,mDAAAtG,EAAAoK,KAAA,SAAA1J,GAAA,IAAA2J,EAAA9G,OAAA7C,GAAA0J,EAAA,WAAAvG,KAAAwG,EAAAD,EAAApB,KAAAnF,GAAA,OAAAuG,EAAAE,UAAA,SAAAhC,IAAA,KAAA8B,EAAA3I,QAAA,KAAAoC,EAAAuG,EAAAG,MAAA,GAAA1G,KAAAwG,EAAA,OAAA/B,EAAAvE,MAAAF,EAAAyE,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAN,MAAA,EAAAM,IAAAtI,EAAAqG,SAAAd,EAAA/B,UAAA,CAAAoG,YAAArE,EAAA4D,MAAA,SAAAqB,GAAA,GAAAvE,KAAApD,KAAA,EAAAoD,KAAAqC,KAAA,EAAArC,KAAA2B,KAAA3B,KAAA4B,WAAAnG,EAAAuE,KAAA+B,MAAA,EAAA/B,KAAAwB,SAAA,KAAAxB,KAAAO,OAAA,OAAAP,KAAAN,SAAAjE,EAAAuE,KAAA8C,WAAAhH,QAAAkH,IAAAuB,EAAA,QAAAxH,KAAAiD,KAAA,MAAAjD,EAAAyH,OAAA,IAAAhH,EAAAmC,KAAAK,KAAAjD,KAAAsG,OAAAtG,EAAA0H,MAAA,MAAAzE,KAAAjD,QAAAtB,IAAAiJ,KAAA,WAAA1E,KAAA+B,MAAA,MAAA4C,EAAA3E,KAAA8C,WAAA,GAAAG,WAAA,aAAA0B,EAAAvK,KAAA,MAAAuK,EAAAjF,IAAA,OAAAM,KAAA4E,MAAA/C,kBAAA,SAAAgD,GAAA,GAAA7E,KAAA+B,KAAA,MAAA8C,EAAA,IAAAxF,EAAAW,KAAA,SAAA8E,EAAAC,EAAAC,GAAA,OAAAhE,EAAA5G,KAAA,QAAA4G,EAAAtB,IAAAmF,EAAAxF,EAAAgD,KAAA0C,EAAAC,IAAA3F,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAjE,KAAAuJ,EAAA,QAAA1B,EAAAtD,KAAA8C,WAAAtH,OAAA,EAAA8H,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAAtC,EAAAyB,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAoC,EAAA,UAAArC,EAAAC,QAAA1C,KAAApD,KAAA,KAAAqI,EAAAzH,EAAAmC,KAAA8C,EAAA,YAAAyC,EAAA1H,EAAAmC,KAAA8C,EAAA,iBAAAwC,GAAAC,EAAA,IAAAlF,KAAApD,KAAA6F,EAAAE,SAAA,OAAAmC,EAAArC,EAAAE,UAAA,MAAA3C,KAAApD,KAAA6F,EAAAG,WAAA,OAAAkC,EAAArC,EAAAG,iBAAA,GAAAqC,GAAA,GAAAjF,KAAApD,KAAA6F,EAAAE,SAAA,OAAAmC,EAAArC,EAAAE,UAAA,YAAAuC,EAAA,UAAA5D,MAAA,6CAAAtB,KAAApD,KAAA6F,EAAAG,WAAA,OAAAkC,EAAArC,EAAAG,gBAAAd,OAAA,SAAA1H,EAAAsF,GAAA,QAAA4D,EAAAtD,KAAA8C,WAAAtH,OAAA,EAAA8H,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,QAAA1C,KAAApD,MAAAY,EAAAmC,KAAA8C,EAAA,eAAAzC,KAAApD,KAAA6F,EAAAG,WAAA,KAAAuC,EAAA1C,EAAA,OAAA0C,IAAA,UAAA/K,GAAA,aAAAA,IAAA+K,EAAAzC,QAAAhD,MAAAyF,EAAAvC,aAAAuC,EAAA,UAAAnE,EAAAmE,IAAAlC,WAAA,UAAAjC,EAAA5G,OAAA4G,EAAAtB,MAAAyF,GAAAnF,KAAAO,OAAA,OAAAP,KAAAqC,KAAA8C,EAAAvC,WAAAhD,GAAAI,KAAAoF,SAAApE,IAAAoE,SAAA,SAAApE,EAAA6B,GAAA,aAAA7B,EAAA5G,KAAA,MAAA4G,EAAAtB,IAAA,gBAAAsB,EAAA5G,MAAA,aAAA4G,EAAA5G,KAAA4F,KAAAqC,KAAArB,EAAAtB,IAAA,WAAAsB,EAAA5G,MAAA4F,KAAA4E,KAAA5E,KAAAN,IAAAsB,EAAAtB,IAAAM,KAAAO,OAAA,SAAAP,KAAAqC,KAAA,kBAAArB,EAAA5G,MAAAyI,IAAA7C,KAAAqC,KAAAQ,GAAAjD,GAAAyF,OAAA,SAAAzC,GAAA,QAAAU,EAAAtD,KAAA8C,WAAAtH,OAAA,EAAA8H,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA5C,KAAAoF,SAAA3C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,IAAA0F,MAAA,SAAA5C,GAAA,QAAAY,EAAAtD,KAAA8C,WAAAtH,OAAA,EAAA8H,GAAA,IAAAA,EAAA,KAAAb,EAAAzC,KAAA8C,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAA1B,EAAAyB,EAAAQ,WAAA,aAAAjC,EAAA5G,KAAA,KAAAmL,EAAAvE,EAAAtB,IAAAsD,EAAAP,GAAA,OAAA8C,GAAA,UAAAjE,MAAA,0BAAAkE,cAAA,SAAArC,EAAAf,EAAAE,GAAA,OAAAtC,KAAAwB,SAAA,CAAAtD,SAAAkC,EAAA+C,GAAAf,aAAAE,WAAA,SAAAtC,KAAAO,SAAAP,KAAAN,SAAAjE,GAAAmE,IAAA7F,EAOAgO,OAAOC,OAAS,CACdkgB,qBAAoB,eAAAC,EAAAziB,YAAAtI,KAAAwG,KAAE,SAAA+B,IAAA,IAAAhK,EAAAE,EAAAnB,EAAA0tB,EAAA,OAAAhrB,KAAAwB,KAAA,SAAAoH,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAA3D,MAAA,cAAA2D,EAAA3D,KAAA,EACCoD,EACnB,sBACD,OAFK9J,EAAMqK,EAAArE,KAcNjH,EAAO,IAVPmB,EAAa,CACjB,CAAC,QACD,CAAC,SACD,CAAC,gBACD,CAAC,cAAe,CAAEiL,IAAK,IAAMC,KAAM,IAAO+B,eAAe,IACzD,CAAC,OAAQ,CAAEhC,IAAK,KAAMC,KAAM,KAAM+B,eAAe,IACjD,CAAC,aAAc,CAAEhC,IAAK,GAAIC,KAAM,IAAK+B,eAAe,IACpD,CAAC,UAAW,CAAEhC,IAAK,IAAOC,KAAM,KAAQ+B,eAAe,MAI9CrE,MAAM,EAAG,GAAG3I,QAAQ,SAAAC,GAAY,IAAVvB,EAAUyB,YAAAF,EAAA,GAAN,GAAOrB,EAAKF,GAAQ,IACzDqB,EAAW4I,MAAM,GAAG3I,QAAQ,SAAAsP,GAAoB,IAAAC,EAAApP,YAAAmP,EAAA,GAAlB5Q,EAAI6Q,EAAA,GAAQA,EAAA,GAAO3Q,EAAKF,GAAQ,IAExD4tB,EAAQC,YACZC,EACA,CAAE3sB,SAAQE,aAAYnB,SAIxB6c,iBACEhL,IAAAI,cAAC4b,IAAQ,CAACH,MAAOA,GACf7b,IAAAI,cAAC6b,GAAG,OAENxI,SAASyI,eAAe,SACxB,wBAAAziB,EAAAtB,SAAAiB,MACH,yBAAAwiB,EAAAzhB,MAAA1G,KAAAzE,YA/BmB,IAmCtB,IAAMmtB,GAAS1I,SAASrT,cAAc,UACtC+b,GAAOza,IAAM,SACbya,GAAO1kB,OAAQ,EACfgc,SAAS2I,KAAKvQ,YAAYsQ,6CC/C1B5uB,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.e68b6452.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favorite.39847071.png\";","module.exports = __webpack_public_path__ + \"static/media/SelectCatAttr.9d9e8f43.png\";","export const SET_ACTIVE_COMPONENT = \"SET_ACTIVE_COMPONENT\";\r\nexport const SET_CANDIDATES = \"SET_CANDIDATES\";\r\nexport const SET_DATASET = \"SET_DATASET\";\r\nexport const TOGGLE_MASK = \"TOGGLE_MASK\";\r\nexport const PRUNE_POINTS = \"PRUNE_POINTS\";\r\nexport const SET_LEFT_POINTS = \"SET_LEFT_POINTS\";\r\nexport const SET_MODE = \"SET_MODE\";\r\nexport const RESTART = \"RESTART\";\r\nexport const UPDATE_CONVEX_HULL = \"UPDATE_CONVEX_HULL\";\r\nexport const SET_SCORE = \"SET_SCORE\";\r\nexport const SET_NAME = \"SET_NAME\";\r\nexport const SET_EMAIL = \"SET_EMAIL\";\r\nexport const SET_INTERACTION_RESULT = \"SET_INTERACTION_RESULT\";\r\nexport const RENAME_NODE = \"RENAME_NODE\";\r\nexport const SET_K = \"SET_K\";\r\nexport const SET_RADIUS = \"SET_RADIUS\"\r\n\r\nexport const setRadius = radius => ({\r\n  type: SET_RADIUS,\r\n  radius\r\n});\r\n\r\nexport const setRenameNode = renameNode => ({\r\n  type: RENAME_NODE,\r\n  renameNode\r\n});\r\n\r\nexport const setInteractionResult = interactionResults => ({\r\n  type: SET_INTERACTION_RESULT,\r\n  interactionResults\r\n});\r\n\r\nexport const setUserName = name => ({\r\n  type: SET_NAME,\r\n  name\r\n});\r\n\r\nexport const setUserEmail = email => ({\r\n  type: SET_EMAIL,\r\n  email\r\n});\r\n\r\nexport const setActiveComponent = component => ({\r\n  type: SET_ACTIVE_COMPONENT,\r\n  component\r\n});\r\n\r\nexport const setCandidates = candidates => ({\r\n  type: SET_CANDIDATES,\r\n  candidates\r\n});\r\n\r\nexport const setDataset = (points, labels, attributes) => ({\r\n  type: SET_DATASET,\r\n  points,\r\n  labels,\r\n  attributes\r\n});\r\n\r\nexport const toggleMask = (attr, val) => ({\r\n  type: TOGGLE_MASK,\r\n  mask: { [attr]: val }\r\n});\r\n\r\nexport const prunePoints = (indices, step) => ({\r\n  type: PRUNE_POINTS,\r\n  indices,\r\n  step\r\n});\r\n\r\nexport const setLeftPoints = indices => ({\r\n  type: SET_LEFT_POINTS,\r\n  indices\r\n});\r\n\r\nexport const setScore = scores => ({\r\n  type: SET_SCORE,\r\n  scores\r\n})\r\n\r\nexport const changeMode = mode => ({\r\n  type: SET_MODE,\r\n  mode\r\n});\r\n\r\nexport const changeK = K => ({\r\n  type: SET_K,\r\n  K\r\n});\r\n\r\nexport const restart = () => ({\r\n  type: RESTART\r\n});\r\n\r\nexport const updateConvexHull = vertices => ({\r\n  type: UPDATE_CONVEX_HULL,\r\n  vertices\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  SET_ACTIVE_COMPONENT,\r\n  SET_DATASET,\r\n  SET_CANDIDATES,\r\n  TOGGLE_MASK,\r\n  SET_LEFT_POINTS,\r\n  PRUNE_POINTS,\r\n  SET_MODE,\r\n  RESTART,\r\n  UPDATE_CONVEX_HULL,\r\n  SET_SCORE,\r\n  SET_NAME,\r\n  SET_EMAIL,\r\n  SET_INTERACTION_RESULT,\r\n  SET_RADIUS\r\n} from \"../actions\";\r\n\r\n\r\nconst radius = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case SET_RADIUS:\r\n        return action.radius;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst activeComponent = (state = \"Welcome\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_COMPONENT:\r\n      return action.component;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// all points in the dataset\r\nconst points = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.points;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//the scores of all points in the dataset\r\nconst scores = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_SCORE:\r\n      return action.scores;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n// the labels of points\r\nconst labels = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.labels;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the attribute names\r\nconst attributes = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.attributes;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of points in the specified ranges.\r\nconst candidates = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_CANDIDATES:\r\n      return action.candidates;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// show/hide attributes (this feature is not exposed in the UI)\r\nconst mask = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      const mask = {};\r\n      action.attributes.forEach(([attr, config]) => {\r\n        mask[attr] = 1;\r\n      });\r\n      return mask;\r\n    case TOGGLE_MASK:\r\n      return { ...state, ...action.mask };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of points pruned.\r\n// it is an array of [idx, step no.]\r\nconst prunedPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case PRUNE_POINTS:\r\n      const points = action.indices.map(idx => [idx, action.step]);\r\n      return [...points, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of candidate points\r\n// it is an array of indices\r\nconst leftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case SET_LEFT_POINTS:\r\n      return action.indices;\r\n    case PRUNE_POINTS:\r\n      return state.filter(idx => action.indices.indexOf(idx) === -1);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// history of the number of left points\r\nconst numLeftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return [action.indices.length];\r\n    case PRUNE_POINTS:\r\n      const prev = state[state.length - 1];\r\n      return [...state, prev - action.indices.length];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the algorithm to select a pair of points.\r\nconst mode = (state = \"sptree\", action) => {\r\n  switch (action.type) {\r\n    case SET_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// vertices of the convex hull of the preference space.\r\nconst vertices = (state = [], action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CONVEX_HULL:\r\n      return action.vertices;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userName = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_NAME:\r\n      return action.name;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userEmail = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_EMAIL:\r\n      return action.email;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst interactionResults = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_INTERACTION_RESULT:\r\n      return action.interactionResults;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default combineReducers({\r\n  activeComponent,\r\n  points,\r\n  labels,\r\n  attributes,\r\n  candidates,\r\n  mask,\r\n  prunedPoints,\r\n  leftPoints,\r\n  numLeftPoints,\r\n  mode,\r\n  vertices,\r\n  scores,\r\n  userName,\r\n  userEmail,\r\n  interactionResults,\r\n  radius\r\n});\r\n","// read points from a text file\nfunction parsePoints(text) {\n  const points = text\n    .trim()\n    .split(\"\\n\")\n    .slice(1) // the first line is <numOfPoints> <dimension>\n    .map(line =>\n      line\n        .trim()\n        .split(/\\s+/)\n        .map(str => parseFloat(str))\n    );\n  return points; //obtain a 2D array\n}\n\n// read labels from a text file\nfunction parseLabels(text) {\n  const labels = text.trim().split(\"\\n\");\n  return labels;\n}\n\n// check if val is in the range [low, high].\nfunction isInRange(val, low, high) {\n  return low <= val && val <= high;\n}\n\n// get the range of each attribute in a set of points.\nexport const getRanges = points => {\n  const ranges = points[0].map(x => ({ low: x, high: x }));\n  points.slice(1).forEach(point => {\n    point.forEach((x, i) => {\n      ranges[i].low = Math.min(ranges[i].low, x);\n      ranges[i].high = Math.max(ranges[i].high, x);\n    });\n  });\n  return ranges; //obtain an array of objects\n};\n\n// load a dataset by reading its points and labels.\nexport const loadCarDataset = async (pointsURL) => {\n  let response = await fetch(pointsURL);\n  let text = await response.text();\n  const cars = text\n      .trim()\n      .split(\"\\n\")\n      .map(line => {\n        const parts = line.trim().split(/\\s+/);\n        const strings = parts.slice(0, 3);  // the first three\n        const numbers = parts.slice(3).map(part => +part); // the rest\n        return [...strings, ...numbers];\n      });\n  return cars;\n};\n\n\n// load a dataset by reading its categorical attributes\nexport const loadDataset = async (pointsURL, labelsURL) => {\n  let response = await fetch(pointsURL);\n  const points = parsePoints(await response.text());\n  if (labelsURL === undefined) {\n    return points;\n  }\n  response = await fetch(labelsURL);\n  const labels = parseLabels(await response.text());\n  return [points, labels];\n};\n\n// get points that are in the specified ranges.\nexport const selectCandidates = (points, ranges, mask, maxPoints) => {\n  const candidates = [];\n  for (let i = 0; i < points.length; ++i)\n  {\n    if (candidates.length >= maxPoints) break;\n    const point = [];\n    //categorical\n    for (let j = 0; j < 3; ++j)\n    {\n      if (mask[j])\n        point.push(points[i][j]);\n    }\n    //numerical\n    let isValid = true;\n    for (let j = 3; j < points[0].length; ++j)\n    {\n      if (mask[j] && !isInRange(points[i][j], ranges[j - 3][0], ranges[j - 3][1])) {\n        isValid = false;\n        break;\n      }\n      else if(mask[j])\n        point.push(points[i][j]);\n    }\n\n    if (isValid) {\n      candidates.push(point);\n    }\n  }\n  return candidates\n};\n\nfunction findMaxMinOfColumns(matrix) {\n  let maxValues = [];\n  let minValues = [];\n\n  if (matrix.length === 0) return [minValues, maxValues];\n\n  for (let col = 0; col < matrix[0].length; col++)\n  {\n    let maxInCol = matrix[0][col];\n    let minInCol = matrix[0][col];\n\n    for (let row = 1; row < matrix.length; row++)\n    {\n        if (matrix[row][col] > maxInCol) {\n          maxInCol = matrix[row][col];\n        }\n        if (matrix[row][col] < minInCol) {\n          minInCol = matrix[row][col];\n        }\n    }\n\n    maxValues.push(maxInCol);\n    minValues.push(minInCol);\n  }\n\n  return [minValues, maxValues];\n}\n\nexport const normalized = (points, smallerBetter) => {\n  const values = findMaxMinOfColumns(points);\n  console.log(values);\n  const candidates = [];\n  for (let i = 0; i < points.length; ++i)\n  {\n    const point = [];\n    //categorical\n    for (let j = 0; j < points[0].length - smallerBetter.length; ++j)\n        point.push(points[i][j]);\n    //numerical\n    for (let j = points[0].length - smallerBetter.length; j < points[0].length; ++j)\n    {\n        if(smallerBetter)\n          point.push(1 - (points[i][j] - values[0][j]) / (values[1][j] - values[0][j]));\n        else\n          point.push((points[i][j] - values[0][j]) / (values[1][j] - values[0][j]));\n    }\n      candidates.push(point);\n  }\n  return candidates\n};\n\n\n// get points that are in the specified ranges.\nexport const selectCatonlyCandidates = (points, mask) => {\n  const candidates = [];\n  const seen = new Set();\n\n  for (let i = 0; i < points.length; ++i)\n  {\n    const tuple = [];\n    for (let j = 0; j < 3; ++j)\n      if (mask[j]) tuple.push(points[i][j]);\n\n    const tupleStr = JSON.stringify(tuple); // 将数组转换为字符串\n    if (!seen.has(tupleStr)) { // 如果这是一个新的子数组\n      candidates.push(tuple);\n      seen.add(tupleStr); // 添加到已见过的集合中\n    }\n  }\n  return candidates;\n};\n\n\n// convert a JS array to a C++ 2D vector\nexport const array2Vector2D = array => {\n  const vector = new window.Module.VecVecDouble();\n  array.forEach(arr => {\n    const vec = new window.Module.VectorDouble();\n    arr.forEach(x => vec.push_back(x));\n    vector.push_back(vec);\n    vec.delete();\n  });\n  return vector;\n};\n\n// convert a C++ 2D vector to a JS array\nexport const vector2Array2D = vector => {\n  const array = [];\n  for (let i = 0; i < vector.size(); ++i) {\n    const vec = vector.get(i);\n    const arr = [];\n    for (let j = 0; j < vec.size(); ++j) arr.push(vec.get(j));\n    array.push(arr);\n  }\n  return array;\n};\n\n// convert a C++ vector to a JS array\nexport const vector2Array = vector => {\n  const array = [];\n  for (let i = 0; i < vector.size(); ++i) {\n    array.push(vector.get(i));\n  }\n  return array;\n};\n\n// get the indices of points pruned.\n// both prevIndices and currIndices need to be sorted.\nexport const getPrunedIndices = (prevIndices, currIndices) => {\n  let prunedIndices = [];\n  for (let i = 0, j = 0; i < prevIndices.size() || j < currIndices.size(); ) {\n    if (j >= currIndices.size() || prevIndices.get(i) < currIndices.get(j)) {\n      prunedIndices.push(prevIndices.get(i));\n      ++i;\n    } else {\n      ++i;\n      ++j;\n    }\n  }\n  return prunedIndices;\n};\n\n\nconst dominates = (p1, p2, smallerBetter, isSelected) => {\n  //categorical\n  for (let i = 0; i < 3; i++)\n  {\n      if(p1[i] !== p2[i])\n        return 0;\n  }\n\n  //numerical\n  for (let i = 3; i < p1.length; i++)\n  {\n    if (isSelected.at(i) === 1)\n    {\n      if (smallerBetter[i] === 1) {\n        if (p1[i] > p2[i]) return 0;\n      } else {\n        if (p1[i] < p2[i]) return 0;\n      }\n    }\n  }\n  return 1;\n}\n\n\nexport const getSkyline = (points, smallerBetter, isSelected) => {\n  let i, j, dominated, index = 0, m;\n  console.log(smallerBetter, isSelected);\n  let sl = new Array(points.length);\n  for (i = 0; i < points.length; i++)\n  {\n\n    dominated = 0;\n    const pt = points.at(i).slice();\n\n    for (j = 0; j < index && !dominated; ++j) {\n      if (dominates(points[sl[j]], pt, smallerBetter, isSelected))\n        dominated = 1;\n    }\n\n    if (!dominated)\n    {\n      m = index;\n      index = 0;\n      for (j = 0; j < m; j++) {\n        if (!dominates(pt, points[sl[j]], smallerBetter, isSelected)) {\n          sl[index++] = sl[j];\n        }\n      }\n      sl[index++] = i;\n    }\n  }\n\n  console.log(sl);\n\n  let skyline = [];\n  for(let i = 0; i < index; ++i)\n    skyline.push(points[sl[i]]);\n\n  return skyline;\n}","import React from \"react\";\nimport {\n  setActiveComponent,\n  setCandidates,\n  toggleMask,\n  changeMode,\n  changeK,\n  setDataset\n} from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { selectCandidates, selectCatonlyCandidates, getRanges, getSkyline } from \"../utils\";\nimport imgFavorite from '../imgs/favorite.png';\nimport MainTitle from '../imgs/MainTitle.png';\nimport SelectCatAttr from '../imgs/SelectCatAttr.png'\nimport '../css/welcome.css';\nimport {config} from \"@fortawesome/fontawesome-svg-core\";\n\n// the welcome scene containing a brief introduction and a table to obtain the user's input\nclass Welcome extends React.Component {\n  state = {\n    selectedAlgorithm: this.props.mode\n  }\n\n  handleStart = () => {\n    /*\n    let attNum = Object.values(this.props.mask).filter((i) => i === 1).length;\n    if (Object.values(this.props.mask).filter((i) => i === 1).length < 2) {\n      return alert('You should select at least two attributes')\n    }\n    */\n\n    /*\n        'attributes', 'mask' 'points' include (categorical + numerical)\n        'ranges' includes masked numerical attributes\n        'candidates' includes masked attributes\n    */\n    let ranges = [], mask = [], maxPoints;\n    for (let i = 0; i < this.props.attributes.length; ++i)\n    {\n        const [attr, config] = this.props.attributes[i];\n        mask.push(this.props.mask[attr]);\n    }\n    for (let i = 0; i < this.props.attributes.slice(3).length; ++i)\n    {\n      const [attr, config] = this.props.attributes.slice(3)[i];\n      const range = [config.low, config.high];\n      if (this.props.mask[attr])\n      {\n        for (let j = 0; j < 2; ++j)\n        {\n          const str = this.inputs[attr][j].current.value.trim();\n          if (str === \"\") continue;\n          else if (isNaN(str))\n          {\n            alert(`${str} in range of ${attr} is not an integer`);\n            return;\n          }\n          else {\n            range[j] = parseFloat(str);\n          }\n        }\n      }\n      ranges.push(range);\n    }\n    const str = this.inputs.maxPoints.current.value.trim();\n    console.log('input number', str);\n    if (str === \"\") maxPoints = 1000;\n    else if (/\\d+/.test(str)) maxPoints = parseInt(str);\n    else {\n      alert(`${str} for Maximum items is not an integer`);\n      return;\n    }\n    if (maxPoints > 40000 || maxPoints < 100)\n      return alert('The input is out of the range, please input a number between 1000 ~ 40000');\n\n    console.log('ranges', ranges);\n    console.log('mask', mask);\n    console.log('maxPoints', maxPoints);\n\n    if(['gegraph'].includes(this.props.mode))\n    {\n      const candidates = selectCandidates(\n          this.props.points,\n          ranges,\n          mask,\n          maxPoints\n      );\n      if (candidates.length === 0) {\n        alert(\"No matching Tuples, try larger ranges\");\n        return;\n      }\n\n      console.log('attr', this.props.attributes);\n      let isSelected = this.props.attributes.map(([attr, config]) => {\n        return this.props.mask[attr];\n      })\n      let smallerBetter = this.props.attributes.slice(3).map(([attr, config]) => {\n        return config.smallerBetter ? 1 : 0;\n      })\n      console.log('input points--', candidates, isSelected, smallerBetter);\n\n      //console.log('input points--', candidates, isSelected, smallerBetter);\n\n      let skyline = getSkyline(candidates, smallerBetter, isSelected)\n      if (skyline.length < 10)\n      {\n        console.log('skyline', skyline);\n        return alert('Too few valid tuples! Try more attributes, looser ranges, larger Max No. of Tuples or larger datasets!')\n      }\n\n      /*\n      if (Object.values(this.props.mask).slice(0, 3).filter((i) => i === 1).length > 2) {\n        return alert('SPTree only supports two categorical attributes!');\n      }\n      */\n\n      console.log('skyline', skyline);\n      this.props.startAlgorithmGEGraph(skyline);\n\n    }\n    else\n    {\n      if (Object.values(this.props.mask).slice(0, 3).filter((i) => i === 1).length < 1) {\n        return alert('You need to select at least one categorical attribute!');\n      }\n      const candidates = selectCatonlyCandidates (this.props.points, mask);\n      this.props.startAlgorithmSPTree(candidates);\n    }\n  };\n\n  handleChange = event => {\n    if (['gegraph'].includes(event.target.value))\n    {\n      if (Object.values(this.props.mask).slice(0, 3).filter((i) => i === 1).length > 2)\n      {\n        alert(event.target.value + ' only supports two categorical attributes!');\n        this.setState({ selectedAlgorithm: 'sptree' });\n        return\n      }\n      this.props.attributes.slice(3).map(([attr, config]) => {\n        this.props.toggleMask(attr, 1);\n      });\n    }\n    else if (['sptree'].includes(event.target.value))\n    {\n      this.props.attributes.slice(3).map(([attr, config]) => {\n        this.props.toggleMask(attr, 0);\n      });\n    }\n\n    this.setState({ selectedAlgorithm: event.target.value });\n    this.props.changeMode(event.target.value);\n\n  };\n\n  isCatAble = (abled, attr) =>\n  {\n    if(abled === 1) {\n      if (Object.values(this.props.mask).slice(0, 3).filter((i) => i === 1).length <= 1)\n      {\n        return alert('You need to select at least one categorical attribute!');\n      }\n      else\n        this.props.toggleMask(attr, 1 - this.props.mask[attr]);\n    }\n    else {\n       if (this.props.mode === 'gegraph' && Object.values(this.props.mask).slice(0, 3).filter((i) => i === 1).length >= 2)\n       {\n        return alert('You can only select at most two categorical attributes!');\n       }\n       else\n         this.props.toggleMask(attr, 1 - this.props.mask[attr]);\n    }\n  }\n\n  isNumAble = (abled, attr) =>\n  {\n    if(abled === 1) {\n      if (Object.values(this.props.mask).slice(3).filter((i) => i === 1).length <= 3)\n      {\n        return alert('You need to select at least three numerical attributes!');\n      }\n      else\n        this.props.toggleMask(attr, 1 - this.props.mask[attr]);\n    }\n    else\n      this.props.toggleMask(attr, 1 - this.props.mask[attr]);\n  }\n\n  render() {\n    // Init inputs\n    this.inputs = {};\n    this.props.attributes.slice(3).forEach(([attr, config]) => {\n      this.inputs[attr] = [React.createRef(), React.createRef()];\n    });\n    this.inputs.maxPoints = React.createRef();\n\n\n    const categoricalValues =[[\"Kleinwagen\", \"Limousine\", \"Kombi\"],\n      [\"Lpg\", \"Diesel\", \"Cng\", \"Benzin\"], [\"Auto\", \"Manual\"]];\n    // Iterate categorical attributes\n    const catAttrs = this.props.attributes.slice(0, 3).map((attr, index) => {\n      const abled = this.props.mask[attr];\n      return (\n          <tr key={attr}>\n            <td className=\"align-middle\">\n              <span className={`${this.props.mask[attr] ? \"attribute-select\" : null}`}\n                    style={{'textDecoration': this.props.mask[attr] ? '' : 'line-through' }}\n              >{attr}</span>\n            </td>\n            <td>\n              <span style={{'textDecoration': this.props.mask[attr] ? '' : 'line-through' }}\n              >{categoricalValues[index].join(', ')}</span>\n            </td>\n            <td className=\"align-middle\">\n              <input\n                  type=\"checkbox\"\n                  className=\"large-checkbox\"\n                  checked={abled}\n                  onChange={() => this.isCatAble(abled, attr)}\n                  style={{ 'cursor': 'pointer'}}\n              />\n            </td>\n          </tr>\n      );\n    });\n\n    // Iterate numerical attributes\n    const numAttrs = this.props.attributes.slice(3).map(([attr, config], index) => {\n      const abled = this.props.mask[attr];\n      const { low, high } = config;\n      return (\n          <tr key={attr}>\n            <td className=\"align-middle\">\n              <span className={`${this.props.mask[attr] ? \"attribute-select\" : null}`}\n                style={{'textDecoration': this.props.mask[attr] ? '' : 'line-through' }}\n              >{attr}</span>\n            </td>\n            <td>\n              <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder={low}\n                  ref={this.inputs[attr][0]}\n                  disabled={1 - abled}\n              />\n            </td>\n            <td>\n              <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder={high}\n                  ref={this.inputs[attr][1]}\n                  disabled={1 - abled}\n              />\n            </td>\n            <td className=\"align-middle\">\n              <input\n                  type=\"checkbox\"\n                  className=\"large-checkbox\"\n                  checked={abled}\n                  disabled={['sptree'].includes(this.props.mode)}\n                  onChange={() => this.isNumAble(abled, attr)}\n                  style={{ 'cursor': 'pointer'}}\n              />\n            </td>\n          </tr>\n      );\n    });\n\n    // number of tuples & Algorithms\n    const numTuple = [];\n    numTuple.push(\n        <tr key=\"other\">\n          <td className=\"align-middle font-weight-bold\">Maximum No. of Cars</td>\n          <td colSpan=\"20\">\n            <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder='1000'\n                ref={this.inputs.maxPoints}\n                style={{ width: '50%' }}\n            />\n          </td>\n        </tr>\n        );\n\n    const algorithmChoose = [];\n    algorithmChoose.push(\n      <tr>\n      <td className=\"align-middle\" colSpan=\"2\">\n        <div className=\"form-check form-check-inline custom-radio-spacing\">\n          <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"algorithm\"\n              value=\"sptree\"\n              onChange={this.handleChange}\n              id=\"sptreeRadio\"\n              checked={this.state.selectedAlgorithm === 'sptree'}\n          />\n          <label className=\"form-check-label\" htmlFor=\"sptreeRadio\">\n            SP-Tree\n          </label>\n        </div>\n        <div className=\"form-check form-check-inline\">\n          <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"algorithm\"\n              value=\"gegraph\"\n              onChange={this.handleChange}\n              id=\"gegraphRadio\"\n              checked={this.state.selectedAlgorithm === 'gegraph'}\n          />\n          <label className=\"form-check-label\" htmlFor=\"gegraphRadio\">\n            GE-Graph\n          </label>\n        </div>\n      </td>\n    </tr>\n    );\n\n\n    return (\n        <div className=\"text-center m-auto\" style={{ maxWidth: \"100%\" }}>\n          <img alt='' src={MainTitle} style={{ 'width': '100%' }} />\n          <br />\n          <br />\n\n          {/* Algorithm */}\n          <h4 style={{\n            'background': 'linear-gradient(to right, #89bfe9, #5271a6)', // 添加从左到右的颜色渐变\n            'borderRadius': '5px',\n            'textAlign': 'left',\n            'padding': '5px',\n            'boxShadow': '3px 3px 5px rgba(0, 0, 0, 0.5)'  // 添加稍微的阴影效果\n          }}>\n            <strong><em>STEP 1:</em></strong> Select the Algorithms for Recommendation\n          </h4>\n          <table className=\"table\">\n            <tbody>{algorithmChoose}</tbody>\n          </table>\n\n          {/* categorical attributes */}\n          <h4 style={{\n            'background': 'linear-gradient(to right, #89bfe9, #5271a6)', // 添加从左到右的颜色渐变\n            'borderRadius': '5px',\n            'textAlign': 'left',\n            'padding': '5px',\n            'boxShadow': '3px 3px 5px rgba(0, 0, 0, 0.5)'  // 添加稍微的阴影效果\n          }}>\n            <strong><em>STEP 2:</em></strong> Select the Categorical Attributes You Concern\n          </h4>\n          <table className=\"table\">\n            <thead>\n            <tr>\n              <th className=\"align-middle\">Categorical Attributes</th>\n              <th>Values</th>\n              <th>Selection</th>\n            </tr>\n            </thead>\n            <tbody>{catAttrs}</tbody>\n          </table>\n\n          {/* numerical attributes */}\n          <h4 style={{\n            'background': 'linear-gradient(to right, #89bfe9, #5271a6)', // 添加从左到右的颜色渐变\n            'borderRadius': '5px',\n            'textAlign': 'left',\n            'padding': '5px',\n            'boxShadow': '3px 3px 5px rgba(0, 0, 0, 0.5)'  // 添加稍微的阴影效果\n          }}>\n            <strong><em>STEP 3:</em></strong> Select the Numerical Attributes You Concern\n          </h4>\n          <table className=\"table\">\n            <thead>\n            <tr>\n              <th className=\"align-middle\">Numerical Attributes</th>\n              <th>Lower bound</th>\n              <th>Upper bound</th>\n              <th>Selection</th>\n            </tr>\n            </thead>\n            <tbody>{numAttrs}</tbody>\n          </table>\n\n          {/* Number of Tuples */}\n          <h4 style={{\n            'background': 'linear-gradient(to right, #89bfe9, #5271a6)', // 添加从左到右的颜色渐变\n            'borderRadius': '5px',\n            'textAlign': 'left',\n            'padding': '5px',\n            'boxShadow': '3px 3px 5px rgba(0, 0, 0, 0.5)'  // 添加稍微的阴影效果\n          }}>\n            <strong><em>STEP 4:</em></strong> Set the Maximum Number of Candidate Cars\n          </h4>\n          <table className=\"table\">\n            <tbody>{numTuple}</tbody>\n          </table>\n\n\n\n          <div>\n            <button\n                type=\"button\"\n                className=\"modern-btn\"\n                style={{ width: \"8rem\" }}\n                onClick={this.handleStart}\n            >\n              Next\n            </button>\n          </div>\n          <br/>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\n  attributes,\n  mask,\n  points,\n  mode\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startAlgorithmSPTree: candidates => {\n    dispatch(setCandidates(candidates));\n    dispatch(setActiveComponent(\"SPTree\"));\n  },\n  startAlgorithmGEGraph: candidates => {\n    dispatch(setCandidates(candidates));\n    dispatch(setActiveComponent(\"GEGraph\"));\n  },\n  toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\n  changeMode: mode => dispatch(changeMode(mode)),\n  changeK: K => dispatch(changeK(K)),\n  setDataset: (points, labels, attributes) => dispatch(setDataset(points, labels, attributes))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Welcome);","import React from \"react\";\r\nimport {\r\n  setActiveComponent,\r\n  setCandidates,\r\n  toggleMask,\r\n  changeMode,\r\n  setUserName,\r\n  setUserEmail\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates } from \"../utils\";\r\n\r\n\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass Welcome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleSPTree = () => {\r\n      this.props.SPTree();\r\n  };\r\n\r\n  handleGEGraph = () => {\r\n    this.props.GEGraph();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center m-auto\" style={{ maxWidth: \"55rem\" }}>\r\n        <h1>You will be asked a few questions that can help us to learn your preference. Then, \r\n        a car will be recommended to you.</h1> \r\n        <br />\r\n        <p className=\"lead text-muted\">\r\n          Please select one algorithm for your car recommendation.</p>\r\n        <br />\r\n        <br />\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{ width: \"18rem\" }}\r\n            onClick={this.handleSPTree}\r\n          >\r\n           Algorithm SP-Tree\r\n          </button>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{ width: \"18rem\" }}\r\n            onClick={this.handleGEGraph}\r\n          >\r\n           Algorithm GE-Graph\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n  attributes,\r\n  mask,\r\n  points,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  SPTree: () => dispatch(setActiveComponent(\"SPTree\")),\r\n  GEGraph: () => dispatch(setActiveComponent(\"GEGraph\"))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Welcome);\r\n","import React from \"react\";\r\nimport {\r\n  setActiveComponent,\r\n  setCandidates,\r\n  toggleMask,\r\n  changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates } from \"../utils\";\r\n\r\n\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass Introduction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleStart = () => {\r\n    this.props.start();\r\n  };\r\n\r\n  handleModeChange = event => {\r\n    this.props.changeMode(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center m-auto\" style={{ maxWidth: \"50rem\" }}>\r\n        <h1>Instructions</h1>\r\n        <br />\r\n        <br />\r\n        <p className=\"lead text-left\" style={{fontSize: \"30px\"}}>\r\n          There are two phases: Interaction and Evaluation. <br />\r\n        </p>\r\n        <p className=\"lead text-left\">\r\n          Phase 1 (Interaction): In the Interaction phase, we want to ask you a few questions to learn\r\n          your preference and then find some cars that you will be interested in. <br /><br />\r\n          Phase 2 (Evaluation): In the Evaluation phase, we will present you some cars and ask you\r\n          whether you are interested in them.<br /><br />\r\n        </p>\r\n        <p className=\"lead text-muted\">\r\n          Click the \"Start\" button to start the research project. <br />\r\n        </p>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{ width: \"8rem\" }}\r\n            onClick={this.handleStart}\r\n          >\r\n            Start\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n  attributes,\r\n  mask,\r\n  points,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    start: () => {\r\n        dispatch(setActiveComponent(\"PhaseOne\"));\r\n    },\r\n    toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n    changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Introduction);\r\n","import React from \"react\";\r\nimport {\r\n    setActiveComponent,\r\n    setCandidates,\r\n    toggleMask,\r\n    changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates } from \"../utils\";\r\n\r\n\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass PhaseTwo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {};\r\n        this.inputs.name = React.createRef();\r\n        this.inputs.email = React.createRef();\r\n    }\r\n\r\n    handleStart = () => {\r\n        this.props.start();\r\n    };\r\n\r\n    handleModeChange = event => {\r\n        this.props.changeMode(event.target.value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center m-auto\" style={{ maxWidth: \"40rem\" }}>\r\n                <h1>Phase Two: Evaluation</h1>\r\n                <br />\r\n                <br />\r\n                <h4 >\r\n                    You just ended phase one. We are now going to phase two Evaluation. We will present you some cars and ask you\r\n                    whether you are interested in them. <br />\r\n                </h4>\r\n                <br />\r\n                <p className=\"lead text-muted\">\r\n                    Click the \"Continue\" button to continue. <br />\r\n                </p>\r\n                <div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ width: \"8rem\" }}\r\n                        onClick={this.handleStart}\r\n                    >\r\n                        Continue\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n    attributes,\r\n    mask,\r\n    points,\r\n    mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    start: () => {\r\n        dispatch(setActiveComponent(\"Result\"));\r\n    },\r\n    toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n    changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PhaseTwo);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setActiveComponent,\r\n  setInteractionResult,\r\n  setLeftPoints,\r\n  setScore,\r\n  prunePoints,\r\n  updateConvexHull\r\n} from \"../actions\";\r\nimport {\r\n  array2Vector2D,\r\n  vector2Array,\r\n  getPrunedIndices,\r\n  vector2Array2D\r\n} from \"../utils\";\r\n\r\nconst SIMPLEX = 2;\r\nconst RANDOM = 1;\r\n\r\n// iteratively ask the user to choose the preferred car from a pair of cars.\r\nclass Question extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const smallerBetter = new window.Module.VectorInt();\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        smallerBetter.push_back(config.smallerBetter ? 1 : 0);\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n    const candidatesVec = array2Vector2D(this.props.candidates);\r\n    this.runner = new window.Module.AlgorithmRunner(\r\n      candidatesVec,\r\n      smallerBetter,\r\n      this.props.mode === \"random\" ? RANDOM : SIMPLEX\r\n    );\r\n    candidatesVec.delete();\r\n    const indices = this.runner.nextPair();\r\n    this.state = {\r\n        pair: vector2Array(indices),\r\n        interRR: []\r\n    };\r\n  }\r\n\r\n  choose = idx => {\r\n    const option = idx + 1;\r\n    //record the interaction result\r\n    const trs = this.state.pair.map((idx, i) => {\r\n      let tds = \"\\n\";\r\n      this.props.candidates[idx].forEach((x, j) => {\r\n        tds += x.toString();\r\n        tds += \"  \";\r\n      });\r\n      return tds;\r\n    });\r\n    trs.push(\"\\n\");\r\n    trs.push(option);\r\n    trs.push(\"\\n\");\r\n    console.log(trs);\r\n    this.state.interRR.push(trs);\r\n\r\n    const accurracy = this.runner.choose(option);\r\n    if (accurracy > 0.99999)\r\n    {\r\n      this.stopInteraction();\r\n    }\r\n    else {\r\n      const indices = this.runner.nextPair();\r\n      this.setState({\r\n        pair: vector2Array(indices)\r\n      });\r\n    }\r\n  };\r\n\r\n  stopInteraction = () => {\r\n    //this.prevIndices.delete();\r\n    const Indicess = this.runner.getRanking();\r\n    this.props.setLeftPoints(vector2Array(Indicess));\r\n    const Scores = this.runner.getScore();\r\n    this.props.setScore(vector2Array(Scores));\r\n    this.runner.delete();\r\n    this.props.showResult(this.state.interRR);\r\n};\r\n\r\nrender() {\r\nconst ths = [<th key=\"Option No.\">Option</th>];\r\nthis.attributes.forEach(attr => {\r\n  ths.push(<th key={attr}>{attr}</th>);\r\n});\r\nths.push(<th key=\"chooseButton\" />);\r\n\r\nconst trs = this.state.pair.map((idx, i) => {\r\n  const tds = [<td key=\"Option No.\">{i + 1}</td>];\r\n  this.props.candidates[idx].forEach((x, j) => {\r\n    tds.push(<td key={j}>{x}</td>);\r\n  });\r\n  tds.push(\r\n    <td key=\"chooseButton\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-success btn-sm\"\r\n        onClick={() => this.choose(i)}\r\n      >\r\n        Choose\r\n      </button>\r\n    </td>\r\n  );\r\n  return (\r\n    <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n      {tds}\r\n    </tr>\r\n  );\r\n});\r\n\r\nreturn (\r\n  <div>\r\n    <h3>Phase One: Interaction  </h3>\r\n    <br/><br/>\r\n    <h4>\r\n      Q{this.runner.getNumQuestion()}: Choose the Car you favor more\r\n      between the following options\r\n    </h4>\r\n    <div className=\"row justify-content-center align-items-center\">\r\n      <div className=\"col-md-8\">\r\n        <table className=\"table table-hover text-center\">\r\n          <thead>\r\n            <tr>{ths}</tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = ({ labels, candidates, mask, attributes, numLeftPoints, mode, scores }) => ({\r\n    labels,\r\n    candidates,\r\n    mask,\r\n    attributes,\r\n    numLeftPoints,\r\n    mode,\r\n    scores\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showResult: (interResults) => {\r\n    dispatch(setInteractionResult(interResults));\r\n    dispatch(setActiveComponent(\"PhaseTwo\"));\r\n  },\r\n  setLeftPoints: indices => { dispatch(setLeftPoints(indices));},\r\n  setScore: scores => { dispatch(setScore(scores));},\r\n  prunePoints: (indices, step) => { dispatch(prunePoints(indices, step));},\r\n  updateConvexHull: vertices => {dispatch(updateConvexHull(vertices)); }\r\n});\r\n\r\nexport default connect(\r\nmapStateToProps,\r\nmapDispatchToProps\r\n)(Question);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FlexibleXYPlot,\n  XAxis,\n  YAxis,\n  Hint,\n  VerticalBarSeries,\n  ChartLabel\n} from \"react-vis\";\nimport \"../css/textStyle.css\"\n\n\n// a histogram to show the number of cars left vs the number of questions asked.\nclass Histogram extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hintValue: null,\n      showMore: false\n    };\n  }\n\n  toggleShowMore = () => {\n    this.setState(prevState => ({\n      showMore: !prevState.showMore\n    }));\n  };\n\n  _onMouseLeave = () => {\n    this.setState({\n      hintValue: null\n    });\n  };\n\n  _onNearestX = (value, { index }) => {\n    this.setState({\n      hintValue: this.props.data[index]\n    });\n  };\n\n  render() {\n    const { showMore } = this.state;\n    const moreText = \" During the interaction, according to your answers \" +\n        \"to questions, we can learn your preference on cars. Then, unsuitable cars are excluded from \" +\n        \"Candidates Cars based on the learned preference. Thus, with more questions you answer, fewer Candidates Cars left.\";\n\n    return (\n      <div>\n        <div style={{ width: \"30rem\", height: \"26rem\"}}>\n          <FlexibleXYPlot onMouseLeave={this._onMouseLeave}\n                          style={{ background: '#333' }}\n                          margin={{ left: 75, right: 20, top: 20, bottom: 60 }}>\n            <XAxis\n              tickValues={this.props.data.map((val, idx) => idx)}\n              tickFormat={value => value.toString()}\n              style={{\n                ticks: { fill: \"white\" },\n                text: { stroke: 'none', fill: 'white', fontWeight: 600, fontSize: '14px'}\n              }}\n            />\n            <YAxis\n              style={{\n                ticks: { fill: \"white\" },\n                text: { stroke: 'none', fill: 'white', fontWeight: 600, fontSize: '14px' }\n              }}\n            />\n            <ChartLabel\n              text=\"Number of Questions Answered\"\n              includeMargin={false}\n              xPercent={0.2}\n              yPercent={1.2}\n              style={{\n                style: { fill: \"white\", fontSize: '14px' }\n              }}\n            />\n            <ChartLabel\n              text=\"Number of Candidate Cars\"\n              includeMargin={false}\n              xPercent={-0.13}\n              yPercent={0.3}\n              style={{\n                transform: \"rotate(-90)\",\n                textAnchor: \"end\",\n                style: { fill: \"white\", fontSize: '14px' }\n              }}\n            />\n            <VerticalBarSeries\n              color=\"rgb(77, 182, 172)\"\n              onNearestX={this._onNearestX}\n              data={this.props.data}\n              animation\n              style={{\n                boxShadow: '2px 2px 4px rgba(0,0,0,0.5)', borderRadius: '5px 5px 0 0'\n              }}\n            />\n            {this.state.hintValue && (\n                <Hint value={this.state.hintValue}>\n                  <div style={{ background: 'rgba(0, 0, 0, 0.8)', padding: '5px', borderRadius: '5px', color: 'white' }}> {/* 添加背景，圆角和阴影 */}\n                    Number of Questions Answered: {this.state.hintValue.x}\n                    <br />\n                    Number of Candidate Cars: {this.state.hintValue.y}\n                  </div>\n                </Hint>\n            )}\n          </FlexibleXYPlot>\n        </div>\n        <div style={{ width: \"30rem\" }}>\n          <h4 style={{'padding': '10px'}}>Figure: Candidate Cars -- Questions</h4>\n          <p className=\"text-t-align\">\n            &nbsp;&nbsp;&nbsp;&nbsp;This figure shows the number of Candidates Cars with the\n            number of Questions you answer. {showMore ? moreText : ' '}\n            <button className=\"toggleButton\" onClick={this.toggleShowMore}>\n              {showMore ? <span className=\"foldText\">&nbsp;fold</span> : <span className=\"foldText\">...unfold</span>}\n            </button>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\nconst mapStateToProps = ({ numLeftPoints }) => ({\n  data: numLeftPoints.map((num, i) => ({ x: i, y: num }))\n});\n\n */\nconst mapStateToProps = ({ numLeftPoints }) => {\n  let mappedData = numLeftPoints.map((num, i) => ({ x: i, y: num }));\n\n  if (mappedData.length === 1) {\n    mappedData.push({ x: 0.01, y: 0 });\n    mappedData.push({ x: -0.01, y: 0 });\n  }\n\n  return {\n    data: mappedData\n  };\n};\n\nexport default connect(mapStateToProps)(Histogram);\n","import * as THREE from \"three\";\nwindow.THREE = THREE;\nrequire(\"three/examples/js/controls/OrbitControls\");\nrequire(\"three/examples/js/QuickHull\");\nrequire(\"three/examples/js/geometries/ConvexGeometry\");\n\nexport default THREE;\n","import React from \"react\";\nimport THREE from \"./three\";\n\nconst SCALE = 100;\nconst FACTOR = 10; // font size = SCALE / FACTOR\n\n// the convex hull of the preference space\nclass ConvexHull extends React.Component {\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n\n    this.camera.position.set(1.5 * SCALE, 1.5 * SCALE, 0.5 * SCALE);\n\n    this.camera.up.set(0, 0, 1);\n    this.controls = new THREE.OrbitControls(this.camera, this.mount);\n    this.controls.update();\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setClearColor(0xffffff);\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement);\n    this.addAxes();\n    this.drawGeometry();\n    this.start();\n  }\n\n  drawGeometry = () => {\n    if (this.props.vertices.length < 3) return;\n    let verPoints = this.props.vertices;\n    if (this.props.vertices.length < 4)\n      verPoints = [...verPoints, verPoints[0]];\n    const points = verPoints.map(vertex => {\n      const scaled_vertex = vertex.map(x => x * SCALE);\n      return new THREE.Vector3(...scaled_vertex);\n    });\n    const geometry = new THREE.ConvexGeometry(points);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x91C4F8,\n      //shading: THREE.FlatShading,\n      polygonOffset: true,\n      polygonOffsetFactor: 1, // positive value pushes polygon further away\n      polygonOffsetUnits: 1,\n      opacity: 0.5,\n      transparent: true\n    });\n    this.mesh = new THREE.Mesh(geometry, material);\n    const geo = new THREE.EdgesGeometry(geometry); // or WireframeGeometry\n    const mat = new THREE.LineBasicMaterial({ color: 0x91C4F8, linewidth: 1 });\n    const wireframe = new THREE.LineSegments(geo, mat);\n    this.mesh.add(wireframe);\n    this.scene.add(this.mesh);\n  };\n\n  addAxes = () => {\n    const axes = new THREE.AxesHelper(1.5 * SCALE);\n    this.scene.add(axes);\n    const typeface = require(\"three/examples/fonts/helvetiker_regular.typeface.json\");\n    const font = new THREE.Font(typeface);\n\n    const numConfig = [\n      // color, position, rotation\n      [\n        0xff0000,\n        [SCALE + SCALE / (FACTOR * 2), 0, 0],\n        [Math.PI / 2, Math.PI, 0]\n      ],\n      [\n        0x00ff00,\n        [0, SCALE - SCALE / (FACTOR * 2), 0],\n        [Math.PI / 2, Math.PI / 2, 0]\n      ],\n      [\n        0x0000ff,\n        [\n          SCALE / (FACTOR * Math.sqrt(2)),\n          -SCALE / (FACTOR * Math.sqrt(2)),\n          SCALE\n        ],\n        [Math.PI / 2, (Math.PI * 3) / 4, 0]\n      ]\n    ];\n\n    numConfig.forEach(([color, position, rotation]) => {\n      const shape = font.generateShapes(\"1\", SCALE / FACTOR);\n      const geometry = new THREE.ShapeBufferGeometry(shape);\n      const mesh = new THREE.Mesh(\n        geometry,\n        new THREE.MeshBasicMaterial({\n          color: color,\n          side: THREE.DoubleSide\n        })\n      );\n      mesh.position.set(...position);\n      mesh.rotation.set(...rotation);\n      this.scene.add(mesh);\n    });\n    window.lines = [];\n    const lineConfig = [\n      [0xff0000, [SCALE, 0, 0], [0, 0, 0]],\n      [0x00ff00, [0, SCALE, 0], [0, 0, -Math.PI / 2]],\n      [0x0000ff, [0, 0, SCALE], [0, 0, -Math.PI / 2]]\n    ];\n    lineConfig.forEach(([color, position, rotation]) => {\n      const material = new THREE.LineBasicMaterial({\n        color\n      });\n      const geometry = new THREE.Geometry();\n      geometry.vertices.push(\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(0, SCALE / (2 * FACTOR))\n      );\n      const line = new THREE.Line(geometry, material);\n      line.position.set(...position);\n      line.rotation.set(...rotation);\n      this.scene.add(line);\n      window.lines.push(line);\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.vertices !== prevProps.vertices) {\n      if (this.mesh) {\n        this.scene.remove(this.mesh);\n        this.mesh.geometry.dispose();\n        this.mesh.material.dispose();\n      }\n      this.drawGeometry();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = window.requestAnimationFrame(this.animate);\n    }\n  };\n\n  stop = () => {\n    window.cancelAnimationFrame(this.frameId);\n  };\n\n  animate = () => {\n    this.controls.update();\n    this.renderer.render(this.scene, this.camera);\n    this.frameId = window.requestAnimationFrame(this.animate);\n  };\n\n  render() {\n    return (\n      <div\n        style={{ width: \"25rem\", height: \"25rem\" }}\n        ref={mount => {\n          this.mount = mount;\n        }}\n      />\n    );\n  }\n}\n\nexport default ConvexHull;\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\n\n\nfunction Line({ color }) {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"2rem\",\n        alignItems: \"center\",\n        display: \"flex\"\n      }}\n    >\n      <div style={{ width: \"100%\", height: \"2px\", backgroundColor: color }} />\n    </div>\n  );\n}\n\nfunction SlideItem({ text }) {\n  return (\n    <div\n      style={{\n        height: \"2rem\",\n        alignItems: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      }}\n    >\n      {text}\n    </div>\n  );\n}\n\n// show/change the selected attributes for displaying the convex hull\nclass Legend extends React.Component {\n    constructor(props) {\n        super(props);\n        const attrData = [\n            { id: 1, name: \"Type\"},\n            { id: 2, name: \"Power\"},\n            { id: 3, name: \"Transmission\"},\n            { id: 4, name: \"Price (USD)\"},\n            { id: 5, name: \"Year\"},\n            { id: 6, name: \"Power (HP)\"},\n            { id: 7, name: \"Used KM\"}\n        ];\n        this.attributes = [];\n        attrData.slice(3).forEach((attr) => {\n            if (this.props.mask[attr.name] === 1)\n                this.attributes.push(attr.name);\n        });\n        console.log(this.attributes);\n    }\n  render() {\n    const settings = {\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      vertical: true,\n      verticalSwiping: true,\n      arrows: false,\n      swipeToSlide: true,\n      afterChange: this.props.changeStartingIndex\n    };\n    return (\n      <div\n        title=\"Click the arrows to change the selected attributes for displaying the convex hull.\"\n        style={{\n          width: \"12rem\"\n        }}\n      >\n          <br /><br /><br /><br />\n        <div\n          style={{\n            alignItems: \"center\",\n            width: \"4rem\",\n            display: \"inline-block\",\n            verticalAlign: \"middle\"\n          }}\n        >\n          <Line color=\"#ff0000\" />\n          <Line color=\"#00ff00\" />\n          <Line color=\"#0000ff\" />\n        </div>\n        <div\n          style={{\n            width: \"8rem\",\n            display: \"inline-block\",\n            verticalAlign: \"middle\"\n          }}\n        >\n          <div\n            onClick={() => this.slider.slickPrev()}\n            style={{ cursor: \"pointer\" }}\n          >\n            <FontAwesomeIcon icon={faAngleUp} />\n          </div>\n            <Slider {...settings} ref={self => (this.slider = self)}>\n                {this.attributes.map((attr, key) => (<SlideItem key={key} text={attr}/>))}\n                {this.attributes.map((attr, key) => (<SlideItem key={key} text={attr}/>))}\n            </Slider>\n          <div\n            onClick={() => this.slider.slickNext()}\n            style={{ cursor: \"pointer\" }}\n          >\n            <FontAwesomeIcon icon={faAngleDown} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ mask, attributes }) => ({\n    mask,\n    attributes\n});\n\nexport default connect(mapStateToProps)(Legend);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ConvexHull from \"./ConvexHull\";\nimport Legend from \"./Legend\";\n\n// to visualize the preference space.\nclass PreferenceSpace extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n      convexHullVertices: props.vertices.map(vert => vert.slice(0, 3))\n    };\n  }\n\n  updateContextHullVertices = index => {\n\n    const convexHullVertices = this.props.vertices.map(vertext => {\n      const vert = [];\n      for (let i = 0; i < 3; ++i) {\n        vert.push(vertext[(i + index) % vertext.length]);\n      }\n      return vert;\n    });\n    this.setState({ convexHullVertices });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.vertices !== prevProps.vertices) {\n      this.updateContextHullVertices(this.state.index);\n    }\n  }\n\n  changeStartingIndex = index => {\n    this.setState({ index });\n    // explicitly pass index to this.updateContextHullVertices\n    // because this.state.index is not updated immediately,\n    // i.e., this.state.index has still the old value at this line.\n    this.updateContextHullVertices(index);\n  };\n\n  render() {\n    return (\n      <div style={{width: '40rem' }}>\n        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"flex-start\", width: '40rem' }}>\n          <ConvexHull vertices={this.state.convexHullVertices} />\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <Legend changeStartingIndex={this.changeStartingIndex} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ vertices }) => ({ vertices });\n\nexport default connect(mapStateToProps)(PreferenceSpace);\n","import React from \"react\";\nimport Histogram from \"./Histogram\";\nimport PreferenceSpace from \"./PreferenceSpace\";\n\nfunction Visuals() {\n  return (\n    <div>\n      <h2>Visuals</h2>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6\" style={{ minWidth: \"500px\" }}>\n          <Histogram />\n        </div>\n        <div className=\"col-6\" style={{ minWidth: \"500px\" }}>\n          <PreferenceSpace />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Visuals;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\n// statistics including the number of cars pruned/left.\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n    this.state = {\r\n      showMorePrune: false,\r\n      showMoreLeft: false\r\n    };\r\n  }\r\n\r\n  toggleShowMorePrune = () => {\r\n    this.setState(prevState => ({\r\n      showMorePrune: !prevState.showMorePrune\r\n    }));\r\n  };\r\n\r\n  toggleShowMoreLeft = () => {\r\n    this.setState(prevState => ({\r\n      showMoreLeft: !prevState.showMoreLeft\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let ths = [<th key=\"Step No.\">Step</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    const prunedTrs = this.props.prunedPoints.map(([idx, step], i) => (\r\n      <tr key={i} data-toggle=\"tooltip\">\r\n        {[step, ...this.props.candidates[idx]].map((x, j) => (\r\n          <td key={j}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n\r\n    console.log(this.props.leftPoints);\r\n    const leftTrs = this.props.leftPoints.map((idx, i) => (\r\n      <tr key={i} data-toggle=\"tooltip\" >\r\n        {this.props.candidates[idx].map((x, j) => (\r\n          <td key={j}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n\r\n\r\n    const { showMorePrune, showMoreLeft} = this.state;\r\n    const moreTextPrune = \"According to your answers to questions, we learn \" +\r\n        \"your preference on cars and prune the unsuitable cars. Note that *step* represents \" +\r\n        \"the cars are pruned when how many questions are answered. \";\r\n\r\n    const moreTextLeft = \"Based on your answers to questions, these are the candidate \" +\r\n        \"cars that you might prefer. \";\r\n\r\n    return (\r\n        <div className=\"scrollable-container\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div className=\"scrollable-item\">\r\n            <div style={{ width: \"40rem\", height: \"26rem\", backgroundColor: \"#F8F8F8\"}}>\r\n              <table className={classNames(\"table\", \"table-hover\", {\"table-fixed\": true //prunedTrs.length > 7\r\n              })} style={{minWidth: \"40rem\"}}>\r\n                <thead>\r\n                  <tr>{ths}</tr>\r\n                </thead>\r\n                <tbody>{prunedTrs}</tbody>\r\n              </table>\r\n            </div>\r\n            <div>\r\n              <h4  style={{'padding': '10px'}}>Table: The Cars Pruned</h4>\r\n              <p className=\"text-t-align\" style={{ width: \"40rem\" }}>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;This figure shows the cars Pruned. {showMorePrune ? moreTextPrune : ' '}\r\n                <button className=\"toggleButton\" onClick={this.toggleShowMorePrune}>\r\n                  {showMorePrune ? <span className=\"foldText\">&nbsp;fold</span> : <span className=\"foldText\">...unfold</span>}\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          &nbsp;&nbsp;\r\n        <div className=\"scrollable-item\">\r\n            <div style={{ width: \"40rem\", height: \"26rem\", backgroundColor: \"#F8F8F8\"}}>\r\n              <table\r\n                className={classNames(\"table\", \"table-hover\", {\r\n                \"table-fixed\": true //leftTrs.length > 7\r\n              })}\r\n              style={{\r\n                minWidth: \"40rem\"\r\n              }}>\r\n              <thead>\r\n                <tr>{ths.slice(1)}</tr>\r\n              </thead>\r\n              <tbody>{leftTrs}</tbody>\r\n              </table>\r\n            </div>\r\n            <div>\r\n              <h4  style={{'padding': '10px'}}>Table: The Candidate Cars</h4>\r\n              <p className=\"text-t-align\" style={{ width: \"40rem\" }}>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;This figure shows the Candidate cars. {showMoreLeft ? moreTextLeft : ' '}\r\n                <button className=\"toggleButton\" onClick={this.toggleShowMoreLeft}>\r\n                  {showMoreLeft ? <span className=\"foldText\">&nbsp;fold</span> : <span className=\"foldText\">...unfold</span>}\r\n                </button>\r\n              </p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToPropsStats = ({\r\n  labels,\r\n  candidates,\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask\r\n});\r\n\r\nexport default connect(mapStateToPropsStats)(Stats);\r\n","import React from \"react\";\r\nimport {\r\n    setActiveComponent,\r\n    setCandidates,\r\n    toggleMask,\r\n    changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates } from \"../utils\";\r\n\r\n\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass PhaseTwo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {};\r\n        this.inputs.name = React.createRef();\r\n        this.inputs.email = React.createRef();\r\n    }\r\n\r\n    handleStart = () => {\r\n        this.props.start();\r\n    };\r\n\r\n    handleModeChange = event => {\r\n        this.props.changeMode(event.target.value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center m-auto\" style={{ maxWidth: \"40rem\" }}>\r\n                <h1>Phase Two: Evaluation</h1>\r\n                <br />\r\n                <br />\r\n                <h4 >\r\n                    You just ended phase one. We are now going to phase two Evaluation. We will present you some cars and ask you\r\n                    whether you are interested in them. <br />\r\n                </h4>\r\n                <br />\r\n                <p className=\"lead text-muted\">\r\n                    Click the \"Continue\" button to continue. <br />\r\n                </p>\r\n                <div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ width: \"8rem\" }}\r\n                        onClick={this.handleStart}\r\n                    >\r\n                        Continue\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n    attributes,\r\n    mask,\r\n    points,\r\n    mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    start: () => {\r\n        dispatch(setActiveComponent(\"Result\"));\r\n    },\r\n    toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n    changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PhaseTwo);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { setActiveComponent, restart } from \"../actions\";\r\nimport Histogram from \"./Histogram\";\r\n\r\n// show the number of questions asked and the favourite car/remaining cars.\r\nfunction Result({candidates, leftPoints, attributes, mask, numLeftPoints, restart})\r\n{\r\n  let ths = [];\r\n  attributes.forEach(([attr, config]) => {\r\n    if (mask[attr]) {\r\n      const th = <th key={attr}>{attr}</th>;\r\n      ths.push(th);\r\n    }\r\n  });\r\n  const trs = leftPoints.map((idx, i) => (\r\n      <tr key={i} data-toggle=\"tooltip\">\r\n        {candidates[idx].map((x, j) => {return <td key={j}>{x}</td>})}\r\n      </tr>\r\n  ));\r\n  return (\r\n      <div className=\"justify-content-center\">\r\n        <h4>The Total No. of Questions Asked is: {numLeftPoints.length - 1}.</h4>\r\n        <h4>\r\n          {leftPoints.length === 1\r\n              ? \"Your Favourite Tuple is:\"\r\n              : `${leftPoints.length} Tuples Left in the Database:`}\r\n        </h4>\r\n        <table\r\n            className={classNames(\"table\", \"table-hover\", {\r\n              \"table-fixed\": trs.length > 7\r\n            })}\r\n            style={{\r\n              maxWidth: \"40rem\",\r\n              margin: \"auto\"\r\n            }}\r\n        >\r\n          <thead>\r\n          <tr>{ths}</tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n        <div className=\"d-flex justify-content-center my-3\">\r\n          <Histogram />\r\n        </div>\r\n        <div>\r\n            <button type=\"button\"\r\n                    className=\"modern-btn\"\r\n                    style={{ width: \"12rem\" }}\r\n                    onClick={restart}>\r\n            Return to Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({candidates, leftPoints, attributes, mask, numLeftPoints}) => ({\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  restart: () => {\r\n    dispatch(setActiveComponent(\"Welcome\"));\r\n    dispatch(restart());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Result);","import React from \"react\";\r\nimport { setActiveComponent,\r\n        setLeftPoints,\r\n        prunePoints,\r\n        restart } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadCarDataset } from \"../utils\";\r\nimport '../css/Tree.css';\r\nimport Histogram from \"./Histogram\"\r\nimport Stats from \"./Stats\";\r\nimport TitleTree from \"../imgs/TitleTree.png\";\r\n\r\nlet attrData = [];\r\nlet carLength = 5;\r\nlet numOfQuestion = 0;\r\nlet prevLeftPoints = [];\r\nlet targetLevel = 3;\r\n\r\nconst TreeNode = ({ node, nodes, level = 0 }) => {\r\n    const childNodes = nodes.filter(child => child.parentId === node.id);\r\n\r\n    return (\r\n        <li>\r\n            <a href=\"#\">{node.name}</a> \r\n            {childNodes.length > 0 && (\r\n                <ul>\r\n                    {childNodes.map(child => (\r\n                        <TreeNode node={child} nodes={nodes} level={level + 1} />\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </li> \r\n    );\r\n};\r\n\r\n\r\nfunction getAllPaths(tree, currentPath = []) {\r\n    if (!tree) return [];\r\n\r\n    currentPath.push(tree.name);\r\n    if (!tree.children || tree.children.length === 0) {\r\n        return [currentPath];\r\n    }\r\n\r\n    let paths = [];\r\n    for (let child of tree.children) {\r\n        paths = paths.concat(getAllPaths(child, [...currentPath]));\r\n    }\r\n\r\n    return paths;\r\n}\r\n\r\n\r\nfunction dfs(tree, path = [], targetLevel, currentLevel = 1) {\r\n    path.push(tree);\r\n\r\n    // 当前层是目标层，检查孩子的数量\r\n    if (currentLevel === targetLevel && tree.children && tree.children.length >= 2)\r\n    {\r\n        return path;\r\n    }\r\n\r\n    if (tree.children) {\r\n        for (let child of tree.children) {\r\n            const result = dfs(child, [...path], targetLevel, currentLevel + 1);\r\n            if (result) return result;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\nfunction findQuestion(tree)\r\n{\r\n    let result = null;\r\n    while (targetLevel > 0) {\r\n        result = dfs(tree, [], targetLevel);\r\n        if (result) break;\r\n        targetLevel--;\r\n    }\r\n\r\n    if(!result)\r\n    {\r\n        let pair1 = [];\r\n        let nodeIndex = tree;\r\n        pair1.push(nodeIndex);\r\n        while(nodeIndex.children)\r\n        {\r\n            pair1.push(nodeIndex.children[0]);\r\n            nodeIndex = nodeIndex.children[0];\r\n        }\r\n        return [pair1];\r\n    }\r\n\r\n    let pair1 = [...result];\r\n    let nodeIndex = result[result.length - 1].children[0];\r\n    pair1.push(nodeIndex);\r\n    while(nodeIndex.children)\r\n    {\r\n        pair1.push(nodeIndex.children[0]);\r\n        nodeIndex = nodeIndex.children[0];\r\n    }\r\n\r\n    let pair2 = [...result];\r\n    nodeIndex = result[result.length - 1].children[1];\r\n    pair2.push(nodeIndex);\r\n    while(nodeIndex.children)\r\n    {\r\n        pair2.push(nodeIndex.children[0]);\r\n        nodeIndex = nodeIndex.children[0];\r\n    }\r\n    return [pair1, pair2]\r\n}\r\n\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass SPTree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        /*const cars = [\r\n            [ \"suv\", \"diesel\", \"automatic\", \"car: 1\"],\r\n            [ \"limousine\", \"benzin\", \"manual\", \"car: 1\"],\r\n            [ \"suv\", \"diesel\", \"manual\", \"car: 1\"],\r\n            [ \"coupe\", \"benzin\", \"manual\", \"car: 1\"],\r\n            [ \"limousine\", \"benzin\", \"automatic\", \"car: 1\"],\r\n            [ \"limousine\", \"diesel\", \"automatic\", \"car: 1\"],\r\n            [ \"limousine\", \"diesel\", \"manual\", \"car: 1\"],\r\n            [ \"coupe\", \"benzin\", \"automatic\", \"car: 1\"],\r\n            [ \"suv\",\t\"benzin\", \"automatic\", \"car: 1\"],\r\n            [ \"coupe\", \"diesel\", \"manual\", \"car: 1\"],\r\n            [ \"limousine\", \"lpg\", \"automatic\", \"car: 1\"],\r\n            [ \"coupe\", \"diesel\", \"automatic\", \"car: 1\"],\r\n            [ \"suv\", \"benzin\", \"manual\", \"car: 1\"],\r\n            [ \"suv\", \"lpg\", \"automatic\", \"car: 1\"],\r\n            [ \"limousine\", \"lpg\", \"manual\", \"car: 1\"],\r\n            [ \"coupe\", \"lpg\", \"automatic\", \"car: 1\"],\r\n            [ \"suv\",\t\"lpg\", \"manual\", \"car: 1\"],\r\n            [ \"coupe\", \"lpg\", \"manual\", \"car: 1\"],\r\n            [ \"limousine\", \"cng\", \"automatic\", \"car: 1\"],\r\n            [ \"limousine\", \"cng\", \"manual\", \"car: 1\"]\r\n        ];\r\n         */\r\n\r\n\r\n        numOfQuestion = 0; targetLevel = 3; prevLeftPoints = [];\r\n        carLength = this.props.candidates[0].length;\r\n        attrData = [\r\n            { id: 1, name: \"Root\", parentId: null },\r\n            { id: 2, name: \"Type\", parentId: 1 },\r\n            { id: 3, name: \"Power\", parentId: 2 },\r\n            { id: 4, name: \"Transmission\", parentId: 3 },\r\n            { id: 5, name: \"Car\", parentId: 4 }\r\n        ];\r\n\r\n        let cars = [];\r\n        for(let i = 0; i < this.props.candidates.length; ++i)\r\n        {\r\n            const car = [];\r\n            for (let j = 0; j < this.props.candidates[i].length; ++j)\r\n                car.push(this.props.candidates[i][j]);\r\n            car.push(\"CarID: \" + (i+1));\r\n            cars.push(car);\r\n        }\r\n\r\n        let indexes = [];\r\n        for(let i = 0; i < this.props.candidates.length; ++i)\r\n        {\r\n            indexes.push(i);\r\n            prevLeftPoints.push(i);\r\n        }\r\n        this.props.setLeftPoints(indexes);\r\n\r\n        attrData = attrData.filter((attr, index) =>\r\n            index === 0 || index === attrData.length - 1 || this.props.mask[attr.name] === 1\r\n        );\r\n        attrData = attrData.map((attr, index) => {\r\n            return {\r\n                ...attr,\r\n                id: index + 1,\r\n                parentId: index === 0 ? attr.parentId : index\r\n            };\r\n        });\r\n\r\n        const tree = this.generateCarTree(cars);\r\n        const nodesData = this.treeToNodesData(tree);\r\n        const pair = findQuestion(tree);\r\n        this.state = {\r\n            cars: cars,\r\n            tree: tree,\r\n            nodesData: nodesData,\r\n            pair: pair\r\n        };\r\n    }\r\n\r\n    addCarToTree = (tree, car) => {\r\n        if (car.length === 1) \r\n            {\r\n                if (!tree.children) \r\n                {\r\n                    tree.children = [];\r\n                }\r\n                tree.children.push({ name: car[0] }); // This is a leaf node\r\n                return;\r\n            }\r\n            if (!tree.children) \r\n            {\r\n                tree.children = [];\r\n            }\r\n            let node = tree.children.find(child => child.name === car[0]);\r\n            if (!node) \r\n            {\r\n                node = { name: car[0] };\r\n                tree.children.push(node);\r\n            }\r\n            this.addCarToTree(node, car.slice(1));\r\n    };\r\n    generateCarTree = (cars) => {\r\n            const tree = { name: 'Root' };\r\n            for (const car of cars) \r\n            {\r\n                this.addCarToTree(tree, car);\r\n            }\r\n            return tree;\r\n    };\r\n    treeToNodesData = (tree) => {\r\n        const nodesData = [];\r\n        const queue = [{ node: tree, parentId: null }];\r\n        let currentId = 1;\r\n\r\n        while (queue.length > 0) {\r\n            const { node, parentId } = queue.shift();\r\n\r\n            nodesData.push({ id: currentId, name: node.name, parentId });\r\n\r\n            // If the current tree node has children, add them to the queue with current nodeId as their parentId.\r\n            if (node.children) {\r\n                for (const child of node.children) {\r\n                queue.push({ node: child, parentId: currentId });\r\n                }\r\n            }\r\n\r\n            currentId++;\r\n        }\r\n\r\n        return nodesData;\r\n    };\r\n\r\n    removeChildWithName = (node, nameToRemove, referenceName) => {\r\n        if (!node.children || node.children.length === 0) return node;\r\n\r\n        let namesFound = 0;\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            const child = node.children[i];\r\n            if (child.name === nameToRemove || child.name === referenceName) {\r\n                namesFound++;\r\n            }\r\n        }\r\n\r\n        let newChildren = [...node.children];\r\n        if (namesFound >= 2) {\r\n            newChildren = newChildren.filter(child => child.name !== nameToRemove);\r\n        }\r\n\r\n        return {\r\n            ...node,\r\n            children: newChildren.map(child => this.removeChildWithName(child, nameToRemove, referenceName))\r\n        };\r\n    }\r\n\r\n    choose = (choice) => {\r\n        numOfQuestion++;\r\n        let updatedTree;\r\n        if(choice === 0)\r\n            updatedTree = this.removeChildWithName(this.state.tree,\r\n                this.state.pair[1][targetLevel].name,\r\n                this.state.pair[0][targetLevel].name);\r\n        else if(choice === 1)\r\n            updatedTree = this.removeChildWithName(this.state.tree,\r\n                this.state.pair[0][targetLevel].name,\r\n                this.state.pair[1][targetLevel].name);\r\n\r\n        const updateNodesData = this.treeToNodesData(updatedTree);\r\n        const updatePair = findQuestion(updatedTree);\r\n        const TLeftTuples = getAllPaths(updatedTree);\r\n        let allLeftTuples = [];\r\n        for(let i = 0; i < TLeftTuples.length; ++i)\r\n            allLeftTuples.push(TLeftTuples[i].slice(1, TLeftTuples[i].length - 1));\r\n\r\n        console.log(allLeftTuples);\r\n        let indexes = [];\r\n        for (let tuple of allLeftTuples)\r\n        {\r\n            let tupleStr = tuple.join(',');\r\n            let foundIndex = this.props.candidates.findIndex(candidate => candidate.join(',') === tupleStr);\r\n            if (foundIndex !== -1) {\r\n                indexes.push(foundIndex);\r\n            }\r\n        }\r\n        console.log(prevLeftPoints);\r\n        console.log(indexes);\r\n        const pruneIndexes = prevLeftPoints.filter(point => !indexes.includes(point));\r\n        console.log(pruneIndexes);\r\n\r\n        prevLeftPoints = indexes;\r\n        this.props.prunePoints(pruneIndexes, numOfQuestion);\r\n\r\n        if(updatePair.length < 2)\r\n            this.props.showResult();\r\n\r\n        this.setState({\r\n            tree: updatedTree,\r\n            nodesData: updateNodesData,\r\n            pair: updatePair\r\n        }, () => {\r\n            console.log(this.state.tree);\r\n            console.log(this.state.nodesData);\r\n            console.log(this.state.pair);\r\n        });\r\n    }\r\n\r\n    startAgain = () =>\r\n    {\r\n        this.props.restartedAgain();\r\n        console.log(this.props.candidates);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const container = document.querySelector('.scrollable-container');\r\n        container.scrollLeft = (container.scrollWidth - container.clientWidth) / 2;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let ths = null, trs = null;\r\n        console.log(attrData);\r\n        if(this.state.pair.length > 1) {\r\n            ths = [<th key=\"Option No.\">Option</th>];\r\n            attrData.slice(0, carLength + 1).slice(1).forEach(attr => {\r\n                ths.push(<th key={attr.id}>{attr.name}</th>);\r\n            });\r\n            ths.push(<th key=\"chooseButton\"/>);\r\n\r\n            trs = this.state.pair.map((idx, i) => {\r\n                const tds = [<td key=\"Option No.\">{i+1}</td>];\r\n                idx.slice(0, carLength + 1).slice(1).forEach((x, j) => {\r\n                    tds.push(<td key={j}>{x.name}</td>);\r\n                });\r\n\r\n                tds.push(\r\n                    <td key=\"chooseButton\">\r\n                        <button type=\"button\"\r\n                                className=\"choose-btn\"\r\n                                style={{ width: \"6rem\", height: \"1.5rem\" }}\r\n                                onClick={() => this.choose(i)}>\r\n                            Choose\r\n                        </button>\r\n                    </td>\r\n                );\r\n\r\n                return (\r\n                    <tr key={i} data-toggle=\"tooltip\">\r\n                        {tds}\r\n                    </tr>\r\n                );\r\n            });\r\n        }\r\n        else {\r\n            ths = [<th key=\"Option No.\"></th>];\r\n            attrData.slice(0, carLength + 1).slice(1).forEach(attr => {\r\n                ths.push(<th key={attr.id}>{attr.name}</th>);\r\n            });\r\n\r\n            trs = this.state.pair.map((idx, i) => {\r\n                const tds = [<td key=\"Option No.\">{idx[carLength+1].name}</td>];\r\n                idx.slice(0, carLength + 1).slice(1).forEach((x, j) => {\r\n                    tds.push(<td key={j}>{x.name}</td>);\r\n                });\r\n\r\n                return (\r\n                    <tr key={i} data-toggle=\"tooltip\">\r\n                        {tds}\r\n                    </tr>\r\n                );\r\n            });\r\n        }\r\n\r\n        const rootNode = this.state.nodesData.find(node => node.parentId === null);\r\n        const rootAttr = attrData.find(node => node.parentId === null);\r\n\r\n        if(this.state.pair.length > 1)\r\n        {\r\n            return (\r\n                <div className=\"text-center m-auto\" style={{}}>\r\n                    <img alt='' src={TitleTree} style={{ 'width': '100%' }} />\r\n                    <p style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '10px',\r\n                        'fontSize': '16px', 'textAlign': 'left'}}>\r\n                        <span style={{ 'fontSize': '20px'}}><strong>Instruction:</strong></span> You will be asked with\r\n                        multiple questions so that we can learn your preference on cars, and then, find your favorite one. There are three parts in the following.\r\n                        <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<em>Part 1:</em> It interacts with you by asking questions.\r\n                        <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<em>Part 2:</em> It shows the middle results of algorithm SP-Tree.\r\n                        <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<em>Part 3:</em> It shows the statistic of the performance of algorithm SP-Tree.\r\n                    </p>\r\n                    <br/>\r\n                    <h4 style={{\r\n                        'background': 'linear-gradient(to right, #89bfe9, #5271a6)', // 添加从左到右的颜色渐变\r\n                        'borderRadius': '5px',\r\n                        'textAlign': 'left',\r\n                        'padding': '5px',\r\n                        'boxShadow': '3px 3px 5px rgba(0, 0, 0, 0.5)'  // 添加稍微的阴影效果\r\n                    }}>\r\n                        <strong><em>&nbsp;PART 1:</em></strong> Interaction\r\n                    </h4>\r\n                    <p style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '5px',\r\n                        'fontSize': '16px', 'textAlign': 'left'}}>\r\n                        <strong>&nbsp;NOTE: </strong>Choose the Car you favor more between the following options\r\n                    </p>\r\n                    <div className=\"row justify-content-center align-items-center\">\r\n                        <div className=\"col-md-8\">\r\n                            <table className=\"table table-hover text-center\">\r\n                                <thead>\r\n                                <tr>{ths}</tr>\r\n                                </thead>\r\n                                <tbody>{trs}</tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <h4 style={{\r\n                        'background': 'linear-gradient(to right, #89bfe9, #5271a6)', // 添加从左到右的颜色渐变\r\n                        'borderRadius': '5px',\r\n                        'textAlign': 'left',\r\n                        'padding': '5px',\r\n                        'boxShadow': '3px 3px 5px rgba(0, 0, 0, 0.5)'  // 添加稍微的阴影效果\r\n                    }}>\r\n                        <strong><em>&nbsp;PART 2:</em></strong> Visuals\r\n                    </h4>\r\n                    <p style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '10px',\r\n                        'fontSize': '16px', 'textAlign': 'left'}}>\r\n                        <strong>NOTE: </strong>Here shows the C-Tree. Each leaf contains a car and each internal\r\n                        node contains a categorical value. For each leaf, the shortest path from the root to it contains\r\n                        all the categorical values of the car in it.\r\n                    </p>\r\n                    <div class=\"trees-container\">\r\n                        <div class=\"tree1\">\r\n                            <div className=\"tree\">\r\n                                <ul>\r\n                                    <TreeNode node={rootAttr} nodes={attrData}/>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <div class=\"tree2\">\r\n                            <div className=\"tree\">\r\n                                <ul>\r\n                                    <TreeNode node={rootNode} nodes={this.state.nodesData}/>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"trees-container\">\r\n                        <div className=\"tree21\">\r\n                            <h4 style={{'width': '8.75rem', 'padding': '10px'}}>Attributes</h4>\r\n                        </div>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <div className=\"tree22\">\r\n                            <h4 style={{'width': '100%', 'padding': '10px'}}>The C-Tree</h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <h4 style={{\r\n                        'background': 'linear-gradient(to right, #89bfe9, #5271a6)', // 添加从左到右的颜色渐变\r\n                        'borderRadius': '5px',\r\n                        'textAlign': 'left',\r\n                        'padding': '5px',\r\n                        'boxShadow': '3px 3px 5px rgba(0, 0, 0, 0.5)'  // 添加稍微的阴影效果\r\n                    }}>\r\n                        <strong><em>&nbsp;PART 3:</em></strong> Statistics\r\n                    </h4>\r\n                    <p style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '10px',\r\n                        'fontSize': '16px', 'textAlign': 'left'}}>\r\n                        <strong>NOTE: </strong>Here shows one figure and two tables that demonstrate the Candidate Cars\r\n                        and the Cars pruned during the interaction process.\r\n                    </p>\r\n\r\n                    <div className=\"scrollable-container\">\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <div className=\"row justify-content-center\">\r\n                            <Histogram />\r\n                        </div>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <div className=\"row justify-content-center\">\r\n                            <Stats />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <div>\r\n                        <button type=\"button\"\r\n                                className=\"modern-btn\"\r\n                                style={{ width: \"12rem\" }}\r\n                                onClick={this.startAgain}>\r\n                            Return to Home\r\n                        </button>\r\n                    </div>\r\n                    <br />\r\n\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return (\r\n                <div className=\"text-center m-auto\" style={{}}>\r\n                    <h1>Algorithm: SP-Tree</h1>\r\n                    <br/>\r\n                    <br/>\r\n\r\n                    <h4>\r\n                        Based on your selection, the following is our recommendation.\r\n                    </h4>\r\n                    <div className=\"row justify-content-center align-items-center\">\r\n                        <div className=\"col-md-8\">\r\n                            <table className=\"table table-hover text-center\">\r\n                                <thead>\r\n                                <tr>{ths}</tr>\r\n                                </thead>\r\n                                <tbody>{trs}</tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"trees-container\">\r\n                        <div class=\"tree1\">\r\n                            <div className=\"tree\">\r\n                                <ul>\r\n                                    <TreeNode node={rootAttr} nodes={attrData}/>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"tree1\">\r\n                            <div className=\"tree\">\r\n                                <ul>\r\n                                    <TreeNode node={rootNode} nodes={this.state.nodesData}/>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ candidates, attributes, mask, points, numLeftPoints, leftPoints }) => ({\r\n    attributes,\r\n    mask,\r\n    points,\r\n    candidates,\r\n    numLeftPoints,\r\n    leftPoints\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showResult: () => {\r\n        dispatch(setActiveComponent(\"Result\"));\r\n    },\r\n    setLeftPoints: indices => {\r\n        dispatch(setLeftPoints(indices));\r\n    },\r\n    restartedAgain: () => {\r\n        dispatch(setActiveComponent(\"Welcome\"));\r\n        dispatch(restart());\r\n        console.log(\"start\");\r\n    },\r\n    prunePoints: (indices, step) => {\r\n        dispatch(prunePoints(indices, step));\r\n    }\r\n\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SPTree);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FlexibleXYPlot,\n  XAxis,\n  YAxis,\n  Hint,\n  VerticalBarSeries,\n  ChartLabel\n} from \"react-vis\";\nimport \"../css/textStyle.css\"\n\n\n// a histogram to show the number of cars left vs the number of questions asked.\nclass HistogramForR extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hintValue: null,\n      showMore: false\n    };\n  }\n\n  toggleShowMore = () => {\n    this.setState(prevState => ({\n      showMore: !prevState.showMore\n    }));\n  };\n\n  _onMouseLeave = () => {\n    this.setState({\n      hintValue: null\n    });\n  };\n\n  _onNearestX = (value, { index }) => {\n    this.setState({\n      hintValue: this.props.data[index]\n    });\n  };\n\n  render() {\n    const { showMore } = this.state;\n    const moreText = \" As you answer questions, we can learn the importance of each numerical attributes of \" +\n        \"cars to you. Since the numerical utility range approximates the ranges of those importance, \" +\n        \"the more questions you answer, the more precise approximation reaches, leading to a smaller \" +\n        \"numerical utility range and a reduced Diameter.\";\n\n\n\n    return (\n      <div>\n        <div style={{ width: \"30rem\", height: \"26rem\"}}>\n          <FlexibleXYPlot onMouseLeave={this._onMouseLeave}\n                          style={{ background: '#333' }}\n                          margin={{ left: 75, right: 20, top: 20, bottom: 60 }}>\n            <XAxis\n              tickValues={this.props.data.map((val, idx) => idx)}\n              tickFormat={value => value.toString()}\n              style={{\n                ticks: { fill: \"white\" },\n                text: { stroke: 'none', fill: 'white', fontWeight: 600, fontSize: '14px'}\n              }}\n            />\n            <YAxis\n              style={{\n                ticks: { fill: \"white\" },\n                text: { stroke: 'none', fill: 'white', fontWeight: 600, fontSize: '14px' }\n              }}\n            />\n            <ChartLabel\n                text=\"Number of Questions Answered\"\n                includeMargin={false}\n                xPercent={0.2}\n                yPercent={1.2}\n                style={{\n                  style: { fill: \"white\", fontSize: '14px' }\n                }}\n            />\n            <ChartLabel\n                text=\"Diameter of Numerical Utility Range\"\n                includeMargin={false}\n                xPercent={-0.13}\n                yPercent={0.3}\n                style={{\n                  transform: \"rotate(-90)\",\n                  textAnchor: \"end\",\n                  style: { fill: \"white\", fontSize: '14px' }\n                }}\n            />\n            <VerticalBarSeries\n              color=\"rgb(77, 182, 172)\"\n              onNearestX={this._onNearestX}\n              data={this.props.data}\n              animation\n              style={{\n                boxShadow: '2px 2px 4px rgba(0,0,0,0.5)', borderRadius: '5px 5px 0 0'\n              }}\n            />\n            {this.state.hintValue && (\n                <Hint value={this.state.hintValue}>\n                  <div style={{ background: 'rgba(0, 0, 0, 0.8)', padding: '5px', borderRadius: '5px', color: 'white' }}> {/* 添加背景，圆角和阴影 */}\n                    Number of Questions Answered: {this.state.hintValue.x}\n                    <br />\n                    Diameter of Numerical Utility Range: {this.state.hintValue.y}\n                  </div>\n                </Hint>\n            )}\n          </FlexibleXYPlot>\n        </div>\n        <div style={{ width: \"30rem\" }}>\n          <h4 style={{'padding': '10px'}}>Figure: Diameter -- Questions</h4>\n          {/*Essentially, this Diameter represents the maximum Euclidean distance\n          between any two points in the numerical utility range.*/}\n          <div>\n            <p className=\"text-t-align\">\n              &nbsp;&nbsp;&nbsp;&nbsp;This figure shows the Diameter of numerical utility range with the number of Questions you answer.\n              {showMore ? moreText : ' '}\n              <button className=\"toggleButton\" onClick={this.toggleShowMore}>\n                {showMore ? <span className=\"foldText\">&nbsp;fold</span> : <span className=\"foldText\">...unfold</span>}\n              </button>\n            </p>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\nconst mapStateToProps = ({ numLeftPoints }) => ({\n  data: numLeftPoints.map((num, i) => ({ x: i, y: num }))\n});\n\n */\nconst mapStateToProps = ({ radius }) => {\n  let mappedData = radius.map((num, i) => ({ x: i, y: num }));\n\n  console.log(\"mappedData\" + mappedData);\n  if (mappedData.length === 1) {\n    mappedData.push({ x: 0.01, y: 0 });\n    mappedData.push({ x: -0.01, y: 0 });\n  }\n\n  return {\n    data: mappedData\n  };\n};\n\nexport default connect(mapStateToProps)(HistogramForR);\n","import React from \"react\";\r\nimport {\r\n    setActiveComponent,\r\n    setCandidates,\r\n    toggleMask,\r\n    changeMode,\r\n    setLeftPoints,\r\n    prunePoints,\r\n    restart,\r\n    updateConvexHull,\r\n    setRadius\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport * as d3 from 'd3';\r\nimport io from 'socket.io-client';\r\nimport '../css/Graph.css'\r\nimport { normalized } from \"../utils\";\r\nimport Histogram from \"./Histogram\";\r\nimport HistogramForR from \"./HistogramForR\";\r\nimport PreferenceSpace from \"./PreferenceSpace\";\r\nimport Stats from \"./Stats\";\r\nimport \"../css/textStyle.css\"\r\nimport TitleGraph from \"../imgs/TitleGraph.png\";\r\n\r\nlet dcat = 3, dnum = 4;\r\nlet attrData = [];\r\nlet numOfQuestion = 0;\r\nlet prevLeftPoints = [];\r\n\r\n\r\nclass GEGraph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = React.createRef();\r\n\r\n        dcat = Object.values(this.props.mask).slice(0, 3).filter((i) => i === 1).length;\r\n        dnum = Object.values(this.props.mask).slice(3).filter((i) => i === 1).length;\r\n        numOfQuestion = 0; prevLeftPoints = [];\r\n        attrData = [\r\n            { id: 1, name: \"Type\"},\r\n            { id: 2, name: \"Power\"},\r\n            { id: 3, name: \"Transmission\"},\r\n            { id: 4, name: \"Price (USD)\"},\r\n            { id: 5, name: \"Year\"},\r\n            { id: 6, name: \"Power (HP)\"},\r\n            { id: 7, name: \"Used KM\"}\r\n        ];\r\n        attrData = attrData.filter((attr, index) => this.props.mask[attr.name] === 1);\r\n\r\n        let indexes = [];\r\n        for(let i = 0; i < this.props.candidates.length; ++i)\r\n        {\r\n            indexes.push(i);\r\n            prevLeftPoints.push(i);\r\n        }\r\n        this.props.setLeftPoints(indexes);\r\n        this.props.setRadius([1.414213]);\r\n\r\n        this.state = {\r\n            pair: [],\r\n            nodeVec: [],\r\n            upper: [],\r\n            lower: [],\r\n            relationVec: [],\r\n            extVec: [],\r\n            numUtilityVec: [],\r\n            showMoreGraph: false,\r\n            showMoreRange: false\r\n        };\r\n\r\n        // Initialize socket connection\r\n        this.socket = io.connect('http://39.108.168.228:5000');\r\n\r\n        // Set up event listeners for the socket\r\n        this.socket.on('initialized', (data) => {\r\n            this.setState({\r\n                pair: [data.pair1, data.pair2],\r\n                nodeVec: data.node_vectors,\r\n                upper: data.node_upperBound,\r\n                lower: data.node_lowerBound,\r\n                relationVec: data.relation_vectors,\r\n                extVec: data.ext_vectors\r\n            });\r\n            this.props.updateConvexHull(this.state.extVec);\r\n            this.setUtilityVec(this.state.extVec);\r\n            this.drawGraph();\r\n        });\r\n\r\n        this.socket.on('send_integer', (data) => {\r\n            this.setState({\r\n                pair: [data.pair1, data.pair2],\r\n                nodeVec: data.node_vectors,\r\n                upper: data.node_upperBound,\r\n                lower: data.node_lowerBound,\r\n                relationVec: data.relation_vectors,\r\n                extVec: data.ext_vectors\r\n            });\r\n            this.props.updateConvexHull(this.state.extVec);\r\n            console.log(this.state.extVec);\r\n            let raArry = this.props.radius;\r\n            raArry.push(this.findMaxDistance(this.state.extVec).toFixed(6));\r\n            this.props.setRadius(raArry);\r\n            console.log(this.props.radius);\r\n            this.setUtilityVec(this.state.extVec);\r\n            let indexes = data.leftpoints;\r\n            const pruneIndexes = prevLeftPoints.filter(point => !indexes.includes(point));\r\n            prevLeftPoints = indexes;\r\n            this.props.prunePoints(pruneIndexes, numOfQuestion);\r\n            if(data.pair1 === data.pair2)\r\n            {\r\n                this.socket.disconnect();\r\n                this.props.showResult();\r\n            }\r\n            else\r\n                this.drawGraph();\r\n        });\r\n\r\n        // Example: initialize immediately after setting up the socket\r\n        this.initialize();\r\n\r\n    }\r\n\r\n\r\n    toggleShowMoreGraph = () => {\r\n        this.setState(prevState => ({\r\n            showMoreGraph: !prevState.showMoreGraph\r\n        }));\r\n    };\r\n\r\n    toggleShowMoreRange = () => {\r\n        this.setState(prevState => ({\r\n            showMoreRange: !prevState.showMoreRange\r\n        }));\r\n    };\r\n\r\n    calculateDistance(point1, point2) {\r\n        return Math.sqrt(Math.pow(point2[0] - point1[0], 2) + Math.pow(point2[1] - point1[1], 2));\r\n    }\r\n\r\n    findMaxDistance(points) {\r\n        let maxDistance = 0;\r\n\r\n        for (let i = 0; i < points.length; i++) {\r\n            for (let j = i + 1; j < points.length; j++) {\r\n                const distance = this.calculateDistance(points[i], points[j]);\r\n                maxDistance = Math.max(maxDistance, distance);\r\n            }\r\n        }\r\n        return maxDistance;\r\n    }\r\n\r\n    // Emit 'initialize' event to the server\r\n    initialize() {\r\n        let smallerBetter = [];\r\n        this.props.attributes.slice(3).map(([attr, config]) => {\r\n            if(this.props.mask[attr])\r\n                smallerBetter.push(config.smallerBetter ? 1 : 0);\r\n        })\r\n        console.log(smallerBetter);\r\n        const normCandidate  = normalized(this.props.candidates, smallerBetter);\r\n        console.log(normCandidate);\r\n        this.socket.emit('initialize', {\r\n            array: normCandidate,\r\n            int1: this.props.candidates.length,\r\n            int2: dcat,\r\n            int3: dnum\r\n        });\r\n    }\r\n\r\n\r\n    startAgain = () =>\r\n    {\r\n        this.socket.disconnect();\r\n        this.props.restartedAgain();\r\n    }\r\n\r\n    drawGraph() {\r\n        const svg = d3.select(this.ref.current);\r\n\r\n        svg.selectAll(\"*\").remove();\r\n        console.log(this.state.relationVec);\r\n\r\n        const x = this.state.nodeVec.length;  // large nodes count\r\n        const radius = 250; // radius of the circle on which nodes are positioned\r\n        const center = { x: 300, y: 270 };  // center of the SVG and circle\r\n\r\n        const largeNodeWidth = 30;\r\n        const largeNodeHeight = 30;\r\n\r\n        console.log(this.state.upper);\r\n        console.log(this.state.lower);\r\n\r\n\r\n        let upperForRec = [], lowerForRec = [];\r\n        for(let i = 0; i < this.state.upper.length; ++i) //for each node\r\n        {\r\n            let bound = 999999;\r\n            for(let j = 0; j < this.state.upper[i].length; ++j)//for each bound\r\n            {\r\n                //calculate the bound\r\n                let bb = 0;\r\n                for(let d = 0; d < this.state.numUtilityVec.length; ++d)\r\n                    bb += this.state.numUtilityVec[d] * this.state.upper[i][j][d];\r\n                if(bb < bound)\r\n                    bound = bb.toFixed(6);\r\n            }\r\n            upperForRec.push(bound);\r\n        }\r\n        for(let i = 0; i < this.state.lower.length; ++i) //for each node\r\n        {\r\n            let bound = -999999;\r\n            for(let j = 0; j < this.state.lower[i].length; ++j)//for each bound\r\n            {\r\n                //calculate the bound\r\n                let bb = 0;\r\n                for(let d = 0; d < this.state.numUtilityVec.length; ++d)\r\n                    bb += this.state.numUtilityVec[d] * this.state.lower[i][j][d];\r\n                if(bb > bound)\r\n                    bound = bb.toFixed(6);\r\n            }\r\n            lowerForRec.push(bound);\r\n        }\r\n\r\n        const getCirclePosition = (center, angle, r) => {\r\n            return {\r\n                x: center.x + r * Math.cos(angle),\r\n                y: center.y + r * Math.sin(angle)\r\n            };\r\n        }\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", 950)  // Adjust x value to fit your SVG width.\r\n            .attr(\"y\", 150)   // Adjust y value to fit your SVG height.\r\n            .attr(\"text-anchor\", \"end\")  // Right align text.\r\n            .style(\"font-size\", \"15px\")  // Font size of the text.\r\n            .text(\"Put your mouse on the node to see its information.\");\r\n\r\n        // Draw a rectangle in the center of the SVG.\r\n        const rectangleWidth = 270;\r\n        const rectangleHeight = 180;\r\n        svg.append(\"rect\")\r\n            .attr(\"x\", 780 - rectangleWidth/2)\r\n            .attr(\"y\", center.y - rectangleHeight/2 + 10)\r\n            .attr(\"width\", rectangleWidth)\r\n            .attr(\"height\", rectangleHeight)\r\n            .attr(\"fill\", \"#FEFFFE\")\r\n            .attr(\"stroke\", \"#ccc\")\r\n            .attr(\"stroke-width\", 2);\r\n\r\n        // Add \"Node Information\" text in the upper half of the rectangle.\r\n        svg.append(\"text\")\r\n            .attr(\"x\", 780)\r\n            .attr(\"y\", center.y - rectangleHeight/4)  // Adjust y value to place the text in the upper half of the rectangle.\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", \"20px\")\r\n            .text(\"Node Information\");\r\n\r\n        const largeRectNodes = Array.from({ length: x }).map((_, i) => {\r\n            const angle = (2 * Math.PI / x) * i;  // equally spaced on the circle\r\n            const position = getCirclePosition(center, angle, radius);\r\n\r\n            const firstHalf = this.state.nodeVec[i].slice(0, this.state.nodeVec[i].length/2).join(\", \");\r\n            const secondHalf = this.state.nodeVec[i].slice(this.state.nodeVec[i].length/2).join(\", \");\r\n            let upshow, lwshow;\r\n            if(upperForRec[i] === 999999) upshow = \"unknown\";\r\n            else upshow = upperForRec[i];\r\n            if(lowerForRec[i] === -999999) lwshow = \"unknown\";\r\n            else lwshow = lowerForRec[i];\r\n            return {\r\n                x: position.x - largeNodeWidth / 2,  // center the rectangle on the calculated position\r\n                y: position.y - largeNodeHeight / 2,\r\n                label1: firstHalf,\r\n                label2: secondHalf,\r\n                up: upshow,\r\n                lw: lwshow\r\n            };\r\n        });\r\n\r\n        const getLineEndpoints = (node1, node2, width, height) => {\r\n            return {\r\n                x1: node1.x + width / 2,\r\n                y1: node1.y + height / 2,\r\n                x2: node2.x + width / 2,\r\n                y2: node2.y + height / 2\r\n            };\r\n        };\r\n\r\n        this.state.relationVec.forEach((relation) => {\r\n            const points = getLineEndpoints(largeRectNodes[relation[0]], largeRectNodes[relation[1]], largeNodeWidth, largeNodeHeight);\r\n            svg.append(\"line\")\r\n                .attr(\"x1\", points.x1)\r\n                .attr(\"y1\", points.y1)\r\n                .attr(\"x2\", points.x2)\r\n                .attr(\"y2\", points.y2)\r\n                .attr(\"stroke\", \"#ccc\")\r\n                .attr(\"stroke-width\", 1);\r\n        });\r\n\r\n        const showLabel = (d, show) => {\r\n            if (show) {\r\n                const textElement = svg.append(\"text\")\r\n                    .attr(\"class\", \"tempLabel\")\r\n                    .attr(\"x\", 660)\r\n                    .attr(\"y\", 110)\r\n                    .attr(\"text-anchor\", \"left\")\r\n                    .style(\"font-size\", \"15px\")\r\n\r\n                // First line\r\n                textElement.append(\"tspan\")\r\n                    .text(\"CV1 = {\" + d.label2 + \"}\")\r\n                    .attr(\"x\", 660)  // reset x to keep text centered\r\n                    .attr(\"dy\", \"10em\");  // use 'dy' to adjust the y position for each line\r\n\r\n                // Second line\r\n                textElement.append(\"tspan\")\r\n                    .text(\"CV2 = {\" + d.label1 + \"}\")\r\n                    .attr(\"x\", 660)  // reset x to keep text centered\r\n                    .attr(\"dy\", \"1.2em\");  // use 'dy' to adjust the y position for each line\r\n\r\n                // Third line\r\n                textElement.append(\"tspan\")\r\n                    .text(\"S1: Score(\" + d.label2 + \")\")\r\n                    .attr(\"x\", 660)  // reset x to keep text centered\r\n                    .attr(\"dy\", \"1.2em\");  // use 'dy' to adjust the y position for each line\r\n\r\n                // Fourth line\r\n                textElement.append(\"tspan\")\r\n                    .text(\"S2: Score(\" + d.label1 + \")\")\r\n                    .attr(\"x\", 660)  // reset x to keep text centered\r\n                    .attr(\"dy\", \"1.2em\");  // use 'dy' to adjust the y position for each line\r\n\r\n                // Fifth line\r\n                textElement.append(\"tspan\")\r\n                    .text(\"Upper Bound of S1 - S2: \" + d.up)\r\n                    .attr(\"x\", 660)\r\n                    .attr(\"dy\", \"1.2em\");  // '1.2em' will position this line 1.2 times the font-size below the previous line\r\n\r\n                // Sixth line\r\n                textElement.append(\"tspan\")\r\n                    .text(\"Lower Bound of S1 - S2: \" + d.lw)\r\n                    .attr(\"x\", 660)\r\n                    .attr(\"dy\", \"1.2em\");  // '1.2em' will position this line 1.2 times the font-size below the previous line\r\n\r\n            } else {\r\n                svg.selectAll(\".tempLabel, .tempLabelBg\").remove();\r\n            }\r\n        }\r\n\r\n        const relationVecTP = this.state.relationVec;\r\n\r\n        let largeRects = [];\r\n        largeRectNodes.forEach((node, idx) => {\r\n            const largeRect = svg.append(\"rect\")\r\n                .attr(\"x\", node.x)\r\n                .attr(\"y\", node.y)\r\n                .attr(\"width\", largeNodeWidth)\r\n                .attr(\"height\", largeNodeHeight)\r\n                .attr(\"data-id\", idx)\r\n                .attr(\"fill\", \"#FEFFFE\")\r\n                .attr(\"stroke\", \"#ccc\")\r\n                .attr(\"stroke-width\", 2)\r\n                .on(\"mouseover\", function () {\r\n                    d3.select(this).attr(\"fill\", \"#C8D0F8\");\r\n                    showLabel(node, true);\r\n\r\n                    // Highlight connected nodes\r\n                    const connectedNodes = relationVecTP\r\n                        .filter(rel => rel.includes(idx))\r\n                        .flat()\r\n                        .filter(i => i !== idx);\r\n\r\n                    connectedNodes.forEach(j => {\r\n                        largeRects[j].attr(\"fill\", \"#c8e4f8\");\r\n                    });\r\n\r\n                    // Highlight connected lines\r\n                    relationVecTP.forEach((relation) => {\r\n                        if (relation.includes(idx)) {\r\n                            const points = getLineEndpoints(largeRectNodes[relation[0]], largeRectNodes[relation[1]], largeNodeWidth, largeNodeHeight);\r\n                            svg.select(`line[x1=\"${points.x1}\"][y1=\"${points.y1}\"][x2=\"${points.x2}\"][y2=\"${points.y2}\"]`)\r\n                                .attr(\"stroke\", \"#94a0b4\")\r\n                                .attr(\"stroke-width\", 1.5);\r\n                        }\r\n                    });\r\n                })\r\n                .on(\"mouseout\", function () {\r\n                    d3.select(this).attr(\"fill\", \"#FEFFFE\");\r\n                    showLabel(node, false);\r\n\r\n                    // Reset color of connected nodes\r\n                    const connectedNodes = relationVecTP\r\n                        .filter(rel => rel.includes(idx))\r\n                        .flat()\r\n                        .filter(i => i !== idx);\r\n\r\n                    connectedNodes.forEach(j => {\r\n                        largeRects[j].attr(\"fill\", \"#FEFFFE\");\r\n                    });\r\n\r\n                    // Reset color of connected lines\r\n                    relationVecTP.forEach((relation) => {\r\n                        if (relation.includes(idx)) {\r\n                            const points = getLineEndpoints(largeRectNodes[relation[0]], largeRectNodes[relation[1]], largeNodeWidth, largeNodeHeight);\r\n                            svg.select(`line[x1=\"${points.x1}\"][y1=\"${points.y1}\"][x2=\"${points.x2}\"][y2=\"${points.y2}\"]`)\r\n                                .attr(\"stroke\", \"#ccc\")\r\n                                .attr(\"stroke-width\", 1);\r\n                        }\r\n                    });\r\n\r\n                });\r\n            largeRects.push(largeRect);\r\n        });\r\n\r\n        const bbox = svg.node().getBBox();\r\n        svg.attr(\"viewBox\", \"0 0 1000 560\");\r\n        //svg.attr(\"viewBox\", `${bbox.x - 50} ${bbox.y - 50} ${bbox.width + 100} ${bbox.height + 100}`);\r\n    }\r\n\r\n    choose = (choice) => {\r\n        numOfQuestion++;\r\n        this.socket.emit('send_integer', {\r\n            integer: choice\r\n        });\r\n    }\r\n\r\n    generateRandomNumbers = (x) => {\r\n        let numbers = [0];\r\n\r\n        // Generate x - 1 random numbers\r\n        for (let i = 0; i < x - 1; i++) {\r\n            numbers.push(Math.random());\r\n        }\r\n\r\n        numbers.push(1);\r\n        numbers.sort((a, b) => a - b);\r\n\r\n        let result = [];\r\n\r\n        for (let i = 1; i < numbers.length; i++) {\r\n            result.push(numbers[i] - numbers[i - 1]);\r\n        }\r\n\r\n        return result;\r\n    }\r\n    setUtilityVec = (Vec) =>\r\n    {\r\n        const coff = this.generateRandomNumbers(Vec.length);\r\n        let resultU = [];\r\n        let sum = 0\r\n        for(let i = 0; i < dnum - 1; ++i)\r\n        {\r\n            let coord = 0\r\n            for(let j = 0; j < Vec.length; ++j)\r\n                coord += coff[j] * Vec[j][i];\r\n            sum += coord;\r\n            resultU.push(coord);\r\n        }\r\n        resultU.push(1 - sum);\r\n        this.setState({\r\n            numUtilityVec: resultU\r\n        });\r\n    }\r\n\r\n    regenerateUtilityVec = () =>\r\n    {\r\n        this.setUtilityVec(this.state.extVec);\r\n        this.drawGraph();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const container = document.querySelector('.scrollable-container');\r\n        container.scrollLeft = (container.scrollWidth - container.clientWidth) / 2;\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let ths = null, trs = null;\r\n        ths = [<th key=\"Option No.\">Option</th>];\r\n        attrData.forEach(attr => {\r\n            ths.push(<th key={attr.id}>{attr.name}</th>);\r\n        });\r\n        ths.push(<th key=\"chooseButton\"/>);\r\n\r\n        trs = this.state.pair.map((idx, i) => {\r\n                const tds = [<td key=\"Option No.\">{i + 1}</td>];\r\n                this.props.candidates[idx].forEach((x, j) => {\r\n                    tds.push(<td key={j}>{x}</td>);\r\n                });\r\n\r\n                tds.push(\r\n                    <td key=\"chooseButton\">\r\n                        <button type=\"button\"\r\n                                className=\"choose-btn\"\r\n                                style={{ width: \"6rem\", height: \"1.5rem\" }}\r\n                                onClick={() => this.choose(i)}>\r\n                            Choose\r\n                        </button>\r\n                    </td>\r\n                );\r\n\r\n                return (\r\n                    <tr key={i} data-toggle=\"tooltip\">\r\n                        {tds}\r\n                    </tr>\r\n                );\r\n            }\r\n        );\r\n\r\n        let vecForTable = [];\r\n        if(this.state.numUtilityVec.length > 0) {\r\n            const vvvvv = this.state.numUtilityVec;\r\n            console.log(vvvvv);\r\n            attrData.slice(dcat).map((attr, i) => {\r\n                const ele = vvvvv[i].toFixed(2);\r\n                vecForTable.push(\r\n                    <tr>\r\n                        <th key={attr.id}>{attr.name}</th>\r\n                        <th key={attr.id}>{ele}</th>\r\n                    </tr>\r\n                );\r\n            });\r\n        }\r\n\r\n        const { showMoreGraph, showMoreRange } = this.state;\r\n\r\n        const moreTextGraph = \"The following shows a node information template. \\n\" +\r\n            \"Suppose that Car 1 has value 'C1' on attribute A and value 'D1' on attribute B. \\n\" +\r\n            \"Suppose that Car 2 has value 'C2' on attribute A and value 'D2' on attribute B. \\n\" +\r\n            \"We define: \\n\" +\r\n            \"CV1 = {C1, D1}. \\n\" +\r\n            \"CV2 = {C2, D2}. \\n\" +\r\n            \"S1 = the score of value 'C1' on attribute A + the score of value 'D1' on attribute B, i.e., Score(CV1). \\n\"+\r\n            \"S2 = the score of value 'C2' on attribute A + the score of value 'D2' on attribute B, i.e., Score(CV2). \\n\\n\"+\r\n            \"S1 - S2 indicates to what extend you prefer CV1 to CV2. \\n\" +\r\n            \"If S1 - S2 is positive, you prefer CV1 to CV2 (a larger value means larger extend). \\n\" +\r\n            \"If S1 - S2 is negative, you prefer CV1 to CV2 (a smaller value means smaller extend).\";\r\n\r\n\r\n\r\n        const moreTextRange = \"The weights in the utility vector indicate the importance of numerical attributes to you.\";\r\n\r\n        return (\r\n            <div className=\"text-center m-auto\" style={{}}>\r\n                <img alt='' src={TitleGraph} style={{ 'width': '100%' }} />\r\n                <p style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '10px',\r\n                    'fontSize': '16px', 'textAlign': 'left'}}>\r\n                    <span style={{ 'fontSize': '20px'}}><strong>Instruction:</strong></span> You will be asked with\r\n                    multiple questions so that we can learn your preference on cars, and then, find your favorite one. There are three parts in the following.\r\n                    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<em>Part 1:</em> It interacts with you by asking questions.\r\n                    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<em>Part 2:</em> It shows the middle results of algorithm GE-Graph.\r\n                    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<em>Part 3:</em> It shows the statistic of the performance of algorithm GE-Graph.\r\n                </p>\r\n                <br/>\r\n                <h4 style={{\r\n                    'background': 'linear-gradient(to right, #89bfe9, #5271a6)', // 添加从左到右的颜色渐变\r\n                    'borderRadius': '5px',\r\n                    'textAlign': 'left',\r\n                    'padding': '5px',\r\n                    'boxShadow': '3px 3px 5px rgba(0, 0, 0, 0.5)'  // 添加稍微的阴影效果\r\n                }}>\r\n                    <strong><em>&nbsp;PART 1:</em></strong> Interaction\r\n                </h4>\r\n                <p style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '5px',\r\n                    'fontSize': '16px', 'textAlign': 'left'}}>\r\n                    <strong>&nbsp;NOTE: </strong>Choose the Car you favor more between the following options\r\n                </p>\r\n                <div className=\"row justify-content-center align-items-center\">\r\n                    <div className=\"col-md-8\">\r\n                        <table className=\"table table-hover text-center\">\r\n                            <thead>\r\n                            <tr>{ths}</tr>\r\n                            </thead>\r\n                            <tbody>{trs}</tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n                <h4 style={{\r\n                    'background': 'linear-gradient(to right, #89bfe9, #5271a6)', // 添加从左到右的颜色渐变\r\n                    'borderRadius': '5px',\r\n                    'textAlign': 'left',\r\n                    'padding': '5px',\r\n                    'boxShadow': '3px 3px 5px rgba(0, 0, 0, 0.5)'  // 添加稍微的阴影效果\r\n                }}>\r\n                    <strong><em>&nbsp;PART 2:</em></strong> Visuals\r\n                </h4>\r\n                <p style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '10px',\r\n                    'fontSize': '16px', 'textAlign': 'left'}}>\r\n                    <strong>NOTE: </strong>Here shows the relational graph and the numerical utility range. The relational\r\n                    graph stores the information of your preference on the categorical attributes. The numerical utility range\r\n                    stores the information of your preference on the numerical attributes.\r\n                </p>\r\n\r\n\r\n                <div className=\"justify-content-center\">\r\n                    <div style={{width: '100%', height: '500px', overflow: 'auto', background: '#F6F6F6'}}>\r\n                        <svg ref={this.ref}></svg>\r\n                    </div>\r\n                    <div>\r\n                    <h4 style={{'padding': '10px'}}>Relational Graph</h4>\r\n                    <p className=\"preserve-newlines\">\r\n                        Each node in the relational graph stores your preference on some\r\n                        categorical values. {showMoreGraph ? moreTextGraph : ' '}\r\n                        <button className=\"toggleButton\" onClick={this.toggleShowMoreGraph}>\r\n                            {showMoreGraph ? <span className=\"foldText\">&nbsp;fold</span> : <span className=\"foldText\">...unfold</span>}\r\n                        </button>\r\n                    </p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"scrollable2-container\">\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <div className=\"row justify-content-center\" style={{width: '40rem' }}>\r\n                        <PreferenceSpace />\r\n                        <div>\r\n                        <h4 style={{'padding': '10px'}}>Numerical Utility Range</h4>\r\n                        <p className=\"text-t-align\">\r\n                            &nbsp;&nbsp;&nbsp;&nbsp; The numerical utility range is the possible domain of your utility\r\n                            vector. {showMoreRange ? moreTextRange: ' '}\r\n                            <button className=\"toggleButton\" onClick={this.toggleShowMoreRange}>\r\n                                {showMoreRange ? <span className=\"foldText\">&nbsp;fold</span> : <span className=\"foldText\">...unfold</span>}\r\n                            </button>\r\n                        </p>\r\n                        </div>\r\n                    </div>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <div className=\"row justify-content-center\">\r\n                        <div style={{ width: \"22rem\" }}>\r\n                            <div>\r\n                                <h4><strong>Numerical Utility Vector</strong></h4>\r\n                            </div>\r\n                            <div>\r\n                                <h4 style={{\r\n                                    fontFamily: \"'Arial', sans-serif\",  // Use any preferred font.\r\n                                    color: '#0cc0df',  // Text color.\r\n                                    backgroundColor: '#f5f5f5',  // Background color.\r\n                                    padding: '10px',  // Padding around text.\r\n                                    border: '2px solid #0cc0df',  // Border around text.\r\n                                    borderRadius: '5px',  // Rounded corners.\r\n                                    display: 'inline-block',  // To make the background color only wrap the text.\r\n                                    boxShadow: '3px 3px 5px rgba(0, 0, 0, 0.2)'  // A subtle shadow.\r\n                                }}>({this.state.numUtilityVec.map(num => num.toFixed(2)).join(\", \")})</h4>\r\n                            </div>\r\n\r\n                            <table className=\"table table-hover text-center\">\r\n                                <tbody>{vecForTable}</tbody>\r\n                            </table>\r\n\r\n                            <div>\r\n                            <button type=\"button\"\r\n                            className=\"modern-btn\"\r\n                            style={{ height: \"3rem\", width: \"12rem\" }}\r\n                            onClick={this.regenerateUtilityVec}>\r\n                                Randomly Generate\r\n                            </button>\r\n                            </div>\r\n                            <p className=\"text-t-align\" style={{ 'padding': '10px',\r\n                                'fontSize': '16px', 'textAlign': 'left', width: \"22rem\"}}>\r\n                                Click the button to randomly generate another utility vector in the numerical\r\n                                utility range. The bounds in the relational graph will be updated based on the\r\n                                generated utility vector.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <br />\r\n                <h4 style={{\r\n                    'background': 'linear-gradient(to right, #89bfe9, #5271a6)', // 添加从左到右的颜色渐变\r\n                    'borderRadius': '5px',\r\n                    'textAlign': 'left',\r\n                    'padding': '5px',\r\n                    'boxShadow': '3px 3px 5px rgba(0, 0, 0, 0.5)'  // 添加稍微的阴影效果\r\n                }}>\r\n                    <strong><em>&nbsp;PART 3:</em></strong> Statistics\r\n                </h4>\r\n                <p style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '10px',\r\n                    'fontSize': '16px', 'textAlign': 'left'}}>\r\n                    <strong>NOTE: </strong>Here shows two figures and two tables that demonstrate the Diameter of the\r\n                    numerical utility range, the Candidate Cars, and the Cars pruned during the interaction process.\r\n                </p>\r\n                <br/>\r\n                <div>\r\n                    <div className=\"row justify-content-center\" >\r\n                        <div className=\"col-md-auto\">\r\n                            <HistogramForR />\r\n                        </div>\r\n                        <div className=\"col-md-auto\">\r\n                            <Histogram />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <p style={{ 'background': 'gainsboro', 'borderRadius': '5px', 'padding': '10px',\r\n                    'fontSize': '16px', 'textAlign': 'left'}}>\r\n                    &nbsp;\r\n                </p>\r\n                <br />\r\n                <div className=\"scrollable-container\">\r\n                <div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div>\r\n                            <Stats />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n                <br />\r\n                <div>\r\n                    <button type=\"button\"\r\n                            className=\"modern-btn\"\r\n                            style={{ width: \"12rem\" }}\r\n                            onClick={this.startAgain}>\r\n                        Return to Home\r\n                    </button>\r\n                </div>\r\n                <br />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ candidates, attributes, mask, points, mode, radius }) => ({\r\n    attributes,\r\n    mask,\r\n    points,\r\n    mode,\r\n    candidates,\r\n    radius\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showResult: () => {\r\n        dispatch(setActiveComponent(\"ResultGraph\"));\r\n    },\r\n    setLeftPoints: indices => {\r\n        dispatch(setLeftPoints(indices));\r\n    },\r\n    setRadius: radius => {\r\n        dispatch(setRadius(radius));\r\n    },\r\n    restartedAgain: () => {\r\n        dispatch(setActiveComponent(\"Welcome\"));\r\n        dispatch(restart());\r\n    },\r\n    prunePoints: (indices, step) => {\r\n        dispatch(prunePoints(indices, step));\r\n    },\r\n    updateConvexHull: vertices => {\r\n        dispatch(updateConvexHull(vertices));\r\n    }\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(GEGraph);\r\n","import React from \"react\";\nimport {\n    setActiveComponent,\n    setCandidates,\n    toggleMask,\n    changeMode\n} from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { selectCandidates } from \"../utils\";\n\n\n\n// the welcome scene containing a brief introduction and a table to obtain the user's input\nclass End extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"text-center m-auto\" style={{ maxWidth: \"50rem\" }}>\n                <h1>Thanks for Your Participation!</h1>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\n    attributes,\n    mask,\n    points,\n    mode\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(End);\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { setActiveComponent, restart } from \"../actions\";\r\nimport Histogram from \"./Histogram\";\r\nimport HistogramForR from \"./HistogramForR\"\r\n\r\n// show the number of questions asked and the favourite car/remaining cars.\r\nfunction ResultGraph({candidates, leftPoints, attributes, mask, numLeftPoints, restart})\r\n{\r\n  let ths = [];\r\n  attributes.forEach(([attr, config]) => {\r\n    if (mask[attr]) {\r\n      const th = <th key={attr}>{attr}</th>;\r\n      ths.push(th);\r\n    }\r\n  });\r\n  const trs = leftPoints.map((idx, i) => (\r\n      <tr key={i} data-toggle=\"tooltip\">\r\n        {candidates[idx].map((x, j) => {return <td key={j}>{x}</td>})}\r\n      </tr>\r\n  ));\r\n  return (\r\n      <div className=\"justify-content-center\">\r\n        <h4>The Total No. of Questions Asked is: {numLeftPoints.length - 1}.</h4>\r\n        <h4>\r\n          {leftPoints.length === 1\r\n              ? \"Your Favourite Tuple is:\"\r\n              : `${leftPoints.length} Tuples Left in the Database:`}\r\n        </h4>\r\n        <table\r\n            className={classNames(\"table\", \"table-hover\", {\r\n              \"table-fixed\": trs.length > 7\r\n            })}\r\n            style={{\r\n              maxWidth: \"40rem\",\r\n              margin: \"auto\"\r\n            }}\r\n        >\r\n          <thead>\r\n          <tr>{ths}</tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n          <div>\r\n              <div className=\"row justify-content-center\" >\r\n                  <div className=\"col-md-auto\">\r\n                      <HistogramForR />\r\n                  </div>\r\n                  <div className=\"col-md-auto\">\r\n                      <Histogram />\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        <div>\r\n            <button type=\"button\"\r\n                    className=\"modern-btn\"\r\n                    style={{ width: \"12rem\" }}\r\n                    onClick={restart}>\r\n            Return to Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({candidates, leftPoints, attributes, mask, numLeftPoints}) => ({\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  restart: () => {\r\n    dispatch(setActiveComponent(\"Welcome\"));\r\n    dispatch(restart());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ResultGraph);","import React from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport AlgSelction from \"./AlgSelection\";\r\nimport Introduction from \"./Introduction\";\r\nimport PhaseOne from \"./PhaseOne\";\r\nimport Interaction from \"./Interaction\";\r\nimport PhaseTwo from \"./PhaseTwo\";\r\nimport Result from \"./Result\";\r\nimport SPTree from \"./SPTree\"\r\nimport GEGraph from \"./GEGraph\"\r\nimport End from \"./End\"\r\nimport ResultGEGraph from \"./ResultGraph\"\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App({ activeComponent }) {\r\n  switch (activeComponent) {\r\n    case \"Welcome\":\r\n      return <Welcome />;\r\n    case \"AlgSelection\":\r\n      return <AlgSelction />;\r\n    case \"SPTree\":\r\n      return <SPTree />;\r\n    case \"GEGraph\":\r\n      return <GEGraph />;\r\n    case \"Introduction\":\r\n      return <Introduction />\r\n    case \"ResultGraph\":\r\n      return <ResultGEGraph />;\r\n    case \"PhaseTwo\":\r\n      return <PhaseTwo />\r\n    case \"Result\":\r\n      return <Result />;\r\n    case \"End\":\r\n      return <End />;\r\n    default:\r\n      return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activeComponent }) => ({\r\n  activeComponent\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport { loadCarDataset } from \"./utils\";\r\n\r\nwindow.Module = {\r\n  onRuntimeInitialized: async function() {\r\n    const points = await loadCarDataset(\r\n      \"./datasets/car.txt\"\r\n    );\r\n\r\n    const attributes = [\r\n      [\"Type\"],\r\n      [\"Power\"],\r\n      [\"Transmission\"],\r\n      [\"Price (USD)\", { low: 1000, high: 50000, smallerBetter: true }],\r\n      [\"Year\", { low: 2001, high: 2017, smallerBetter: false }],\r\n      [\"Power (HP)\", { low: 50, high: 400, smallerBetter: false }],\r\n      [\"Used KM\", { low: 10000, high: 150000, smallerBetter: true }]\r\n    ];\r\n\r\n    const mask = {};\r\n    attributes.slice(0, 3).forEach(([attr]) => {mask[attr] = 1;});\r\n    attributes.slice(3).forEach(([attr, config]) => {mask[attr] = 0;});\r\n\r\n    const store = createStore(\r\n      rootReducer,\r\n      { points, attributes, mask }\r\n      // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n\r\n    render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  }\r\n};\r\n\r\n//////动态创建了一个 <script> 标签，并将其添加到文档的 <body> 元素中，用于异步加载一个名为 \"web.js\" 的 JavaScript 文件。这样可以在页面加载时并行地加载 JavaScript 代码，从而提高页面的性能和响应速度。\r\nconst script = document.createElement(\"script\");\r\nscript.src = \"run.js\";\r\nscript.async = true;\r\ndocument.body.appendChild(script);\r\n","module.exports = __webpack_public_path__ + \"static/media/MainTitle.41f0125d.png\";","module.exports = __webpack_public_path__ + \"static/media/TitleTree.9f1e9ded.png\";","module.exports = __webpack_public_path__ + \"static/media/TitleGraph.46bc3ca8.png\";"],"sourceRoot":""}